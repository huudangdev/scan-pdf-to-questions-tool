{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/node_modules/gpu-mock.js/index.js","../node_modules/acorn/dist/acorn.es.js","../node_modules/gpu.js/src/input.js","../node_modules/gpu.js/src/texture.js","../node_modules/gpu.js/src/utils.js","../node_modules/gpu.js/src/backend/kernel.js","../node_modules/gpu.js/src/backend/function-builder.js","../node_modules/gpu.js/src/backend/function-tracer.js","../node_modules/gpu.js/src/backend/function-node.js","../node_modules/gpu.js/src/backend/cpu/function-node.js","../node_modules/gpu.js/src/backend/cpu/kernel-string.js","../node_modules/gpu.js/src/backend/cpu/kernel.js","../node_modules/gl/browser_index.js","../node_modules/gpu.js/src/backend/gl/texture/float.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-2d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-3d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-2d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-3d.js","../node_modules/gpu.js/src/backend/gl/texture/graphical.js","../node_modules/gpu.js/src/backend/gl/kernel.js","../node_modules/gpu.js/src/backend/web-gl/function-node.js","../node_modules/gpu.js/src/plugins/triangle-noise.js","../node_modules/gpu.js/src/backend/web-gl/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl/vertex-shader.js","../node_modules/gl-wiretap/index.js","../node_modules/gpu.js/src/backend/gl/kernel-string.js","../node_modules/gpu.js/src/backend/kernel-value.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/index.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value-maps.js","../node_modules/gpu.js/src/backend/web-gl/kernel.js","../node_modules/gpu.js/src/backend/headless-gl/kernel.js","../node_modules/gpu.js/src/backend/web-gl2/function-node.js","../node_modules/gpu.js/src/backend/web-gl2/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl2/vertex-shader.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value-maps.js","../node_modules/gpu.js/src/backend/web-gl2/kernel.js","../node_modules/gpu.js/src/kernel-run-shortcut.js","../node_modules/gpu.js/src/gpu.js","../node_modules/gpu.js/src/alias.js","../node_modules/gpu.js/src/index.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/zeros-3d.js","layer/base.js","layer/activation.js","layer/types.js","layer/add.js","praxis/base.js","praxis/arthur-deviation-weights.js","praxis/arthur-deviation-biases.js","utilities/random-weight.js","utilities/randos.js","utilities/randos-2d.js","layer/random.js","layer/multiply.js","layer/sigmoid.js","layer/arthur-feed-forward.js","utilities/layer-setup.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/feed-forward.js","layer/fully-connected.js","layer/negative.js","layer/multiply-element.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/tanh.js","layer/zeros.js","layer/gru.js","layer/input.js","layer/leaky-relu.js","layer/lstm.js","layer/target.js","layer/output.js","layer/pool.js","layer/relu.js","layer/recurrent.js","layer/regression.js","layer/soft-max.js","layer/svm.js","layer/transpose.js","layer/index.js","likely.js","lookup.js","praxis/adam.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/mse-2d.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","feed-forward.js","../src/thaw.js","../src/block.js","../src/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/stream-browserify/node_modules/isarray/index.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/stream-browserify/node_modules/string_decoder/lib/string_decoder.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/transform.js","../node_modules/stream-browserify/node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","utilities/lookup-table.js","utilities/cast.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","utilities/random.js","recurrent/matrix/random-matrix.js","recurrent/matrix/ones-matrix.js","recurrent/matrix/copy.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/softmax.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","utilities/data-formatter.js","recurrent/rnn.js","utilities/array-lookup-table.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","utilities/to-svg.js","index.js"],"names":["activate","weight","measure","error","module","exports","Math","max","delta","value","exp","tanh","leakyRelu","require","relu","sigmoid","CrossValidate","Classifier","options","json","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","trainTime","testTime","iterations","total","learningRate","hiddenLayers","network","toJSON","array","i","length","j","floor","random","temp","data","k","Error","size","constructor","Array","shuffleArray","newData","keys","forEach","key","avgs","stat","binaryStats","truePos","trueNeg","falsePos","falseNeg","results","isBinary","dclone","slice","splice","result","testPartition","hasOwnProperty","push","precision","recall","accuracy","testSize","trainSize","sets","fromJSON","crossValidateJson","reduce","prev","cur","Infinity","instance","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","toString","has","obj","propName","call","isArray","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","parse","node","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","this$1","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","list","label$1","statementStart","generator","async","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","arguments","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","len","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","esc","parse_dammit","LooseParser","pluginsLoose","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","Input","Int32Array","z","x","y","w","h","d","utils","erectMemoryOptimized3DFloat","subarray","Float32Array","erectMemoryOptimized2DFloat","Texture","settings","texture","dimensions","output","kernel","deleteTexture","acorn","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","systemEndianness","_systemEndianness","getSystemEndianness","b","ArrayBuffer","a","Uint32Array","Uint8Array","isFunction","funcObj","isFunctionString","fn","toLowerCase","getFunctionNameFromString","funcStr","trim","getFunctionBodyFromString","substring","getArgumentNamesFromString","fnStr","clone","isActiveClone","isNaN","getVariableType","strictIntegers","nodeName","Boolean","Number","isInteger","getKernelTextureSize","texelCount","optimizeFloatMemory","ceil","closestSquareDimensions","high","sqrt","low","getMemoryOptimizedFloatTextureSize","bitRatio","totalArea","roundTo","getMemoryOptimizedPackedTextureSize","getDimensions","pad","ret","dim","reverse","from","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","flattenTo","splitArray","part","buffer","byteOffset","getAstString","ast","lines","join","allPropertiesOf","props","getOwnPropertyNames","getPrototypeOf","linesToString","warnDeprecated","oldName","newName","console","warn","functionToIFunction","sourceString","argumentTypes","map","returnType","flipPixels","pixels","width","height","halfHeight","bytesPerRow","Uint8ClampedArray","topOffset","bottomOffset","copyWithin","erectPackedFloat","erect2DPackedFloat","yResults","xStart","xEnd","erect3DPackedFloat","depth","zResults","erectMemoryOptimizedFloat","erectFloat","xResults","erect2DFloat","erect3DFloat","erectArray2","xResultsMax","erect2DArray2","XResultsMax","erect3DArray2","erectArray3","erect2DArray3","erect3DArray3","erectArray4","erect2DArray4","erect3DArray4","flattenFunctionToString","findDependency","thisLookup","doNotDefine","flattened","functionDependencies","flatten","lookups","lookup","foundSource","flattenedFunctionDependencies","functionDependency","splitHTMLImageToRGB","image","mode","gpu","GPU","rKernel","createKernel","pixel","thread","r","gKernel","g","bKernel","aKernel","splitRGBAToCanvases","rgba","visualGPUR","visualKernelR","color","graphical","visualGPUG","visualKernelG","visualGPUB","visualKernelB","visualGPUA","visualKernelA","destroy","canvas","Kernel","useLegacyEncoder","fallbackRequested","onRequestFallback","argumentNames","argumentSizes","argumentBitRatios","kernelArguments","kernelConstants","debug","loopMaxIterations","constants","constantTypes","constantBitRatios","dynamicArguments","dynamicOutput","checkContext","functions","nativeFunctions","subKernels","validate","immutable","pipeline","leadingReturnStatement","followingReturnStatement","fixIntegerDivisionAccuracy","warnVarUsage","setOutput","initCanvas","initContext","initPlugins","args","argType","arg","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","argumentIndex","subKernel","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","threadDim","argumentsTypes","pluginNames","FunctionBuilder","rootNode","functionNodes","subKernelNodes","functionMap","nativeFunctionNames","lookupChain","argumentChain","functionNodeDependencies","functionCalls","nativeFunction","FunctionNode","extraNodeOptions","kernelConstant","needsArgumentType","functionName","functionBuilder","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentTypes","lookupFunctionArgumentName","lookupFunctionArgumentBitRatio","argumentName","triggerImplyArgumentType","argumentType","triggerTrackArgumentSynonym","calleeFunctionName","trackArgumentSynonym","lookupArgumentSynonym","originFunctionName","onFunctionCall","trackFunctionCall","nodeOptions","isRootKernel","onNestedFunction","nestedFunction","traceFunctionAST","addFunctionNode","rootNodeOptions","isSubKernel","functionNode","retList","functionIndex","calledFunctions","traceFunctionCalls","dependantFunctionName","getPrototypes","getPrototypesFromFunctionNames","functionList","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getType","getJsAST","_getNativeFunction","argumentSynonym","synonymIndex","fnNode","calleeArgumentName","synonymUseIndex","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","runningContexts","contexts","identifiers","returnStatements","inLoopInit","scan","run","newContext","currentContext","origin","forceInteger","assignable","states","strictTypingChecking","literalTypes","_string","_internalVariableNames","astMemberExpressionUnroll","firstExpression","astErrorOutput","inParser","freeze","functionAST","dependencies","getDependencies","valueType","realType","isSafe","isSafeDependencies","identifier","getDeclaration","typeLookupMap","constantName","astGeneric","literalKey","isAstMathFunction","inferArgumentTypesIfNeeded","isState","rightType","lastType","isAstVariable","signature","getVariableSignature","findIdentifierOrigin","variableSignature","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","getMemberExpressionDetails","xProperty","yProperty","zProperty","unshift","signatureString","allowedExpressions","retArr","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","splitLines","lineBefore","arrNode","isChildFunction","astFunction","esNode","eNode","brNode","crNode","varDecNode","firstDeclaration","markupType","typeMap","iVarDecNode","sNode","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","shift","CPUFunctionNode","idtNode","getKernelArgumentName","forNode","initArr","testArr","updateArr","bodyArr","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","bNode","varWarn","ifNode","tNode","mNode","synonymName","markupName","isInput","constant","targetTypes","arrLen","subNode","constantsToString","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","JSON","stringify","colorFn","propertyName","getPixelsFn","getPixels","constantKeys","flattenedImageTo3DArray","_imageTo3DArray","flattenedImageTo2DArray","_imageTo2DArray","_kernelString","CPUKernel","mergeSettings","_imageData","_colorData","translatedSources","features","combinedKernel","kernelMap","isIntegerDivisionAccurate","document","createElement","OffscreenCanvas","getContext","checkOutput","fromKernel","getKernelResultType","setupConstants","setupArguments","validateSettings","translateSource","createImageData","kernelString","getKernelString","log","Function","bind","kernelThreadString","filter","_getLoopMaxString","_processConstants","_processArguments","_graphicalKernelBody","_resultKernelBody","variableName","ctx","drawImage","pixelsData","getImageData","imageArray","row","flip","images","imagesArray","_resultKernel1DLoop","_kernelOutput","_resultKernel2DLoop","_resultKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","_mapSubKernels","removeCanvasReference","createContext","gl","_getExtension","getExtension","extDestroy","loseContext","extResize","resize","_supportedExtensions","getSupportedExtensions","extName","GLTextureFloat","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","RGBA","FLOAT","renderRawOutput","renderValues","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","UNSIGNED_BYTE","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","transferValues","formatValues","TextureConstructor","renderOutput","texSize","translatedSource","renderStrategy","compiledFragmentShader","compiledVertexShader","fix","floatTextures","testContext","testCanvas","build","kernelFunction","v1","v2","isStartingVariableName","isVariableChar","char","nextChar","lastKernel","bytes","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderTexture","renderKernels","renderKernelsToTextures","PackedPixelTo3DFloat","PackedPixelTo2DFloat","PackedPixelToFloat","requestFallback","renderKernelsToArrays","readFloatPixelsToFloat32Array","FloatTexture","MemoryOptimizedFloatPixelToMemoryOptimized3DFloat","MemoryOptimizedFloatPixelToMemoryOptimized2DFloat","MemoryOptimizedFloatPixelToMemoryOptimizedFloat","FloatPixelTo3DArray2","FloatPixelTo2DArray2","FloatPixelToArray2","FloatPixelTo3DArray3","FloatPixelTo2DArray3","FloatPixelToArray3","FloatPixelTo3DArray4","FloatPixelTo2DArray4","FloatPixelToArray4","FloatPixelTo3DFloat","FloatPixelTo2DFloat","FloatPixelToFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","outputTexture","subKernelOutputTextures","toArray","updateMaxTexSize","viewport","maxTexSize","_setupOutputTexture","_setupSubOutputTextures","PackedPixelToUint8Array","PackedTexture","FloatPixelToFloat32Array","int","float","vec2","vec3","vec4","jsMathPrefix","localPrefix","WebGLFunctionNode","castLiteralToFloat","castValueToInteger","castLiteralToInteger","round","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","userArgumentName","inForLoopInit","info","actualType","declarationResult","varName","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","functionReturnType","onBeforeRun","setUniform1f","fragmentShader","vertexShader","glWiretap","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","postResult","useTrackablePrimitives","onReadPixels","targetName","subKernelsResultVariableSetup","subKernelsResultIndex","getRenderString","onUnrecognizedArgumentLookup","variable","uploadValue","insertVariable","setIndent","upgradedArguments","kernelArgument","imageIndex","getStringValueHandler","textureName","getContextVariableName","getToArrayString","subKernelResult","subKernelTextureName","getGetPixelsString","constantsUpload","readBackValue","kernelResult","flattenedFunctions","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","WebGLKernelValue","dimensionsId","sizeId","initialValueConstructor","onRequestTexture","onRequestIndex","textureSize","setupTexture","getTransferArrayType","Float64Array","Type","valuesFlat","WebGLKernelValueBoolean","setUniform1i","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","requestTexture","inputImage","activeTexture","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","WebGLKernelValueDynamicHTMLImage","setUniform3iv","setUniform2iv","WebGLKernelValueSingleInput","uploadArrayLength","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","TranserArrayType","preUploadValue","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","inputTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","setShape","valueDimensions","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","setUniform2fv","WebGLKernelValueSingleArray3","setUniform3fv","WebGLKernelValueSingleArray4","setUniform4fv","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","lookupKernelValueType","undefined","triangleNoise","isSupported","testExtensions","canvases","maxTexSizes","WebGLKernel","endianness","extensions","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","switchingKernels","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","getFeatures","WebGLRenderingContext","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","getParameter","MAX_DRAW_BUFFERS_WEBGL","setupFeatureChecks","isContextMatch","alpha","antialias","pluginsToUse","some","pluginName","WEBGL_color_buffer_float","canvasIndex","getPrototypeString","requiredChannels","returnTypes","getReturnTypes","needsArgumentTypes","textureIndexes","createTexture","TEXTURE0","kernelValue","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","updateValue","getSubKernelResultType","scissor","setUniform2f","bindRenderbuffer","RENDERBUFFER","drawArrays","TRIANGLE_STRIP","drawBuffersWEBGL","getTextureCache","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4iv","uniform4fv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","getSource","kernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","idx","destroyExtensions","extension","HeadlessGLKernel","preserveDrawingBuffer","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","RENDERER","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHtmlImageArray","TEXTURE_2D_ARRAY","texImage3D","texSubImage3D","WebGL2KernelValueDynamicHtmlImageArray","WebGL2KernelValueSingleInput","RGBA32F","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","WebGL2Kernel","EXT_color_buffer_float","drawBuffers","texStorage2D","R32F","RG32F","WebGL2RenderingContext","MAX_DRAW_BUFFERS","kernelRunShortcut","shortcut","Promise","accept","reject","replaceKernel","replacementKernel","bindKernelToShortcut","__defineGetter__","__defineSetter__","gpuMock","kernelOrder","kernelTypes","internalKernels","kernels","chooseKernel","addFunction","addNativeFunction","Worker","importScripts","HTMLCanvasElement","ExternalKernel","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","mergedSettings","existingKernel","newKernel","firstKernel","setCanvas","setContext","setPipeline","nativeFunctionArguments","nativeFunctionReturnType","setTimeout","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","alias","fnString","gpuInstance","setup","teardown","makeKernel","createKernelMap","makeDevKernel","kernelInput","zeros","zeros2D","zeros3D","Base","deltas","weights","praxis","praxisOpts","defaults","setupPraxis","layer","predictKernel","compareKernel","previousLayer","nextLayer","jsonLayer","Activation","inputLayer","Internal","Filter","Model","Modifier","Operator","predict","inputWeights1","inputWeights2","Add","inputLayer1","inputLayer2","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","change","momentum","ArthurDeviationWeights","weightsLayer","incomingLayer","deltaLayer","setupKernels","arthurDeviationWeights","ArthurDeviationBiases","arthurDeviationBiases","randomWeight","randos","randos2D","Random","weights1","weights2","sum","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","newDeltas1","newDeltas2","multiply","predict2D","inputs","predict3D","compare2D","compare3D","Sigmoid","noopPraxis","arthurFeedForward","weightsPraxis","biasesLayer","biasesPraxis","multiplyLayer","addLayer","sigmoidLayer","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","rondos2D","fill","randos3D","values","filters","biases","startFilterX","startInputX","endFilterX","filterWidth","inputWidth","startFilterY","startInputY","endFilterY","filterHeight","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","filterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","Convolution","filterCount","bias","learnFilters","learnInputs","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","convolution","trainingPredict","probability","Dropout","isTraining","learnKernel","dropout","feedForward","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","fullyConnected","Negative","negative","inputLayerWeights","compare","MultiplyElement","multiplyElement","ones","ones2D","Ones","errors","Tanh","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","reshapeInput","predict1D","LeakyRelu","lstm","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compare1D","targetValues","Target","compareFn","outputGateConnector","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Pool","outputDepth","pool","Relu","recurrent","setDimensions","transition","Regression","learn","targets","regression","getMaxValue","maxInput","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","exponentials","exponentialsSum","indicator","loss","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","net","maxProp","hashes","hash","memo","toHash","objects2D","table","valueIndex","objects","tableIndex","dataIndex","arrayLength","limit","shape","Adam","adam","getMomentum","decay","previousMomentum","clipByValue","previousMomentums","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","isClippedByValue","MomentumRootMeanSquaredPropagation","momentums","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","layers","mse2d","layerFromJSON","flattenLayers","FeedForward","outputLayer","_updateTrainingOptions","trainDefaults","structure","_inputLayer","_hiddenLayers","_outputLayer","_validateTrainingOptions","_setLogMethod","validations","errorThresh","logPeriod","callback","callbackPeriod","timeout","errorCheckInterval","reinforce","binaryThresh","_connectHiddenLayers","hiddenLayer","_connectLayers","initializeLayers","inputLookup","runInput","outputLookup","status","endTime","_prepTraining","_trainingTick","_calculateTrainingError","_trainPatterns","formattedData","_formatData","initialize","transferredData","transferInput","transferOutput","formattedDatum","_trainPattern","logErrorRate","_calculateDeltas","adjustWeights","tmp","inputDatumCheck","buildLookup","datumParam","outputDatumCheck","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","sizes","concat","getLayer","thaw","thawing","thaws","Thaw","items","defaultSettings","each","tick","clearTimeout","delay","stop","doTick","makeReady","middle","Block","count","_next","addArray","insert","insertArray","window","ReflectOwnKeys","R","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","m","events","existing","TypeError","create","newListener","emit","warned","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","defineProperty","enumerable","RangeError","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","originalListener","off","removeAllListeners","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","env","argv","versions","binding","cwd","chdir","dir","umask","pna","WriteReq","chunk","encoding","CorkedRequest","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","_uint8ArrayToBuffer","_isUint8Array","isBuffer","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","_","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","TrainStream","neuralNetwork","dataFormatDetermined","floodCallback","doneTrainingCallback","updateTrainingOptions","finishStreamIteration","enc","addFormat","firstDatum","formatData","trainPattern","verifyIsInitialized","LookupTable","datum","arraysToFloat32Arrays","arrays","arrayToFloat32Arrays","arrayToFloat32Array","objectsToFloat32Arrays","objectToFloat32Arrays","objectToFloat32Array","default","mse","NeuralNetwork","outputs","calculateDeltas","inputLookupLength","outputLookupLength","inputSize","outputSize","beta1","beta2","epsilon","leakyReluAlpha","activation","prevSize","setActivation","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","toObject","activeLayer","activeWeights","activeBiases","activeOutputs","currentSize","currentWeights","currentBiases","currentOutputs","validateTrainingOptions","setLogMethod","calculateTrainingError","trainPatterns","prepTraining","trainingTick","resolve","thawedTrain","trainError","activeSize","activeOutput","activeError","activeDeltas","nextWeights","nextDeltas","currentErrors","currentDeltas","activeDelta","activeChanges","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","getTypedArrayFn","_formatOutput","addKeys","misclasses","errorSum","actual","expected","misclass","getTrainOptsJSON","needsVar","nodeHandle","layerNumber","nodeKey","layersAsMath","checkFns","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","biasCopies","copyBias","changesCopies","copyChanges","weightsCopies","copyWeights","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getMSE","getChanges","changeBiases","weightedSum","texturizeInputData","calcDeltas","outputTextures","texturizeOutputData","RecurrentConnection","RecurrentInput","RecurrentZeros","recurrentZeros","Recurrent","initialLayers","_hiddenLayerSets","_outputConnection","setLayer","flattenedLayers","_inputLayers","_outputLayers","_recurrentIndices","_model","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","setRecurrentInput","_previousInputs","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","initializeDeep","hiddenLayersIndex","Matrix","ix","matrix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","gaussRandom","returnV","vVal","u","randomInteger","randomN","mu","std","RandomMatrix","OnesMatrix","product","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","leftRowRoot","rightRow","backPropagateValue","rowPluckIndex","rowBase","sig","mwi","maxVal","cloneNegative","addB","allOnes","multiplyB","multiplyElementB","reluB","rowPluck","rowPluckB","sigmoidB","tanhB","softmax","Equation","inputRow","inputValue","forwardFn","backpropagationFn","self","iForward","iBackpropagate","abs","runIndex","logProbabilities","probabilities","log2","maxv","maxix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sampleI","maxI","RNN","stepCache","runs","ratioClipped","model","equations","allMatrices","equationConnections","outputConnector","inputRange","mapModel","getModel","hiddenSize","lastHiddenSize","equation","equationConnection","initialLayerInputs","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrix","trainInput","backpropagate","log2ppl","bindEquation","inputIndex","inputMax","equationIndex","predictTargetIndex","backpropagateIndex","regc","clipval","numClipped","numTot","matrixIndex","rawInput","isSampleI","temperature","maxPredictionLength","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","hiddenSizes","jsonString","previousConnectionIndex","connection","matrixToString","stateIndex","matrixOrigin","toInner","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","inputMatrix","previousResult","addUnrecognized","fromArrayInputOutput","ArrayLookupTable","RNNTimeStep","runObject","runNumbers","runObjects","runArrays","forecast","forecastNumbers","forecastObjects","forecastArrays","setSize","trainInputOutput","trainArrays","trainNumbers","dataShape","toTable2D","toInputTable2D","toOutputTable2D","predictTarget","lastOutput","inputArray","toArrayShort","toObjectPartial","totalSize","outputIndex","toArrays","lookupTable","errorMSE","errorsAbs","errorCount","forceForecast","formatInputData","formatOutputData","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","recurrentJSONTypes","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToSVG","previousSize","rnnToSVG","recurrentLine","drawRecurrentConnections","moveX","moveY","x1","y1","x2","y2","getFeedForwardLayers","layerCount","getRecurrentLayers","wrapSVG","svgBody","getSizes","toSVG","mergedOptions","isRNN","layerTypes","likely","brain","utilities"],"mappings":"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KAAKuiB,GAAQQ,QACzB5V,KAAAA,aAAc,GAGrB/J,EAAMoB,UAAUzB,cAAgB,WAC1B,KAAKwgB,eAAiBhB,GAAQM,OACzB5V,KAAAA,QAAQyG,MAERzG,KAAAA,QAAQjN,KAAKuiB,GAAQM,QACzB1V,KAAAA,aAAc,GAGrB/J,EAAMkC,KAAKvC,cAAgB,SAASsgB,GAC9BA,GAAAA,IAAajgB,EAAM+C,UAAW,CAC5BwD,IAAAA,EAAQ,KAAKsD,QAAQhP,OAAS,EAC9B,KAAKgP,QAAQtD,KAAW4Y,GAAQS,OAC3B/V,KAAAA,QAAQtD,GAAS4Y,GAAQU,WAEzBhW,KAAAA,QAAQtD,GAAS4Y,GAAQW,MAE/B/V,KAAAA,aAAc,GAGrB/J,EAAMJ,KAAKD,cAAgB,SAASsgB,GAC9BM,IAAAA,GAAU,EACV,KAAKtnB,QAAQwN,aAAe,GAAKwZ,IAAajgB,EAAMc,MACnC,OAAf,KAAKtI,QAAmB,KAAKuR,aACd,UAAf,KAAKvR,OAAqB,KAAK4nB,wBAC/BG,GAAU,GAEXxW,KAAAA,YAAcwW,GAGrB,IAAIrlB,GAAO,CACA,MAAA,CACP,QACA,kBACA,OACA,aACA,QACA,MACA,WACA,eACA,SACA,gBACA,SACA,iBACA,KACA,QACA,0BACA,OACA,0BACA,OACA,0BACA,MACA,+BACA,QACA,0BACA,MACA,0BACA,MACA,OACA,+BACA,KACA,aACA,MACA,YACA,MACA,QACA,kBACA,iBACA,sBACA,qBACA,WACA,MACA,gBACA,UACA,kBACA,SACA,YACA,MACA,sBACA,OACA,uBACA,OACA,cACA,MACA,WACA,MACA,cACA,OACA,eACA,SACA,0BACA,MACA,YACA,QACA,OACA,0BACA,QACA,iBACA,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEkB,iBAAA,CAClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEQ,OAAA,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJK,MAAMyJ,UAAUpI,KAAK4jB,MAAMtlB,GAAKulB,MAAOvlB,GAAKwlB,kBAC5CxlB,GAAKylB,GAAKzlB,GAAKwlB,iBACfxlB,GAAK0lB,GAAK1lB,GAAK2lB,kBAAoB3lB,GAAK4lB,IAAM5lB,GAAK6lB,OAEnD,IAAIC,GAAOrY,EAAO3D,UAEdic,GAAwB,SAA+BpC,GACpDA,KAAAA,OAASA,EACTqC,KAAAA,WAAa,OAASrC,EAAO5lB,QAAQwN,aAAe,EAAI,KAAO,KAAOoY,EAAO5lB,QAAQwN,aAAe,EAAI,IAAM,IAC9G/B,KAAAA,OAAS,GACTyW,KAAAA,MAAQ,GACRpV,KAAAA,MAAQ,EACRob,KAAAA,SAAU,EACVC,KAAAA,SAAU,EACV1iB,KAAAA,IAAM,EACN2iB,KAAAA,aAAe,EACfC,KAAAA,gBAAkB,GAClBC,KAAAA,6BAA8B,EAC9BC,KAAAA,mBAAqB,EACrBC,KAAAA,iBAAmB,EACnBC,KAAAA,WAAa,GACbC,KAAAA,mBAAqB,IAgE5B,SAASC,GAAoBC,GACvBA,OAAAA,GAAM,MAAiBhjB,OAAOC,aAAa+iB,IAC/CA,GAAM,MACChjB,OAAOC,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","file":"brain-browser.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, delta) {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nfunction activate(value) {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight * (1 - weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n *\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return (1 - weight * weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","const leakyRelu = require('./leaky-relu');\nconst relu = require('./relu');\nconst sigmoid = require('./sigmoid');\nconst tanh = require('./tanh');\n\nmodule.exports = { leakyRelu, relu, sigmoid, tanh };\n","class CrossValidate {\n\n  /**\n   *\n   * @param {NeuralNetwork|constructor} Classifier\n   * @param {object} [options]\n   */\n  constructor(Classifier, options) {\n    this.Classifier = Classifier;\n    this.options = options;\n    this.json = null;\n  }\n\n  /**\n   *\n   * @param {object} trainOpts\n   * @param {object} trainSet\n   * @param {object} testSet\n   * @returns {void|*}\n   */\n  testPartition(trainOpts, trainSet, testSet) {\n    const classifier = new this.Classifier(this.options);\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats = classifier.test(testSet);\n    const endTest = Date.now();\n    const stats = Object.assign({}, testStats, {\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      learningRate: classifier.trainOpts.learningRate,\n      hiddenLayers: classifier.hiddenLayers,\n      network: classifier.toJSON()\n    });\n\n    return stats;\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} trainOpts\n   * @param {number} [k]\n   * @returns {\n   *  {\n   *    avgs: {\n   *      error: number,\n   *      trainTime: number,\n   *      testTime: number,\n   *      iterations: number,\n   *      error: number\n   *    },\n   *    stats: {\n   *      truePos: number,\n   *      trueNeg: number,\n   *      falsePos: number,\n   *      falseNeg: number,\n   *      total: number\n   *    },\n   *    sets: Array\n   *  }\n   * }\n   */\n  train(data, trainOpts = {}, k = 4) {\n    if (data.length < k) {\n      throw new Error(`Training set size is too small for ${ data.length } k folds of ${ k }`);\n    }\n\n    const size = data.length / k;\n\n    if (data.constructor === Array) {\n      this.shuffleArray(data);\n    } else {\n      const newData = {};\n      this.shuffleArray(Object.keys(data)).forEach((key) => {\n        newData[key] = data[key];\n      });\n      data = newData;\n    }\n\n    const avgs = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0\n    };\n\n    const stats = {\n      total: 0\n    };\n\n    const binaryStats = {\n      total: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0\n    };\n\n    const results = [];\n    let stat;\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg')\n          && result.hasOwnProperty('falsePos')\n          && result.hasOwnProperty('trueNeg')\n          && result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      for (stat in avgs) {\n        if (stat in avgs) {\n          avgs[stat] += result[stat];\n        }\n      }\n\n      for (stat in stats) {\n        if (stat in stats) {\n          stats[stat] += result[stat];\n        }\n      }\n\n      results.push(result);\n    }\n\n    for (stat in avgs) {\n      if (stat in avgs) {\n        avgs[stat] /= k;\n      }\n    }\n\n    if (isBinary) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n\n    return this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results\n    };\n  }\n\n  toNeuralNetwork() {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON() {\n    return this.json;\n  }\n\n  fromJSON(crossValidateJson) {\n    const Classifier = this.Classifier;\n    const json = crossValidateJson.sets.reduce((prev, cur) => prev.error < cur.error ? prev : cur, {error: Infinity}).network;\n    if (Classifier.fromJSON) {\n      return Classifier.fromJSON(json);\n    }\n    const instance = new Classifier();\n    instance.fromJSON(json);\n    return instance;\n  }\n}\n\nmodule.exports = CrossValidate;\n","function setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    // cpu is not flipped by default\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  // these are added for api compatibility, but have no affect\n  kernel.setWarnVarUsage = () => {\n    return kernel;\n  };\n  kernel.setOptimizeFloatMemory = () => {\n    return kernel;\n  };\n  kernel.setArgumentTypes = () => {\n    return kernel;\n  };\n  kernel.setDebug = () => {\n    return kernel;\n  };\n  kernel.setLoopMaxIterations = () => {\n    return kernel;\n  };\n  kernel.setPipeline = () => {\n    return kernel;\n  };\n  kernel.setPrecision = () => {\n    return kernel;\n  };\n  kernel.setImmutable = () => {\n    return kernel;\n  };\n  kernel.setFunctions = () => {\n    return kernel;\n  };\n  kernel.addSubKernel = () => {\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  // https://stackoverflow.com/a/41973289/1324039\n  const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n  const bytesPerRow = width * 4;\n  // make a temp buffer to hold one row\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    // make copy of a row on the top half\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    // copy a row from the bottom half to the top\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    // copy the copy of the top half row to the bottom half\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.3\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","class Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};","/**\n * @desc WebGl Texture implementation in JS\n * @param {ITextureSettings} settings\n */\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    this.texture = texture;\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = null;\n    this.type = type;\n  }\n\n  /**\n   * @desc Converts the Texture into a JavaScript Array\n   * @returns {Number[]|Number[][]|Number[][][]}\n   */\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  /**\n   * @desc Deletes the Texture\n   */\n  delete() {\n    return this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  Texture\n};","const acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\n/**\n *\n * @desc Various utility functions / snippets of code that GPU.JS uses internally.\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n */\nconst utils = {\n  /**\n   *\n   * @desc Gets the system endianness, and cache it\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  /**\n   * @descReturn TRUE, on a JS function\n   * @param {Function} funcObj - Object to validate if its a function\n   * @returns  {Boolean} TRUE if the object is a JS function\n   */\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  /**\n   * @desc Return TRUE, on a valid JS function string\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} fn - String of JS function to validate\n   * @returns {Boolean} TRUE if the string passes basic validation\n   */\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  /**\n   * @desc Return the function name from a JS function string\n   * @param {String} funcStr - String of JS function to validate\n   * @returns {String} Function name string (if found)\n   */\n  getFunctionNameFromString(funcStr) {\n    return FUNCTION_NAME.exec(funcStr)[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  /**\n   * @desc Return list of argument names extracted from a javascript function\n   * @param {String} fn - String of JS function to validate\n   * @returns {String[]}  Array representing all the parameter names\n   */\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  /**\n   * @desc Returns a clone\n   * @param {Object} obj - Object to clone\n   * @returns {Object|Array} Cloned object\n   */\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); // changed\n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  /**\n   * @desc Checks if is an array or Array-like object\n   * @param {Object} array - The argument object to check if is array\n   * @returns {Boolean}  true if is array or Array-like object\n   */\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  /**\n   * @desc Evaluate the argument type, to apply respective logic for it\n   * @param {Object} value - The argument object to evaluate type\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   */\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n\n    if (value.nodeName === 'IMG') {\n      return 'HTMLImage';\n    } else {\n      if (value.hasOwnProperty('type')) {\n        return value.type;\n      }\n      return 'Unknown';\n    }\n  },\n\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    // if given dimensions == a 2d image\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param {Number} length\n   * @returns {TextureDimensions}\n   */\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  /**\n   * A texture takes up four\n   * @param {OutputDimensions} dimensions\n   * @param {Number} bitRatio\n   * @returns {TextureDimensions}\n   */\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param dimensions\n   * @param bitRatio\n   * @returns {*|TextureDimensions}\n   */\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  /**\n   * @desc Return the dimension of an array.\n   * @param {Array|String|Texture|Input} x - The array\n   * @param {Boolean} [pad] - To include padding in the dimension calculation\n   * @returns {OutputDimensions}\n   */\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  /**\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  /**\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 4d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Float32Array|Uint16Array|Uint8Array} array\n   * @param {Float32Array} target\n   */\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  /**\n   *\n   * @desc Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Number[]} array - The array to split into chunks\n   * @param {Number} part - elements in one chunk\n   *\n   * @returns {Number[]} An array of smaller chunks\n   */\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  /**\n   * @param {Array} lines - An Array of strings\n   * @returns {String} Single combined String, separated by *\\n*\n   */\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  /**\n   *\n   * @param {String|Function} source\n   * @param {IFunctionSettings} [settings]\n   * @returns {IFunction}\n   */\n  functionToIFunction(source, settings) {\n    settings = settings || {};\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  },\n  flipPixels: (pixels, width, height) => {\n    // https://stackoverflow.com/a/41973289/1324039\n    const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n    const bytesPerRow = width * 4;\n    // make a temp buffer to hold one row\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      // make copy of a row on the top half\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      // copy a row from the bottom half to the top\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      // copy the copy of the top half row to the bottom half\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  /**\n   *\n   * @param {String} source\n   * @param {Object} settings\n   * @return {String}\n   */\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body);\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          for (let i = 0; i < ast.body.length; i++) {\n            result.push(flatten(ast.body[i]), ';\\n');\n          }\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          switch (ast.declarations[0].id.type) {\n            case 'ObjectPattern': {\n              const source = flatten(ast.declarations[0].init);\n              const properties = ast.declarations.map(declaration => declaration.id.properties.map(flatten))[0];\n              if (/this/.test(source)) {\n                const result = [];\n                const lookups = properties.map(thisLookup);\n                for (let i = 0; i < lookups.length; i++) {\n                  const lookup = lookups[i];\n                  if (lookup === null) continue;\n                  const property = properties[i];\n                  result.push(`${ast.kind} ${ property } = ${ lookup };\\n`);\n                }\n\n                return result.join('');\n              }\n              return `${ast.kind} { ${properties} } = ${source}`;\n            }\n            case 'ArrayPattern':\n              return `${ast.kind} [ ${ ast.declarations.map(declaration => flatten(declaration.id)).join(', ') } ] = ${flatten(ast.declarations[0].init)}`;\n          }\n          if (doNotDefine && doNotDefine.indexOf(ast.declarations[0].id.name) !== -1) {\n            return '';\n          }\n          return `${ast.kind} ${ast.declarations[0].id.name} = ${flatten(ast.declarations[0].init)}`;\n        case 'CallExpression': {\n          if (ast.callee.property.name === 'subarray') {\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          }\n          if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          }\n          if (ast.callee.object.type === 'ThisExpression') {\n            functionDependencies.push(findDependency('this', ast.callee.property.name));\n            return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          } else if (ast.callee.object.name) {\n            const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n            if (foundSource === null) {\n              // we're not flattening it\n              return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n            } else {\n              functionDependencies.push(foundSource);\n              // we're flattening it\n              return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n            }\n          } else if (ast.callee.object.type === 'MemberExpression') {\n            return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          } else {\n            throw new Error('unknown ast.callee');\n          }\n        }\n        case 'ReturnStatement':\n          return `return ${flatten(ast.argument)}`;\n        case 'BinaryExpression':\n          return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n        case 'UnaryExpression':\n          if (ast.prefix) {\n            return `${ast.operator} ${flatten(ast.argument)}`;\n          } else {\n            return `${flatten(ast.argument)} ${ast.operator}`;\n          }\n          case 'ExpressionStatement':\n            return `(${flatten(ast.expression)})`;\n          case 'ArrowFunctionExpression':\n            return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n          case 'Literal':\n            return ast.raw;\n          case 'Identifier':\n            return ast.name;\n          case 'MemberExpression':\n            if (ast.object.type === 'ThisExpression') {\n              return thisLookup(ast.property.name);\n            }\n            if (ast.computed) {\n              return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n            }\n            return flatten(ast.object) + '.' + flatten(ast.property);\n          case 'ThisExpression':\n            return 'this';\n          case 'NewExpression':\n            return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          case 'ForStatement':\n            return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n          case 'AssignmentExpression':\n            return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n          case 'UpdateExpression':\n            return `${flatten(ast.argument)}${ast.operator}`;\n          case 'IfStatement':\n            return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n          case 'ThrowStatement':\n            return `throw ${flatten(ast.argument)}`;\n          case 'ObjectPattern':\n            return ast.properties.map(flatten).join(', ');\n          case 'ArrayPattern':\n            return ast.elements.map(flatten).join(', ');\n          case 'DebuggerStatement':\n            return 'debugger;';\n          case 'ConditionalExpression':\n            return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n          case 'Property':\n            if (ast.kind === 'init') {\n              return flatten(ast.key);\n            }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + ';\\n');\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  splitHTMLImageToRGB: (image, mode) => {\n    const gpu = new GPU({ mode });\n\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  /**\n   * A visual debug utility\n   * @param rgba\n   * @param width\n   * @param height\n   * @param mode\n   * @return {Object[]}\n   */\n  splitRGBAToCanvases: (rgba, width, height, mode) => {\n    const { GPU } = require('./gpu.js');\n\n    const visualGPUR = new GPU({ mode });\n    const visualKernelR = visualGPUR.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelR(rgba);\n\n    const visualGPUG = new GPU({ mode });\n    const visualKernelG = visualGPUG.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelG(rgba);\n\n    const visualGPUB = new GPU({ mode });\n    const visualKernelB = visualGPUB.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelB(rgba);\n\n    const visualGPUA = new GPU({ mode });\n    const visualKernelA = visualGPUA.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelA(rgba);\n\n    visualGPUR.destroy();\n    visualGPUG.destroy();\n    visualGPUB.destroy();\n    visualGPUA.destroy();\n\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  }\n};\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};","const { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  /**\n   * @type {Boolean}\n   */\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  /**\n   * @type {IKernelFeatures}\n   * Used internally to populate the kernel.feature, which is a getter for the output of this value\n   */\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  /**\n   *\n   * @param {string|object} source\n   * @param [settings]\n   */\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    /**\n     * Name of the arguments found from parsing source argument\n     * @type {String[]}\n     */\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n\n\n    /**\n     * The function source\n     * @type {String}\n     */\n    this.source = source;\n\n    /**\n     * The size of the kernel's output\n     * @type {Number[]}\n     */\n    this.output = null;\n\n    /**\n     * Debug mode\n     * @type {Boolean}\n     */\n    this.debug = false;\n\n    /**\n     * Graphical mode\n     * @type {Boolean}\n     */\n    this.graphical = false;\n\n    /**\n     * Maximum loops when using argument values to prevent infinity\n     * @type {Number}\n     */\n    this.loopMaxIterations = 0;\n\n    /**\n     * Constants used in kernel via `this.constants`\n     * @type {Object}\n     */\n    this.constants = null;\n    this.constantTypes = null;\n    this.constantBitRatios = null;\n    this.dynamicArguments = false;\n    this.dynamicOutput = true;\n\n    /**\n     *\n     * @type {Object}\n     */\n    this.canvas = null;\n\n    /**\n     *\n     * @type {WebGLRenderingContext}\n     */\n    this.context = null;\n\n    /**\n     *\n     * @type {Boolean}\n     */\n    this.checkContext = null;\n\n    /**\n     *\n     * @type {GPU}\n     */\n    this.gpu = null;\n\n    /**\n     *\n     * @type {IGPUFunction[]}\n     */\n    this.functions = null;\n\n    /**\n     *\n     * @type {IGPUNativeFunction[]}\n     */\n    this.nativeFunctions = null;\n\n    /**\n     *\n     * @type {ISubKernel[]}\n     */\n    this.subKernels = null;\n\n    /**\n     *\n     * @type {Boolean}\n     */\n    this.validate = true;\n\n    /**\n     * Enforces kernel to write to a new array or texture on run\n     * @type {Boolean}\n     */\n    this.immutable = false;\n\n    /**\n     * Enforces kernel to write to a texture on run\n     * @type {Boolean}\n     */\n    this.pipeline = false;\n\n    /**\n     * Make GPU use single precison or unsigned.  Acceptable values: 'single' or 'unsigned'\n     * @type {String|null}\n     * @enum 'single' | 'unsigned'\n     */\n    this.precision = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); // Flatten output object\n            continue;\n          }\n          break;\n        case 'functions':\n          if (typeof settings.functions[0] === 'function') {\n            this.functions = settings.functions.map(source => utils.functionToIFunction(source));\n            continue;\n          }\n          break;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  /**\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   * @abstract\n   */\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Run the kernel program, and send the output to renderOutput\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   * @returns {Float32Array|Float32Array[]|Float32Array[][]|void} Result The final output of the program, as float, and as Textures for reuse.\n   * @abstract\n   */\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  /**\n   * @abstract\n   * @return {Object}\n   */\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @abstract\n   * @return {Object}\n   */\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @param {IFunctionSettings} settings\n   * @return {Object};\n   * @abstract\n   */\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {IArguments} args - The actual parameters sent to the Kernel\n   */\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    // setup sizes\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  /**\n   * Setup constants\n   */\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  /**\n   * @desc Set output dimensions of the kernel function\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   */\n  setOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          this.output = [output.x, output.y, output.z];\n        } else {\n          this.output = [output.x, output.y];\n        }\n      } else {\n        this.output = [output.x];\n      }\n    } else {\n      this.output = output;\n    }\n    return this;\n  }\n\n  /**\n   * @desc Toggle debug mode\n   * @param {Boolean} flag - true to enable debug\n   */\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  /**\n   * @desc Toggle graphical output mode\n   * @param {Boolean} flag - true to enable graphical output\n   */\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  /**\n   * @desc Set the maximum number of loop iterations\n   * @param {number} max - iterations count\n   *\n   */\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  /**\n   * @desc Set Constants\n   */\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  /**\n   *\n   * @param [IKernelValueTypes] constantTypes\n   * @return {Kernel}\n   */\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  /**\n   *\n   * @param {IFunction[]|KernelFunction[]} functions\n   * @return {Kernel}\n   */\n  setFunctions(functions) {\n    if (typeof functions[0] === 'function') {\n      this.functions = functions.map(source => utils.functionToIFunction(source));\n    } else {\n      this.functions = functions;\n    }\n    return this;\n  }\n\n  /**\n   * Set writing to texture on/off\n   * @param flag\n   * @return {Kernel}\n   */\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  /**\n   * Set precision to 'unsigned' or 'single'\n   * @param {String} flag 'unsigned' or 'single'\n   * @return {Kernel}\n   */\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  /**\n   * @param flag\n   * @return {Kernel}\n   * @deprecated\n   */\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  /**\n   * Set to immutable\n   * @param flag\n   * @return {Kernel}\n   */\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  /**\n   * @desc Bind the canvas to kernel\n   * @param {Object} canvas\n   */\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  /**\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   * @param flag\n   * @return {Kernel}\n   */\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  /**\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  /**\n   *\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setWarnVarUsage(flag) {\n    this.warnVarUsage = flag;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   * @returns {Object}\n   */\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  /**\n   * @deprecated\n   * @returns {Object}\n   */\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  /**\n   * @desc Bind the webGL instance to kernel\n   * @param {WebGLRenderingContext} context - webGl instance to bind\n   */\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  /**\n   *\n   * @param [IKernelValueTypes|GPUVariableType[]] argumentTypes\n   * @return {Kernel}\n   */\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  /**\n   * @desc Validate settings\n   * @abstract\n   */\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {ISubKernel} subKernel - function (as a String) of the subKernel to add\n   */\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  /**\n   * @desc Destroys all memory associated with this kernel\n   * @param {Boolean} [removeCanvasReferences] remove any associated canvas references\n   */\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  /**\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * @param value\n   * @returns {number}\n   */\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      // 8 and 16 are upconverted to float32\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  /**\n   * @returns {number[]}\n   */\n  getPixels() {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  toJSON() {\n    const settings = {\n      output: this.output,\n      threadDim: this.threadDim,\n      pipeline: this.pipeline,\n      argumentNames: this.argumentNames,\n      argumentsTypes: this.argumentTypes,\n      constants: this.constants,\n      pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n      returnType: this.returnType,\n    };\n    return {\n      settings\n    };\n  }\n}\n\nmodule.exports = {\n  Kernel\n};","/**\n * @desc This handles all the raw state, converted state, etc. of a single function.\n * [INTERNAL] A collection of functionNodes.\n * @class\n */\nclass FunctionBuilder {\n  /**\n   *\n   * @param {Kernel} kernel\n   * @param {FunctionNode} FunctionNode\n   * @param {object} [extraNodeOptions]\n   * @returns {FunctionBuilder}\n   * @static\n   */\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n      warnVarUsage,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i]\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerTrackArgumentSynonym = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const lookupArgumentSynonym = (originFunctionName, functionName, argumentName) => {\n      return functionBuilder.lookupArgumentSynonym(originFunctionName, functionName, argumentName);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, returnType) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerTrackArgumentSynonym,\n        lookupArgumentSynonym,\n        onFunctionCall,\n        warnVarUsage,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerTrackArgumentSynonym,\n      lookupArgumentSynonym,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerTrackArgumentSynonym,\n        lookupArgumentSynonym,\n        onFunctionCall,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  /**\n   *\n   * @param {IFunctionBuilderSettings} [settings]\n   */\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.argumentChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  /**\n   * @desc Add the function node directly\n   *\n   * @param {FunctionNode} functionNode - functionNode to add\n   *\n   */\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  /**\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} [retList] - Returning list of function names that is traced. Including itself.\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      if (retList.indexOf(functionName) === -1) {\n        retList.push(functionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      // Check if function already exists\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); //ensure JS trace is done\n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        /**\n         * https://github.com/gpujs/gpu.js/issues/207\n         * if dependent function is already in the list, because a function depends on it, and because it has\n         * already been traced, we know that we must move the dependent function to the end of the the retList.\n         * */\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  /**\n   * @desc Return the string for a function\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   */\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  /**\n   * @desc Return the string for a function\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   */\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  /**\n   * @desc Get string from function names\n   * @param {String[]} functionList - List of function to build string\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   */\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  /**\n   * @desc Return string of all functions converted\n   * @param {String[]} functionList - List of function names to build the string.\n   * @returns {Array} Prototypes of all functions converted\n   */\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  /**\n   * @desc Get string for a particular function name\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {String} settings - The string, of all the various functions. Trace optimized if functionName given\n   */\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          // detect circlical logic\n          if (this.lookupChain[i].ast === ast) {\n            // detect if arguments have not resolved, preventing a return type\n            // if so, go ahead and resolve them, so we can resolve the return type\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        // get ready for a ride!\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    // function not found, maybe native?\n    return null;\n\n    /**\n     * first iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = null\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = null\n     * calcErrorOutput.targets = null\n     * calcErrorOutput.returns = null\n     * calcDeltasSigmoid.error = null\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = null\n     *\n     * resolvable are:\n     * calcErrorOutput.output\n     * calcErrorOutput.targets\n     * calcErrorOutput.returns\n     *\n     * second iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = null\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = Number\n     * calcErrorOutput.targets = Array\n     * calcErrorOutput.returns = Number\n     * calcDeltasSigmoid.error = null\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = null\n     *\n     * resolvable are:\n     * calcDeltasSigmoid.error\n     * calcDeltasSigmoid.returns\n     * kernel.returns\n     *\n     * third iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = Number\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = Number\n     * calcErrorOutput.targets = Array\n     * calcErrorOutput.returns = Number\n     * calcDeltasSigmoid.error = Number\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = Number\n     *\n     *\n     */\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      } else {\n        throw new Error('argument bit ratio not found');\n      }\n    } else {\n      const node = this._getFunction(functionName);\n      const argumentSynonym = node.argumentSynonym[node.synonymIndex];\n      if (!argumentSynonym) {\n        throw new Error('argument synonym not found');\n      }\n      return this.lookupFunctionArgumentBitRatio(argumentSynonym.functionName, argumentSynonym.argumentName);\n    }\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    if (!this._isFunction(calleeFunctionName)) return;\n    const node = this._getFunction(calleeFunctionName);\n    if (!node.argumentSynonym) {\n      node.argumentSynonym = {};\n    }\n    const calleeArgumentName = node.argumentNames[argumentIndex];\n    if (!node.argumentSynonym[calleeArgumentName]) {\n      node.argumentSynonym[calleeArgumentName] = {};\n    }\n    node.synonymIndex++;\n    node.argumentSynonym[node.synonymIndex] = {\n      functionName,\n      argumentName,\n      calleeArgumentName,\n      calleeFunctionName,\n    };\n  }\n\n  lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\n    if (originFunctionName === functionName) return argumentName;\n    if (!this._isFunction(functionName)) return null;\n    const node = this._getFunction(functionName);\n    const argumentSynonym = node.argumentSynonym[node.synonymUseIndex];\n    if (!argumentSynonym) return null;\n    if (argumentSynonym.calleeArgumentName !== argumentName) return null;\n    node.synonymUseIndex++;\n    if (originFunctionName !== functionName) {\n      return this.lookupArgumentSynonym(originFunctionName, argumentSynonym.functionName, argumentSynonym.argumentName);\n    }\n    return argumentSynonym.argumentName;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};","class FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.inLoopInit = false;\n    this.scan(ast);\n  }\n\n  get currentContext() {\n    return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({}, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  /**\n   * Recursively scans AST for declarations and functions, and add them to their respective context\n   * @param ast\n   */\n  scan(ast) {\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.scan(ast.body);\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        if (ast.right) this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        this.scan(ast.declarations);\n        break;\n      case 'VariableDeclarator':\n        const { currentContext } = this;\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          forceInteger: this.inLoopInit,\n          assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name),\n        };\n        currentContext[ast.id.name] = declaration;\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement':\n        this.newContext(() => {\n          if (ast.init) {\n            this.inLoopInit = true;\n            this.scan(ast.init);\n            this.inLoopInit = false;\n          }\n          if (ast.test) {\n            this.scan(ast.test);\n          }\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n        break;\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier':\n        this.identifiers.push({\n          context: this.currentContext,\n          ast,\n        });\n        break;\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.scan(ast.object);\n        this.scan(ast.property);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'ThisExpression':\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        if (ast.test) this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'Literal':\n        break;\n      case 'DebuggerStatement':\n        break;\n      case 'EmptyStatement':\n        break;\n      case 'BreakStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};","const acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\n/**\n *\n * @desc Represents a single function, inside JS, webGL, or openGL.\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\nclass FunctionNode {\n  /**\n   *\n   * @param {string|object} source\n   * @param {IFunctionSettings} [settings]\n   */\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.declarations = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerTrackArgumentSynonym = null;\n    this.lookupArgumentSynonym = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.synonymIndex = -1;\n    this.synonymUseIndex = 0;\n    this.argumentSynonym = {};\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  /**\n   * @param {String} name\n   * @returns {boolean}\n   */\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  /**\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        //babel sniffing\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    //babel sniffing\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    // Failure, unknown expression\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  /**\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.ast;\n   */\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    // take out the function object, outside the var declarations\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.declarations = [];\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, context, name, origin, forceInteger, assignable } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (forceInteger) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      this.declarations.push({\n        valueType,\n        dependencies,\n        isSafe: this.isSafeDependencies(dependencies),\n        ast,\n        name,\n        context,\n        origin,\n        assignable,\n      });\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i]);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\n        for (let j = 0; j < this.declarations.length; j++) {\n          const declaration = this.declarations[j];\n          if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\n            return declaration;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   * @param {Object} ast - Identifier\n   * @returns {String} Type of the parameter\n   */\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  /**\n   * Generally used to lookup the value type returned from a member expressions\n   * @param {String} type\n   * @return {String}\n   */\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  /**\n   * @desc Return the name of the *user argument*(subKernel argument) corresponding\n   * to the argument supplied to the kernel\n   *\n   * @param {String} name - Name of the argument\n   * @returns {String} Name of the parameter\n   */\n  getKernelArgumentName(name) {\n    if (!this.lookupArgumentSynonym) return null;\n    const argumentIndex = this.argumentNames.indexOf(name);\n    if (argumentIndex === -1) return null;\n    return this.lookupArgumentSynonym('kernel', this.name, name);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  /**\n   * Recursively looks up type for ast expression until it's found\n   * @param ast\n   * @returns {String|null}\n   */\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = `${ast.start},${ast.end}`;\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'BinaryExpression':\n          // modulos is Number\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              const type = this.getVariableType(ast);\n              if (!type) {\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\n              }\n              return type;\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'g':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'b':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'a':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    // ensure arguments are filled in, so when we lookup return type, we already can infer it\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'asin',\n      'atan',\n      'atan2',\n      'ceil',\n      'cos',\n      'exp',\n      'floor',\n      'log',\n      'log2',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sqrt',\n      'tan',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  /**\n   *\n   * @param ast\n   * @param dependencies\n   * @param isNotSafe\n   * @return {Array}\n   */\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift('.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift('.value');\n        }\n      } else if (ast.name) {\n        signature.unshift('value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift('fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed string array\n   */\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  /**\n   * @desc To throw the AST error, with its location.\n   * @param {string} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   * @abstract\n   * @param {Object} ast\n   * @param {String[]} retArr\n   * @returns {String[]}\n   */\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[`${ast.start},${ast.end}`] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    const firstDeclaration = declarations[0];\n    const init = firstDeclaration.init;\n    let type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\n    if (type === 'LiteralInteger') {\n      // We had the choice to go either float or int, choosing float\n      type = 'Number';\n    }\n    const markupType = typeMap[type];\n    if (!markupType) {\n      throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n    }\n    let dependencies = this.getDependencies(firstDeclaration.init);\n    throw new Error('remove me');\n    this.declarations[firstDeclaration.id.name] = Object.freeze({\n      type,\n      dependencies,\n      isSafe: dependencies.every(dependency => dependency.isSafe)\n    });\n    const initResult = [`${type} user_${firstDeclaration.id.name}=`];\n    this.astGeneric(init, initResult);\n    result.push(initResult.join(''));\n\n    // first declaration is done, now any added ones setup\n    for (let i = 1; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      dependencies = this.getDependencies(declaration);\n      throw new Error('Remove me');\n      this.declarations[declaration.id.name] = Object.freeze({\n        type,\n        dependencies,\n        isSafe: false\n      });\n      this.astGeneric(declaration, result);\n    }\n\n    retArr.push(retArr, result.join(','));\n    retArr.push(';');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   * @param {Object} iVarDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    for (let i = 0; i < sNode.expressions.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(sNode.expressions, retArr);\n    }\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  /**\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  /**\n   *\n   * @param ast\n   * @return {IFunctionNodeMemberExpressionDetails}\n   */\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  varWarn() {\n    console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLImage': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};","const { FunctionNode } = require('../function-node');\n\n/**\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\nclass CPUFunctionNode extends FunctionNode {\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunction(ast, retArr) {\n\n    // Setup function return type and name\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      // Arguments handling\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      // Function opening\n      retArr.push(') {\\n');\n    }\n\n    // Body statement iteration\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      // Function closing\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to *return* statement\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *literal value*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astLiteral(ast, retArr) {\n\n    // Reject non numeric literals\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *binary* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          const name = this.getKernelArgumentName(idtNode.name);\n          if (name) {\n            retArr.push('user_' + name);\n          } else {\n            retArr.push('user_' + idtNode.name);\n          }\n        }\n    }\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *for-loop* expression\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    // have all parts, now make them safe\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *while* loop\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed javascript string\n   */\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *do while* loop\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Block* statement\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); // this prevents recursive removal of braces\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(declarations[i], retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *If* Statement\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *This* expression\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      // handle simple types\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    // handle more complex types\n    // argument may have come from a parent\n    const synonymName = this.getKernelArgumentName(name);\n    const markupName = `${origin}_${synonymName || name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(synonymName || name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *call* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns  {Array} the append retArr\n   */\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      // Failure, unknown expression\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    // Get the full function call, unrolled\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    // Register the function into the called registry\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    // track the function was called\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    // Call the function\n    retArr.push(functionName);\n\n    // Open arguments space\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    // Add the arguments\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      // in order to track return type, even though this is CPU\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    // Close arguments space\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('new Float32Array([');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push('])');\n\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};","const { utils } = require('../../utils');\nconst { Input } = require('../../input');\n\nfunction constantsToString(constants) {\n  const results = [];\n  for (const p in constants) {\n    const constant = constants[p];\n    switch (typeof constant) {\n      case 'number':\n      case 'boolean':\n        results.push(`${p}:${constant}`);\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constants = ${constantsToString(cpuKernel.constants)};`,\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},',\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`,\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    })\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _imageTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _imageTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in constants) {\n    const constant = constants[p];\n    switch (typeof constant) {\n      case 'number':\n      case 'boolean':\n        continue;\n    }\n    _constants[p] = constant;\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};","const { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\n/**\n * @desc Kernel Implementation for CPU.\n * <p>Instantiates properties to the CPU Kernel.</p>\n */\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  /**\n   * @desc The current mode in which gpu.js is executing.\n   */\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    return null;\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = []\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  /**\n   * @desc Builds the Kernel, by generating the kernel\n   * string using thread dimensions, and arguments\n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   */\n  build() {\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  /**\n   * @desc Generates kernel string for this kernel program.\n   *\n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      })\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    const kernelString = this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() }\n  const constants = this.constants;\n  const _this = this;\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._processConstants() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n    return kernelString;\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  /**\n   * @desc Get the maximum loop size String.\n   * @returns {String} result\n   */\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLImage':\n          result.push(`    const constants_${p} = this._imageTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLImage':\n          result.push(`    ${variableName} = this._imageTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _imageTo2DArray(image) {\n    const canvas = this.canvas;\n    if (canvas.width < image.width) {\n      canvas.width = image.width;\n    }\n    if (canvas.height < image.height) {\n      canvas.height = image.height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n    const pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n    const imageArray = new Array(image.height);\n    let index = 0;\n    for (let y = image.height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(image.width);\n      for (let x = 0; x < image.width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; // r\n        pixel[1] = pixelsData[index++] / 255; // g\n        pixel[2] = pixelsData[index++] / 255; // b\n        pixel[3] = pixelsData[index++] / 255; // a\n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    // cpu is not flipped by default\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._imageTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\n      case 2:\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\n      case 3:\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultKernel1DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultKernel2DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultKernel3DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};","'use strict'\n\nfunction createContext (width, height, options) {\n  width = width | 0\n  height = height | 0\n  if (!(width > 0 && height > 0)) {\n    return null\n  }\n\n  var canvas = document.createElement('canvas')\n  if (!canvas) {\n    return null\n  }\n  var gl\n  canvas.width = width\n  canvas.height = height\n\n  try {\n    gl = canvas.getContext('webgl', options)\n  } catch (e) {\n    try {\n      gl = canvas.getContext('experimental-webgl', options)\n    } catch (e) {\n      return null\n    }\n  }\n\n  var _getExtension = gl.getExtension\n  var extDestroy = {\n    destroy: function () {\n      var loseContext = _getExtension.call(gl, 'WEBGL_lose_context')\n      if (loseContext) {\n        loseContext.loseContext()\n      }\n    }\n  }\n\n  var extResize = {\n    resize: function (w, h) {\n      canvas.width = w\n      canvas.height = h\n    }\n  }\n\n  var _supportedExtensions = gl.getSupportedExtensions().slice()\n  _supportedExtensions.push(\n    'STACKGL_destroy_context',\n    'STACKGL_resize_drawingbuffer')\n  gl.getSupportedExtensions = function () {\n    return _supportedExtensions.slice()\n  }\n\n  gl.getExtension = function (extName) {\n    var name = extName.toLowerCase()\n    if (name === 'stackgl_resize_drawingbuffer') {\n      return extResize\n    }\n    if (name === 'stackgl_destroy_context') {\n      return extDestroy\n    }\n    return _getExtension.call(gl, extName)\n  }\n\n  return gl || null\n}\n\nmodule.exports = createContext\n","const { utils } = require('../../../utils');\nconst { Texture } = require('../../../texture');\n\nclass GLTextureFloat extends Texture {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};","const { utils } = require('../../../utils');\nconst { Texture } = require('../../../texture');\n\nclass GLTextureUnsigned extends Texture {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};","const { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};","const { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};","const { Kernel } = require('../kernel');\nconst { Texture } = require('../../texture');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\n/**\n * @abstract\n * @extends Kernel\n */\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number'\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    // have we not got whole numbers for 6/3 or 6030401/3991\n    // add more here if others see this problem\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  /**\n   * @abstract\n   */\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @abstract\n   */\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @type {IKernelFeatures}\n   */\n  static get features() {\n    throw new Error(`\"features\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @abstract\n   */\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @desc Fix division by factor of 3 FP accuracy bug\n   * @param {Boolean} fix - should fix\n   */\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  /**\n   * @desc Toggle output mode\n   * @param {String} flag - 'single' or 'unsigned'\n   */\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  /**\n   * @desc Toggle texture output mode\n   * @param {Boolean} flag - true to enable floatTextures\n   * @deprecated\n   */\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  /**\n   * A highly readable very forgiving micro-parser for a glsl function that gets argument types\n   * @param {String} source\n   * @returns {{argumentTypes: String[], argumentNames: String[]}}\n   */\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      // begin MULTI_LINE_COMMENT handling\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n      // end MULTI_LINE_COMMENT handling\n\n      // begin COMMENT handling\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n      // end COMMENT handling\n\n      // being FUNCTION_ARGUMENTS handling\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n      // end FUNCTION_ARGUMENTS handling\n\n      // begin DECLARE_VARIABLE handling\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n      // end DECLARE_VARIABLE handling\n\n      // Progress to next character\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.renderStrategy = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  /**\n   * Picks a render strategy for the now finally parsed kernel\n   * @param args\n   * @return {null|KernelOutput}\n   */\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderStrategy = renderStrategy.FloatTexture;\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized3DFloat;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized2DFloat;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimizedFloat;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DFloat;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DFloat;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.renderStrategy = renderStrategy.FloatPixelToFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  /**\n   * @abstract\n   * @returns String\n   */\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  renderTexture() {\n    return new this.TextureConstructor({\n      texture: this.outputTexture,\n      size: this.texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n    });\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  readMemoryOptimizedFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {Boolean} [flip]\n   * @return {Uint8Array}\n   */\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    // flipped by default, so invert\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = new this.TextureConstructor({\n        texture: this.subKernelOutputTextures[i],\n        size: this.texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n      }).toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = new this.TextureConstructor({\n        texture: this.subKernelOutputTextures[i],\n        size: this.texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n      });\n    }\n    return result;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.program) {\n      this.threadDim = [this.output[0], this.output[1] || 1, this.output[2] || 1];\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      this.context.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      this._setupOutputTexture();\n      if (this.subKernels && this.subKernels.length > 0) {\n        this._setupSubOutputTextures();\n      }\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n}\n\nconst renderStrategy = Object.freeze({\n  PackedPixelToUint8Array: Symbol('PackedPixelToUint8Array'),\n  PackedPixelToFloat: Symbol('PackedPixelToFloat'),\n  PackedPixelTo2DFloat: Symbol('PackedPixelTo2DFloat'),\n  PackedPixelTo3DFloat: Symbol('PackedPixelTo3DFloat'),\n  PackedTexture: Symbol('PackedTexture'),\n  FloatPixelToFloat32Array: Symbol('FloatPixelToFloat32Array'),\n  FloatPixelToFloat: Symbol('FloatPixelToFloat'),\n  FloatPixelTo2DFloat: Symbol('FloatPixelTo2DFloat'),\n  FloatPixelTo3DFloat: Symbol('FloatPixelTo3DFloat'),\n  FloatPixelToArray2: Symbol('FloatPixelToArray2'),\n  FloatPixelTo2DArray2: Symbol('FloatPixelTo2DArray2'),\n  FloatPixelTo3DArray2: Symbol('FloatPixelTo3DArray2'),\n  FloatPixelToArray3: Symbol('FloatPixelToArray3'),\n  FloatPixelTo2DArray3: Symbol('FloatPixelTo2DArray3'),\n  FloatPixelTo3DArray3: Symbol('FloatPixelTo3DArray3'),\n  FloatPixelToArray4: Symbol('FloatPixelToArray4'),\n  FloatPixelTo2DArray4: Symbol('FloatPixelTo2DArray4'),\n  FloatPixelTo3DArray4: Symbol('FloatPixelTo3DArray4'),\n  FloatTexture: Symbol('FloatTexture'),\n  MemoryOptimizedFloatPixelToMemoryOptimizedFloat: Symbol('MemoryOptimizedFloatPixelToFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized2DFloat: Symbol('MemoryOptimizedFloatPixelTo2DFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized3DFloat: Symbol('MemoryOptimizedFloatPixelTo3DFloat'),\n});\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel,\n  renderStrategy\n};","const { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nconst jsMathPrefix = 'Math.';\nconst localPrefix = 'this.';\n\n/**\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective WebGL code\n * @extends FunctionNode\n * @returns the converted WebGL function string\n */\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunction(ast, retArr) {\n    // Setup function return type and name\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      // looking up return type, this is a little expensive, and can be avoided if returnType is set\n      let lastReturn = null;\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      // Arguments handling\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        // The type is too loose ended, here we descide to solidify a type, lets go with float\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        retArr.push(type);\n        retArr.push(' ');\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n    }\n\n    // Function opening\n    retArr.push(') {\\n');\n\n    // Body statement iteration\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    // Function closing\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to *return* statement\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            // Running astGeneric forces the LiteralInteger to pick a type, and here, if we are returning a float, yet\n            // the LiteralInteger has picked to be an integer because of constraints on it we cast it to float.\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n  astLiteral(ast, retArr) {\n    // Reject non numeric literals\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = `${ast.start},${ast.end}`;\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *binary* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('div_with_int_check(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          // if right value is actually a float, don't loose that information, cast left to right rather than the usual right to left\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        if (this.isState('in-for-loop-test')) {\n          this.pushState('building-integer');\n          retArr.push('int(');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(')');\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': 'mod',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      // https://stackoverflow.com/a/47543127/1324039\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      const userArgumentName = this.getKernelArgumentName(idtNode.name);\n      if (userArgumentName) {\n        retArr.push(`user_${userArgumentName}`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    }\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *for-loop* expression\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      const { declarations } = forNode.init;\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n      if (isSafe) {\n        for (let i = 0; i < initArr.length; i++) {\n          if (initArr[i].includes && initArr[i].includes(',')) {\n            isSafe = false;\n          }\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.pushState('in-for-loop-test');\n      this.astGeneric(forNode.test, testArr);\n      this.popState('in-for-loop-test');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    // have all parts, now make them safe\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *while* loop\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *do while* loop\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  /**\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    // TODO: casting needs implemented here\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Block* statement\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); // this prevents recursive removal of braces\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const inForLoopInit = this.isState('in-for-loop-init');\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const valueType = info.valueType;\n      const actualType = this.getType(declaration.init);\n      let dependencies = info.dependencies;\n      let type = inForLoopInit ? 'Integer' : actualType;\n      if (type === 'LiteralInteger') {\n        // We had the choice to go either float or int, choosing float\n        type = 'Number';\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\n        // Since we are assigning to a float, ensure valueType is reset to that\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        // Since we are assigning to a float, ensure valueType is reset to that\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          result.push(';');\n          declarationResult.push(`${markupType} `);\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      result.push(declarationResult.join(''));\n    }\n\n    retArr.push(result.join(''));\n    if (!inForLoopInit) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *If* Statement\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${ast.start}_${ast.end}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    // switch with just a default:\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    // regular switches:\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      // default\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        // all others\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *This* expression\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ name }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      // handle simple types\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    // handle more complex types\n    // argument may have come from a parent\n    let synonymName = this.getKernelArgumentName(name);\n\n    const markupName = `${origin}_${synonymName || name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        // Get from local vec4\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          // bitRatio is always 4 here, javascript doesn't yet have 8 or 16 bit support\n          // TODO: make 8 or 16 bit work anyway!\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *call* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns  {Array} the append retArr\n   */\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    // Its a math operator or this.something(), remove the prefix\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    // Issue #212, BABEL!\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    // if this if grows to more than one, lets use a switch\n    if (functionName === 'atan2') {\n      functionName = 'atan';\n    }\n\n    // Register the function into the called registry\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    // track the function was called\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    // Call the function\n    retArr.push(functionName);\n\n    // Open arguments space\n    retArr.push('(');\n\n    // Add the arguments\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              this.triggerTrackArgumentSynonym(this.name, argument.name, functionName, i);\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    // Close arguments space\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('vec' + arrLen + '(');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};","const source = `\n\nuniform highp float triangle_noise_seed;\nhighp float triangle_noise_shift = 0.000001;\n\n//https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n//note: remaps v to [0;1] in interval [a;b]\nfloat remap( float a, float b, float v )\n{\n  return clamp( (v-a) / (b-a), 0.0, 1.0 );\n}\n\nfloat n4rand( vec2 n )\n{\n  float t = fract( triangle_noise_seed + triangle_noise_shift );\n  float nrnd0 = nrand( n + 0.07*t );\n  float nrnd1 = nrand( n + 0.11*t );  \n  float nrnd2 = nrand( n + 0.13*t );\n  float nrnd3 = nrand( n + 0.17*t );\n  float result = (nrnd0+nrnd1+nrnd2+nrnd3) / 4.0;\n  triangle_noise_shift = result + 0.000001;\n  return result;\n}`;\n\nconst name = 'triangle-noise-noise';\n\nconst functionMatch = 'Math.random()';\n\nconst functionReplace = 'n4rand(vTexCoord)';\n\nconst functionReturnType = 'Number';\n\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('triangle_noise_seed', Math.random());\n};\n\n/**\n *\n * @type IPlugin\n */\nmodule.exports = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};","// language=GLSL\nconst fragmentShader = `__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};","const vertexShader = `precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};","/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {IGLWiretapOptions} [options]\n * @returns {GLWiretapProxy}\n */\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { // need arguments from this, fyi\n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); // flush out errors\n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\n/**\n *\n * @param extension\n * @param {IGLExtensionWiretapOptions} options\n * @returns {*}\n */\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${Array.from(arg).join(',')})`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  // wrapped in object, so track-able\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n","const { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\n/**\n *\n * @param {Kernel} Kernel\n * @param {KernelVariable[]} args\n * @param {Kernel} originKernel\n * @param {string} [setupContextString]\n * @param {string} [destroyContextString]\n * @returns {string}\n */\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      for (let i = 0; i < kernel.kernelConstants.length; i++) {\n        const value = kernel.kernelConstants[i];\n        if (value.type === 'HTMLImageArray') {\n          const constant = kernel.constants[value.name];\n          const variable = `uploadValue_${value.name}[${constant.indexOf(value.uploadValue)}]`;\n          context.insertVariable(variable, kernel.constants);\n          return variable;\n        } else if (value.uploadValue === argument) {\n          const variable = `uploadValue_${value.name}`;\n          context.insertVariable(variable, value);\n          return variable;\n        }\n      }\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n  const upgradedArguments = Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'number':\n      case 'boolean':\n        return new arg.constructor(arg);\n    }\n    return arg;\n  });\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      // primitives\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n\n        // non-primitives\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n      case 'HTMLImage':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, upgradedArguments);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('/** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push(kernelArgument.getStringValueHandler());\n  });\n  result.push('/** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const results = kernel.renderKernels();\n    const textureName = context.getContextVariableName(kernel.outputTexture);\n    result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName) }\n      },`);\n    const { subKernels, subKernelOutputTextures } = kernel;\n    for (let i = 0; i < subKernels.length; i++) {\n      const texture = subKernelOutputTextures[i];\n      const subKernel = subKernels[i];\n      const subKernelResult = results[subKernel.property];\n      const subKernelTextureName = context.getContextVariableName(texture);\n      result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\n      },`);\n    }\n    result.push(`    };`);\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\nmodule.exports = {\n  glKernelString\n};","/**\n * @class KernelValue\n */\nclass KernelValue {\n  /**\n   *\n   * @param {IKernelArgumentSettings} settings\n   */\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.id = `${this.origin}_${name}`;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    // handle textures\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};","const { utils } = require('../../../utils');\nconst { Input } = require('../../../input');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  /**\n   *\n   * @param {IWebGLKernerlValueSettings} settings\n   */\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n    this.setupTexture();\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n  /**\n   * @desc Adds kernel parameters to the Value Texture,\n   * binding it to the context, etc.\n   *\n   * @param {Array|Float32Array|Uint16Array} value - The actual Value supplied to the kernel\n   * @param {Number} length - the expected total length of the output array\n   * @param {Object} [Type]\n   * @returns {Float32Array|Uint16Array|Uint8Array} flattened array to transfer\n   */\n  formatArrayTransfer(value, length, Type) {\n    if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\n      // not already flat\n      const valuesFlat = new Float32Array(length);\n      utils.flattenTo(value, valuesFlat);\n      return valuesFlat;\n    } else {\n      switch (value.constructor) {\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Int8Array:\n        case Uint16Array:\n        case Int16Array:\n        case Float32Array:\n        case Int32Array: {\n          const valuesFlat = new(Type || value.constructor)(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n        default: {\n          const valuesFlat = new Float32Array(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n      }\n    }\n  }\n\n  /**\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * @param value\n   * @returns {number}\n   */\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  /**\n   * Used for when we want a string output of our kernel, so we can still input values to the kernel\n   */\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.dimensions = [width, height, 1];\n    this.requestTexture();\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.setupTexture();\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.setupTexture();\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};","const { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType\n};","const { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst triangleNoise = require('../../plugins/triangle-noise');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [triangleNoise];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\n/**\n * @desc Kernel Implementation for WebGL.\n * <p>This builds the shaders and runs them on the GPU,\n * the outputs the result back as float(enabled by default) and Texture.</p>\n *\n * @prop {Object} textureCache - webGl Texture cache\n * @prop {Object} programUniformLocationCache - Location of program variables in memory\n * @prop {Object} framebuffer - Webgl frameBuffer\n * @prop {Object} buffer - WebGL buffer\n * @prop {Object} program - The webGl Program\n * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n * @prop {Boolean} pipeline - Set output type to FAST mode (GPU to GPU via Textures), instead of float\n * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n * @prop {Array} argumentTypes - Types of parameters sent to the Kernel\n * @prop {String} compiledFragmentShader - Compiled fragment shader string\n * @prop {String} compiledVertexShader - Compiled Vertical shader string\n * @extends GLKernel\n */\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  /**\n   *\n   * @param {String} source\n   * @param {IKernelSettings} settings\n   */\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.subKernelOutputTextures = null;\n    this.kernelArguments = null;\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n    this.outputTexture = null;\n\n    /**\n     *\n     * @type {Int32Array|null}\n     */\n    this.maxTexSize = null;\n    this.switchingKernels = false;\n    this.onRequestSwitchKernel = null;\n\n    this.mergeSettings(source.settings || settings);\n\n    /**\n     * The thread dimensions, x, y and z\n     * @type {Array|null}\n     */\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n    this.textureCache = {};\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      // Default width and height, to fix webgl issue in safari\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    // default plugins\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      // `source` is from object, json\n      if (settings.pluginNames) { //TODO: in context of JSON support, pluginNames may not exist here\n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  // TODO: move channel checks to new place\n  _oldtranslateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n\n    // need this line to automatically get returnType\n    const translatedSource = functionBuilder.getPrototypeString('kernel');\n\n    if (!this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    let requiredChannels = 0;\n    const returnTypes = functionBuilder.getReturnTypes();\n    for (let i = 0; i < returnTypes.length; i++) {\n      switch (returnTypes[i]) {\n        case 'Float':\n        case 'Number':\n        case 'Integer':\n          requiredChannels++;\n          break;\n        case 'Array(2)':\n          requiredChannels += 2;\n          break;\n        case 'Array(3)':\n          requiredChannels += 3;\n          break;\n        case 'Array(4)':\n          requiredChannels += 4;\n          break;\n      }\n    }\n\n    if (features && requiredChannels > features.channelCount) {\n      throw new Error('Too many channels!');\n    }\n\n    return this.translatedSource = translatedSource;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    // TODO: remove\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n    // TODO: end remove\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.context.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onUpdateValueMismatch: () => {\n          this.switchingKernels = true;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n        }\n      });\n      this.kernelArguments.push(kernelArgument);\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.context.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n    }\n  }\n\n  build() {\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    if (!this.immutable) {\n      this._setupOutputTexture();\n      if (\n        this.subKernels !== null &&\n        this.subKernels.length > 0\n      ) {\n        this._setupSubOutputTextures();\n      }\n    }\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments } = this;\n    const texSize = this.texSize;\n    const gl = this.context;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', this.threadDim);\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    this.switchingKernels = false;\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (!this.outputTexture || this.immutable) {\n          this._setupOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return new this.TextureConstructor({\n          texture: this.outputTexture,\n          size: texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context,\n        });\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._setupOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._setupSubOutputTextures();\n      }\n      this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  /**\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   * @returns {Object} Output Texture Cache\n   */\n  getOutputTexture() {\n    return this.outputTexture;\n  }\n\n  /**\n   * @desc Setup and replace output texture\n   */\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    const texture = this.outputTexture = this.context.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    // if (this.precision === 'single') {\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    // } else {\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    // }\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        // TODO: investigate if webgl1 can handle gl.RED usage in gl.texImage2D, otherwise, simplify the below\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            } else {\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            }\n            break;\n          case 'Array(2)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          case 'Array(3)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          case 'Array(4)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          default:\n            if (!this.graphical) {\n              throw new Error('Unhandled return type');\n            }\n        }\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      }\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n\n  /**\n   * @desc Setup and replace sub-output textures\n   */\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.subKernelOutputTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.context.createTexture();\n      this.subKernelOutputTextures.push(texture);\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n    }\n  }\n\n  /**\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   * @param {String} name - Name of the argument\n   */\n  getArgumentTexture(name) {\n    return this.getTextureCache(`ARGUMENT_${name}`);\n  }\n\n  /**\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   * @returns {Object} Texture cache\n   */\n  getTextureCache(name) {\n    if (this.textureCache.hasOwnProperty(name)) {\n      return this.textureCache[name];\n    }\n    return this.textureCache[name] = this.context.createTexture();\n  }\n\n  /**\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n  detachTextureCache(name) {\n    delete this.textureCache[name];\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  /**\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defined variables,\n   * as well as, dimension sizes, etc.\n   */\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  /**\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   */\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString()\n    };\n  }\n\n  /**\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   */\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  /**\n   * @desc Get the maximum loop size String.\n   * @returns {String} result\n   */\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   * @returns {String} result\n   */\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  /**\n   * @desc Get texture coordinate string for the program\n   * @returns {String} result\n   */\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  /**\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   * @returns {String} result\n   */\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  /**\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   * @returns {String} result\n   */\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  /**\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\n   * @returns {String} result\n   */\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float div_with_int_check(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x)/int(y));\n  }\n  return x / y;\n}` :\n      '';\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {String} result\n   */\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  /**\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   * @returns {String} result\n   */\n  getKernelString() {\n    let kernelResultDeclaration;\n    switch (this.returnType) {\n      case 'Array(2)':\n        kernelResultDeclaration = 'vec2 kernelResult';\n        break;\n      case 'Array(3)':\n        kernelResultDeclaration = 'vec3 kernelResult';\n        break;\n      case 'Array(4)':\n        kernelResultDeclaration = 'vec4 kernelResult';\n        break;\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        kernelResultDeclaration = 'float kernelResult';\n        break;\n      default:\n        if (this.graphical) {\n          kernelResultDeclaration = 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        kernelResultDeclaration\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        kernelResultDeclaration\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {String} src - Shader string\n   * @param {Object} map - Variables/Constants associated with shader\n   */\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  /**\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Fragment Shader string\n   */\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  /**\n   * @desc Get the vertical shader String\n   * @param {Array|IArguments} args - The actual parameters sent to the Kernel\n   * @returns {string} Vertical Shader string\n   */\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.constructor.vertexShader;\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (this.outputTexture) {\n      this.context.deleteTexture(this.outputTexture);\n    }\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n\n    const keys = Object.keys(this.textureCache);\n\n    for (let i = 0; i < keys.length; i++) {\n      const name = keys[i];\n      this.context.deleteTexture(this.textureCache[name]);\n    }\n\n    if (this.subKernelOutputTextures) {\n      for (let i = 0; i < this.subKernelOutputTextures.length; i++) {\n        this.context.deleteTexture(this.subKernelOutputTextures[i]);\n      }\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};","const getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { // just in case, edge cases\n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getFeatures() {\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    const context = getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n    return context;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};","const { WebGLFunctionNode } = require('../web-gl/function-node');\n\n/**\n * @class WebGL2FunctionNode\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective webGL code.\n * @extends WebGLFunctionNode\n * @returns the converted webGL function string\n */\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      const userArgumentName = this.getKernelArgumentName(idtNode.name);\n      if (userArgumentName) {\n        retArr.push(`user_${userArgumentName}`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};","// language=GLSL\nconst fragmentShader = `#version 300 es\n__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler2DArray;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};","const vertexShader = `#version 300 es\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};","const { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const highp int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform highp int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    // TODO: Do we really need highp?\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('../../web-gl/kernel-value/index');\n\nclass WebGL2KernelValueHtmlImageArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2DArray ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // Upload the images into the texture.\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHtmlImageArray\n};","const { WebGL2KernelValueHtmlImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHtmlImageArray extends WebGL2KernelValueHtmlImageArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2DArray ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    this.dimensions = [images[0].width, images[0].height, images.length];\n    this.textureSize = [images[0].width, images[0].height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHtmlImageArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    //TODO: do we really need highp?\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    //TODO: Do we really need highp?\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};","const { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};","const { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};","const { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};","const { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHtmlImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHtmlImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType\n};","const { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\n/**\n *\n * @type {IKernelFeatures}\n */\nlet features = null;\n\n/**\n * @extends WebGLKernel\n */\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    // from global\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      kernelMap: true,\n      isTextureFloat: true,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    return super.getIsIntegerDivisionAccurate();\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  /**\n   *\n   * @returns {{isFloatRead: Boolean, isIntegerDivisionAccurate: Boolean, kernelMap: Boolean, isTextureFloat: Boolean}}\n   */\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    const context = this.canvas.getContext('webgl2', settings);\n    return context;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const features = this.constructor.features;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize } = this;\n    const gl = this.context;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (!this.outputTexture || this.immutable) {\n          this._setupOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return new this.TextureConstructor({\n          texture: this.outputTexture,\n          size: texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context\n        });\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._setupOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._setupSubOutputTextures();\n      }\n      gl.drawBuffers(this.drawBuffersMap);\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getOutputTexture() {\n    return this.outputTexture;\n  }\n\n  _setupOutputTexture() {\n    const { texSize } = this;\n    const gl = this.context;\n    const texture = this.outputTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n            } else {\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R32F, texSize[0], texSize[1]);\n            }\n            break;\n          case 'Array(2)':\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32F, texSize[0], texSize[1]);\n            break;\n          case 'Array(3)': // there is _no_ 3 channel format which is guaranteed to be color-renderable\n          case 'Array(4)':\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n            break;\n          default:\n            throw new Error('Unhandled return type');\n        }\n      } else {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n      }\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n\n  _setupSubOutputTextures() {\n    const { texSize } = this;\n    const gl = this.context;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.subKernelOutputTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.context.createTexture();\n      this.subKernelOutputTextures.push(texture);\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      // TODO: upgrade this\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n    }\n  }\n\n  /**\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   */\n  _getHeaderString() {\n    return '';\n  }\n\n  /**\n   * @desc Get texture coordinate string for the program\n   * @returns {String} result\n   */\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'in highp vec2 vTexCoord;\\n';\n    } else {\n      return 'out highp vec2 vTexCoord;\\n';\n    }\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {String} result\n   */\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  /**\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   * @returns {String} result\n   */\n  getKernelString() {\n    let kernelResultDeclaration;\n    switch (this.returnType) {\n      case 'Array(2)':\n        kernelResultDeclaration = 'vec2 kernelResult';\n        break;\n      case 'Array(3)':\n        kernelResultDeclaration = 'vec3 kernelResult';\n        break;\n      case 'Array(4)':\n        kernelResultDeclaration = 'vec4 kernelResult';\n        break;\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        kernelResultDeclaration = 'float kernelResult';\n        break;\n      default:\n        if (this.graphical) {\n          kernelResultDeclaration = 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        kernelResultDeclaration,\n        'layout(location = 0) out vec4 data0'\n      );\n      for (let i = 0; i < subKernels.length; i++) {\n        const subKernel = subKernels[i];\n        result.push(\n          subKernel.returnType === 'Integer' ?\n          `int subKernelResult_${ subKernel.name } = 0` :\n          `float subKernelResult_${ subKernel.name } = 0.0`,\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n        );\n      }\n    } else {\n      result.push(\n        'out vec4 data0',\n        kernelResultDeclaration\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\n      );\n    }\n    return result;\n  }\n\n  /**\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Fragment Shader string\n   */\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  /**\n   * @desc Get the vertical shader String\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Vertical Shader string\n   *\n   */\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.constructor.vertexShader;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};","const { utils } = require('./utils');\n\n/**\n * Makes kernels easier for mortals (including me)\n * @param kernel\n * @returns {function()}\n */\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    if (kernel.renderKernels) {\n      run = function() {\n        kernel.run.apply(kernel, arguments);\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n        return kernel.renderKernels();\n      };\n    } else if (kernel.renderOutput) {\n      run = function() {\n        kernel.run.apply(kernel, arguments);\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n        return kernel.renderOutput();\n      };\n    } else {\n      run = function() {\n        return kernel.run.apply(kernel, arguments);\n      };\n    }\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  /**\n   * Run kernel in async mode\n   * @returns {Promise<KernelOutput>}\n   */\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n    shortcut.kernel = kernel;\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  shortcut.kernel = kernel;\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          kernel[property].apply(kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        if (property === 'toString') {\n          shortcut.toString = function() {\n            return kernel.toString.apply(kernel, arguments);\n          };\n        } else {\n          shortcut[property] = kernel[property].bind(kernel);\n        }\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => {\n        return kernel[property];\n      });\n      shortcut.__defineSetter__(property, (value) => {\n        kernel[property] = value;\n      });\n    }\n  }\n}\nmodule.exports = {\n  kernelRunShortcut\n};","const { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\n/**\n *\n * @type {Kernel[]}\n */\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\n/**\n *\n * @type {string[]}\n */\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\n/**\n * The GPU.js library class which manages the GPU context for the creating kernels\n */\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  /**\n   * @desc TRUE is platform supports OffscreenCanvas\n   */\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  /**\n   * @desc TRUE if platform supports WebGL\n   */\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports WebGL2\n   */\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports HeadlessGL\n   */\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  /**\n   *\n   * @desc TRUE if platform supports Canvas\n   */\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  /**\n   * @desc TRUE if platform supports HTMLImageArray}\n   */\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports single precision}\n   * @returns {boolean}\n   */\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  /**\n   * Creates an instance of GPU.\n   * @param {IGPUSettings} [settings] - Settings to set mode, and other properties\n   */\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    // add functions from settings\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    // add native functions from settings\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\n      }\n    }\n  }\n\n  /**\n   * Choose kernel type and save on .Kernel property of GPU\n   */\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  /**\n   * @desc This creates a callable function object to call the kernel function with the argument parameter set\n   * @param {Function|String|object} source - The calling to perform the conversion\n   * @param {Object} [settings] - The parameter configuration object\n   * @return {Kernel} callable function to run\n   */\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      this.kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    // handle conversion of argumentTypes\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n        warnVarUsage: kernelRun.warnVarUsage,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(args, kernel) {\n      const argumentTypes = new Array(args.length);\n      for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        const type = kernel.argumentTypes[i];\n        if (arg.type) {\n          argumentTypes[i] = arg.type;\n        } else {\n          switch (type) {\n            case 'Number':\n            case 'Integer':\n            case 'Float':\n            case 'ArrayTexture(1)':\n              argumentTypes[i] = utils.getVariableType(arg);\n              break;\n            default:\n              argumentTypes[i] = type;\n          }\n        }\n      }\n      const signature = argumentTypes.join(',');\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.run.apply(existingKernel, args);\n        if (existingKernel.renderKernels) {\n          return existingKernel.renderKernels();\n        } else {\n          return existingKernel.renderOutput();\n        }\n      }\n\n      const newKernel = switchableKernels[signature] = new kernel.constructor(source, {\n        argumentTypes,\n        constantTypes: kernel.constantTypes,\n        graphical: kernel.graphical,\n        loopMaxIterations: kernel.loopMaxIterations,\n        constants: kernel.constants,\n        dynamicOutput: kernel.dynamicOutput,\n        dynamicArgument: kernel.dynamicArguments,\n        context: kernel.context,\n        canvas: kernel.canvas,\n        output: kernel.output,\n        precision: kernel.precision,\n        pipeline: kernel.pipeline,\n        immutable: kernel.immutable,\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\n        functions: kernel.functions,\n        nativeFunctions: kernel.nativeFunctions,\n        subKernels: kernel.subKernels,\n        strictIntegers: kernel.strictIntegers,\n        debug: kernel.debug,\n        gpu: kernel.gpu,\n        validate,\n        warnVarUsage: kernel.warnVarUsage,\n        returnType: kernel.returnType,\n        onRequestFallback,\n        onRequestSwitchKernel,\n      });\n      newKernel.build.apply(newKernel, args);\n      newKernel.run.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      if (newKernel.renderKernels) {\n        return newKernel.renderKernels();\n      } else {\n        return newKernel.renderOutput();\n      }\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\n\n    //if canvas didn't come from this, propagate from kernel\n    if (!this.canvas) {\n      this.canvas = kernelRun.canvas;\n    }\n\n    //if context didn't come from this, propagate from kernel\n    if (!this.context) {\n      this.context = kernelRun.context;\n    }\n\n    this.kernels.push(kernelRun);\n\n    return kernelRun;\n  }\n\n  /**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n  createKernelMap() {\n    let fn;\n    let settings;\n    if (typeof arguments[arguments.length - 2] === 'function') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    // handle conversion of argumentTypes\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    const kernel = this.createKernel(fn, settingsCopy);\n\n    return kernel;\n  }\n\n  /**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   *   combineKernels(add, multiply, function(a,b,c){\n   *     return add(multiply(a,b), c)\n   *  })\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  /**\n   * @desc Adds additional functions, that the kernel may call.\n   * @param {Function|String} source - Javascript function to convert\n   * @param {IFunctionSettings} [settings]\n   * @returns {GPU} returns itself\n   */\n  addFunction(source, settings) {\n    this.functions.push(utils.functionToIFunction(source, settings));\n    return this;\n  }\n\n  /**\n   * @desc Adds additional native functions, that the kernel may call.\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} source - the native function implementation, as it would be defined in it's entirety\n   * @param {object} [settings]\n   * @returns {GPU} returns itself\n   */\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    settings = settings || {};\n    const { argumentTypes, argumentNames } = this.Kernel.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source),\n    });\n    return this;\n  }\n\n  /**\n   * @desc Destroys all memory associated with gpu.js & the webGl if we created it\n   */\n  destroy() {\n    if (!this.kernels) return;\n    // perform on next run loop - for some reason we dont get lose context events\n    // if webGl is created and destroyed in the same run loop.\n    setTimeout(() => {\n      for (let i = 0; i < this.kernels.length; i++) {\n        this.kernels[i].destroy(true); // remove canvas if exists\n      }\n      // all kernels are associated with one context, go ahead and take care of it here\n      let firstKernel = this.kernels[0];\n      if (firstKernel) {\n        // if it is shortcut\n        if (firstKernel.kernel) {\n          firstKernel = firstKernel.kernel;\n        }\n        if (firstKernel.constructor.destroyContext) {\n          firstKernel.constructor.destroyContext(this.context);\n        }\n      }\n    }, 0);\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};","const { utils } = require('./utils');\n\n/**\n *\n * @param name\n * @param source\n * @returns {Function}\n */\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};","const { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  WebGLFunctionNode,\n  WebGLKernel,\n  GLKernel,\n  Kernel,\n};","const { GPU } = require('gpu.js');\n\nlet gpuInstance = null;\n\nfunction setup(value) {\n  gpuInstance = value;\n}\n\nfunction teardown() {\n  if (gpuInstance) {\n    gpuInstance.destroy();\n  }\n  gpuInstance = null;\n}\n\nfunction makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'gpu' }));\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setPipeline(true);\n  }\n  return gpuInstance\n    .createKernel(fn, settings)\n    .setPipeline(true);\n}\n\nfunction makeDevKernel(fn, settings) {\n  if (settings && settings.map) {\n    throw new Error('map kernels are not supported by dev kernels');\n  }\n  const gpu = new GPU({ mode: 'dev' });\n  return gpu.createKernel(fn, settings);\n}\n\nfunction kernelInput(input, size) {\n  return GPU.input(input, size);\n}\n\nmodule.exports = { setup, teardown, makeKernel, makeDevKernel, kernelInput };\n","module.exports = function zeros(size) {\n  return new Float32Array(size);\n};\n","const zeros = require('./zeros');\n\nmodule.exports = function zeros2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n};\n","const zeros2D = require('./zeros-2d');\n\nmodule.exports = function zeros3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      weights: null,\n      deltas: null,\n      name: null,\n      praxisOpts: null,\n    };\n  }\n\n  constructor(settings) {\n    // size\n    this.width = null;\n    this.height = null;\n    this.depth = null;\n\n    // what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    this.praxisOpts = null;\n\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    this.setupPraxis(settings);\n  }\n\n  setupPraxis(settings) {\n    if (!settings) return;\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(this, settings.praxisOpts);\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n\n    // TODO: put into a kernel\n    if (this.depth > 0) {\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nmodule.exports = {\n  Base\n};\n","const { Base } = require('./base');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Activation extends Base {\n  constructor(inputLayer, settings) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = inputLayer;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    if (depth > 0) {\n      this.depth = depth;\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis(settings);\n  }\n}\n\nmodule.exports = { Activation };\n","const { Base } = require('./base');\nconst { Activation } = require('./activation');\n\nclass Internal {}\nclass Filter extends Base {}\nclass Model extends Base {}\nclass Modifier extends Base {}\nclass Operator extends Base {}\n\nmodule.exports = { Activation, Internal, Filter, Model, Modifier, Operator };\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(inputWeights1, inputWeights2) {\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n}\n\nclass Add extends Operator {\n  constructor(inputLayer1, inputLayer2, settings) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.width = this.inputLayer1.width;\n    this.height = this.inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      );\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    this.inputLayer1.deltas = this.deltas;\n    this.inputLayer2.deltas = this.deltas;\n  }\n}\n\nfunction add(inputLayer1, inputLayer2, settings) {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Add, add, predict };\n","class Base {\n  static get defaults() {\n    return {};\n  }\n\n  constructor(layer, settings = {}) {\n    this.layer = layer;\n    this.width = layer.width || null;\n    this.height = layer.height || null;\n    this.depth = layer.depth || null;\n    Object.assign(this, this.constructor.defaults, settings);\n  }\n\n  setupKernels() {}\n\n  run() {}\n}\n\nmodule.exports = {\n  Base\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Base } = require('./base');\n\nfunction updateChange(value) {\n  return value;\n}\n\nfunction update(changes, weights, incomingWeights, inputDeltas) {\n  const lastChange = changes[this.thread.y][this.thread.x];\n  const inputDelta = inputDeltas[this.thread.y][0];\n  const weight = weights[this.thread.y][this.thread.x];\n  const incoming = incomingWeights[this.thread.x][0];\n\n  const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nclass ArthurDeviationWeights extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      momentum: 0.1\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.weightsLayer = null;\n    this.incomingLayer = null;\n    this.deltaLayer = null;\n\n    if (settings) {\n      if (settings.weightsLayer) {\n        this.weightsLayer = settings.weightsLayer\n      }\n      if (settings.incomingLayer) {\n        this.incomingLayer = settings.incomingLayer;\n      }\n      if (settings.deltaLayer) {\n        this.deltaLayer = settings.deltaLayer;\n      }\n    }\n\n    this.changes = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      map: {\n        changes: updateChange\n      },\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate,\n        momentum: this.momentum\n      }\n    });\n  }\n}\n\nfunction arthurDeviationWeights(layer, settings) {\n  return new ArthurDeviationWeights(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  update,\n  updateChange,\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Base } = require('./base');\n\nfunction update(weights, deltas) {\n  return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n}\n\nclass ArthurDeviationBiases extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.kernel = null;\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas);\n    return output;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate\n      }\n    });\n  }\n}\n\nfunction arthurDeviationBiases(layer, settings) {\n  return new ArthurDeviationBiases(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationBiases,\n  arthurDeviationBiases,\n  update,\n};\n","module.exports = function randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n}\n","const randomWeight = require('./random-weight');\n\nmodule.exports = function randos(size) {\n  const array = new Float32Array(size);\n  for (let i = 0; i < size; i++) {\n    array[i] = randomWeight();\n  }\n  return array;\n};\n","const randos = require('./randos');\n\nmodule.exports = function randos2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width);\n  }\n  return result;\n}\n","const { Model } = require('./types');\nconst randos2D = require('../utilities/randos-2d');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass Random extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = randos2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction random(settings) {\n  return new Random(settings);\n}\n\nmodule.exports = {\n  Random,\n  random\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(weights1, weights2) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nfunction compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nfunction compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nclass Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2, settings = {}) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.compareKernel1 = null;\n    this.compareKernel2 = null;\n\n    this.width = inputLayer2.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n\n    if (settings && settings.name) {\n      this.name = settings.name;\n    }\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n    });\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.compareKernel1 = layer.compareKernel1;\n    this.compareKernel2 = layer.compareKernel2;\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare() {\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n    this.inputLayer2.deltas = newDeltas2;\n    this.inputLayer1.deltas = newDeltas1;\n  }\n}\n\nfunction multiply(inputLayer1, inputLayer2, settings) {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Multiply, multiply, predict, compareFromX, compareFromY };\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/sigmoid');\n\nfunction predict2D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nfunction predict3D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]));\n}\n\nfunction compare2D(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nfunction compare3D(weights, deltas) {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nclass Sigmoid extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction sigmoid(inputLayer, settings) {\n  return new Sigmoid(inputLayer, settings);\n}\n\nmodule.exports = { Sigmoid, sigmoid, predict2D, predict3D, compare2D, compare3D };\n","const { arthurDeviationWeights } = require('../praxis/arthur-deviation-weights');\nconst { arthurDeviationBiases } = require('../praxis/arthur-deviation-biases');\nconst { add } = require('./add');\nconst { random } = require('./random');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction noopPraxis() {\n  return { run: (layer) => layer.weights };\n}\n\nfunction arthurFeedForward(settings, inputLayer) {\n  const { height } = settings;\n  function weightsPraxis(layer, settings) {\n    return arthurDeviationWeights(layer, settings);\n  }\n  function biasesPraxis(layer, settings) {\n    return arthurDeviationBiases(layer, settings);\n  }\n  const weightsLayer = random({\n    name: 'weights',\n    height,\n    width: inputLayer.height,\n    praxis: weightsPraxis,\n  });\n\n  const biasesLayer = random({\n    name: 'biases',\n    height,\n    praxis: biasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer, { praxis: noopPraxis });\n  const addLayer = add(multiplyLayer, biasesLayer, { praxis: noopPraxis });\n  const sigmoidLayer = sigmoid(addLayer, { praxis: noopPraxis });\n\n  weightsLayer.praxis.weightsLayer = weightsLayer;\n  weightsLayer.praxis.incomingLayer = inputLayer;\n  weightsLayer.praxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n\nmodule.exports = {\n  arthurFeedForward\n};\n","function setStride(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride;\n    layer.strideY = settings.stride;\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX;\n    } else {\n      layer.strideX = defaults.stride;\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY;\n    } else {\n      layer.strideY = defaults.stride;\n    }\n  }\n}\n\nfunction setPadding(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding;\n    layer.paddingY = settings.padding;\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX;\n    } else {\n      layer.paddingX = defaults.padding;\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY;\n    } else {\n      layer.paddingY = defaults.padding;\n    }\n  }\n}\n\nmodule.exports = { setStride, setPadding };\n","const rondos2D = require('./randos-2d');\n\nmodule.exports = function randos3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height);\n  }\n  return result;\n}\n","module.exports = function values(size, value) {\n  return new Float32Array(size).fill(value);\n}","const { makeKernel } = require('../utilities/kernel');\nconst { setStride, setPadding } = require('../utilities/layer-setup');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst values = require('../utilities/values');\n\nfunction predict(inputs, filters, biases) {\n  const startFilterX = this.constants.paddingX - (this.thread.x * this.constants.strideX);\n  const startInputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX;\n  const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n\n  const startFilterY = this.constants.paddingY - (this.thread.y * this.constants.strideY);\n  const startInputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY;\n  const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n      for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputs, deltas) {\n  const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n  const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n  const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor(((this.constants.inputWidth - 1) - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n\n  const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n  const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n  const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor(((this.constants.inputHeight - 1) - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n    for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n      sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareInputDeltas(inputDeltas, filters, deltas) {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n    let deltaX = startDeltaX;\n    for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n      sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareBiases(biasDeltas, deltas) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nclass Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    this.depth = this.filterCount;\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = randos(this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    this.biasDeltas = this.compareBiasesKernel(this.biasDeltas, this.deltas);\n    this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n    this.inputLayer.deltas = this.deltas;\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n  }\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer);\n}\n\nmodule.exports = {\n  Convolution,\n  convolution,\n  predict,\n  compareFilterDeltas,\n  compareInputDeltas,\n  compareBiases\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\n\n// TODO: implement random in glsl in gpu.js\nfunction trainingPredict(inputs) {\n  if (Math.random() < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nclass Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 0,\n      height: 0,\n      depth: 0,\n      probability: 0.5,\n      isTraining: false,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    if (this.isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, {\n        output: [this.width, this.height, this.depth],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height, this.depth],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.learnKernel(this.deltas);\n  }\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer);\n}\n\nmodule.exports = { Dropout, dropout, trainingPredict, predict };\n","const { random } = require('./random');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction feedForward(settings, input) {\n  const { height } = settings;\n  const weights = random({ name: 'weights', height, width: input.height });\n  const biases = random({ name: 'biases', height });\n  return sigmoid(add(multiply(weights, input), biases));\n}\n\nmodule.exports = {\n  feedForward\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst values = require('../utilities/values');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction predict3D(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nfunction compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nfunction compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX]);\n}\n\nfunction compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]);\n}\n\nclass FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    this.compareFilterDeltasKernel = null;\n    this.compareInputDeltasKernel = null;\n    this.compareBiasesKernel = null;\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height);\n      this.deltas = zeros3D(this.width, this.height);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate() {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels() {\n    const { inputLayer } = this;\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      this.inputLayer.deltas,\n      this.deltas,\n      this.filters\n    );\n\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n  }\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer);\n}\n\nmodule.exports = { FullyConnected, fullyConnected, predict, predict3D, compareInputDeltas, compareInputDeltas3D, compareBiases, compareFilterDeltas, compareFilterDeltas3D };\n","const { makeKernel } = require('../utilities/kernel');\nconst { Modifier } = require('./types');\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nclass Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer);\n}\n\nmodule.exports = { Negative, negative, predict };\n","const { makeKernel } = require('../utilities/kernel');\nconst { Operator } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\n\nfunction predict(weights, inputLayerWeights) {\n  return (\n    weights[this.thread.y][this.thread.x] *\n    inputLayerWeights[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n\n    this.width = inputLayer1.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      );\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.weights, this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2);\n}\n\nmodule.exports = { MultiplyElement, multiplyElement };\n","module.exports = function ones(size) {\n  return new Float32Array(size).fill(1);\n}\n","const ones = require('./ones');\n\nmodule.exports = function ones2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","const ones2D = require('../utilities/ones-2d');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Ones extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nfunction ones(settings) {\n  return new Ones(settings);\n}\n\nmodule.exports = {\n  Ones,\n  ones\n};\n","const { Activation } = require('./activation');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/tanh');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, errors) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, errors) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Tanh extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction tanh(inputLayer, settings) {\n  return new Tanh(inputLayer, settings);\n}\n\nmodule.exports = { Tanh, tanh, predict2D, predict3D, compare2D, compare3D };\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Zeros extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings);\n}\n\nmodule.exports = {\n  Zeros,\n  zeros\n};\n","const { add } = require('./add');\nconst { negative } = require('./negative');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { ones } = require('./ones');\nconst { sigmoid } = require('./sigmoid');\nconst { random } = require('./random');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction gru(settings, recurrentInput, input) {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n\nmodule.exports = {\n  gru\n};\n","const { Model } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { kernelInput } = require('../utilities/kernel');\nconst { makeKernel } = require('../utilities/kernel');\n\nclass Input extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = null;\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(function(value) {\n        return value[this.thread.y];\n      }, {\n        output: [1, this.height]\n      });\n    } else {\n      this.reshapeInput = (inputs) => inputs;\n    }\n  }\n\n  predict(inputs) {\n    if (inputs.length === this.height * this.width) {\n      this.weights = kernelInput(inputs, [this.width, this.height]);\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = inputs;\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs) {\n    this.weights = this.reshapeInput(inputs);\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key === 'deltas' || key === 'weights') continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nfunction input(settings) {\n  return new Input(settings);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/leaky-relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass LeakyRelu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction leakyRelu(inputLayer, settings) {\n  return new LeakyRelu(inputLayer, settings);\n}\n\nmodule.exports = { LeakyRelu, leakyRelu, predict2D, predict3D, compare2D, compare3D };\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { random } = require('./random');\nconst { sigmoid } = require('./sigmoid');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction lstm(settings, recurrentInput, input) {\n  const { height } = settings;\n  const inputGateWeights = random({ height, width: input.height });\n  const inputGatePeepholes = random({ width: height, height });\n  const inputGateBias = zeros({ height });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  );\n\n  const forgetGateWeights = random({ height, width: input.height });\n  const forgetGatePeepholes = random({ width: height, height });\n  const forgetGateBias = zeros({ height });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  );\n\n  const outputGateWeights = random({ height, width: input.height });\n  const outputGatePeepholes = random({ width: height, height });\n  const outputGateBias = zeros({ height });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  );\n\n  const memoryWeights = random({ height, width: input.height });\n  const memoryPeepholes = random({ width: height, height });\n  const memoryBias = zeros({ height });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, input); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n\nmodule.exports = {\n  lstm\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst { Filter } = require('./types');\n\nfunction compare1D(weights, targetValues) {\n  // return targetValues[this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nfunction compare2D(weights, targetValues) {\n  // return targetValues[this.thread.y][this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n}\n\nclass Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.validate();\n    if (this.depth > 0) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height > 1) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D;\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height]\n    });\n  }\n\n  predict() {\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    this.weights = this.inputLayer.weights;\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    this.errors = this.compareKernel(this.weights, targetValues);\n    this.deltas = this.errors;\n    this.inputLayer.deltas = this.deltas;\n  }\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer);\n}\n\nmodule.exports = {\n  Target,\n  target\n};\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { target } = require('./target');\nconst { zeros } = require('./zeros');\n\nfunction output(settings, inputLayer) {\n  const { height } = settings;\n  const outputGate = random({ height, width: inputLayer.height, name: 'outputGate' });\n  const output = zeros({ height, name: 'output' });\n  const outputGateConnector = multiply(outputGate, inputLayer, { name: 'outputGateConnected' });\n  return target({ name: 'target', ...settings }, add(outputGateConnector, output));\n}\n\nmodule.exports = {\n  output\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { setPadding, setStride } = require('../utilities/layer-setup');\nconst zeros3D = require('../utilities/zeros-3d');\nconst randos3D = require('../utilities/randos-3d');\n\nfunction setSwitchY(value) {\n  return value;\n}\n\nfunction setSwitchX(value) {\n  return value;\n}\n\nfunction predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  );\n  let largestValue = -Infinity;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y;\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x;\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nfunction compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nclass Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    // TODO: handle 1 depth?\n    this.depth = this.filterCount;\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    });\n  }\n\n  predict() {\n    const weights = this.predictKernel(this.inputLayer.weights);\n    this.switchX = weights.switchX;\n    this.switchY = weights.switchY;\n    this.weights = weights.result;\n    return this.weights;\n  }\n\n  compare() {\n    debugger;\n    const depth = this.inputLayer.deltas.length;\n    const height = this.inputLayer.deltas[0].length;\n    const width = this.inputLayer.deltas[0][0].length;\n    const type = typeof this.inputLayer.deltas[0][0][0];\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    debugger;\n    if (depth !== this.inputLayer.deltas.length) debugger;\n    if (height !== this.inputLayer.deltas[0].length) debugger;\n    if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer);\n}\n\nmodule.exports = { Pool, pool, predict, compare, compare3D };\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Relu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction relu(inputLayer, settings) {\n  return new Relu(inputLayer, settings);\n}\n\nmodule.exports = { Relu, relu, predict2D, compare2D, predict3D, compare3D };\n","const { relu } = require('./relu');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { zeros } = require('./zeros');\n\nfunction recurrent(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  recurrentInput.setDimensions(1, height);\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height });\n  // whh\n  const transition = random({ name: 'transition', height, width: height });\n  // bhh\n  const bias = zeros({ name: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n\nmodule.exports = {\n  recurrent\n};\n","const { Base } = require('./base');\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n  }\n\n  predict() {\n    this.weights = this.inputs;\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer);\n}\n\nmodule.exports = {\n  Regression,\n  regression,\n  learn\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction getMaxValue(inputs) {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue2D(inputs) {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue3D(inputs) {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getSum(inputs) {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nfunction getSum2D(inputs) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nfunction getSum3D(inputs) {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nfunction getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  );\n}\n\nfunction predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction compare(target, exponentials) {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nfunction compare2D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x + (this.thread.y * this.output.x);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction loss(exponentials) {\n  return -Math.log();\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nclass SoftMax extends Filter {\n  constructor(inputLayer) {\n    super();\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n      });\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = this.getSumKernel(exponentials);\n    this.weights = this.predictKernel(exponentials, exponentialsSum);\n  }\n\n  compare(targetValues) {\n    this.errors = this.compareKernel(targetValues[0], this.deltas);\n    this.deltas = this.errors;\n    this.inputLayer.deltas = this.deltas;\n  }\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer);\n}\n\nmodule.exports = {\n  SoftMax, softMax,\n  getMaxValue, getMaxValue2D, getMaxValue3D,\n  getSum, getSum2D, getSum3D,\n  getExponentials, getExponentials2D, getExponentials3D,\n  predict, predict2D, predict3D,\n  compare, compare2D, compare3D,\n  loss\n};\n","const { Base } = require('./base');\n\nclass SVM extends Base {\n  predict() {\n    this.weights = this.inputs;\n    this.validate();\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer);\n}\n\nmodule.exports = {\n  SVM,\n  svm\n};\n","const { Modifier } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\n\nfunction predict(array) {\n  return array[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nclass Transpose extends Modifier {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    this.width = this.inputLayer.height;\n    this.height = this.inputLayer.width;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    // TODO: needs switched to this.compareKernel?\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\n  }\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer);\n}\n\nmodule.exports = {\n  Transpose,\n  transpose,\n};\n","const { Add, add } = require('./add');\nconst { arthurFeedForward } = require('./arthur-feed-forward');\nconst { Base } = require('./base');\nconst { Convolution, convolution } = require('./convolution');\nconst { Dropout, dropout } = require('./dropout');\nconst { feedForward } = require('./feed-forward');\nconst { FullyConnected, fullyConnected } = require('./fully-connected');\nconst { gru } = require('./gru');\nconst { Input, input } = require('./input');\nconst { LeakyRelu, leakyRelu } = require('./leaky-relu');\nconst { lstm } = require('./lstm');\nconst { Multiply, multiply } = require('./multiply');\nconst { MultiplyElement, multiplyElement } = require('./multiply-element');\nconst { Negative, negative } = require('./negative');\nconst { Ones, ones } = require('./ones');\nconst { output } = require('./output');\nconst { Pool, pool } = require('./pool');\nconst { Random, random } = require('./random');\nconst { recurrent } = require('./recurrent');\nconst { Regression, regression } = require('./regression');\nconst { Relu, relu } = require('./relu');\nconst { Sigmoid, sigmoid } = require('./sigmoid');\nconst { SoftMax, softMax } = require('./soft-max');\nconst { SVM, svm } = require('./svm');\nconst { Tanh, tanh } = require('./tanh');\nconst { Target, target } = require('./target');\nconst { Transpose, transpose } = require('./transpose');\nconst { Zeros, zeros } = require('./zeros');\n\n/**\n * @description Layer API, to make it easier to use layers for the world\n */\nmodule.exports = {\n  Add,\n  add,\n  arthurFeedForward,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  feedForward,\n  FullyConnected,\n  fullyConnected,\n  gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  lstm,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  output,\n  Pool,\n  pool,\n  Random,\n  random,\n  recurrent,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n};\n","/**\n *\n * @param {*} input\n * @param {brain.NeuralNetwork} net\n * @returns {*}\n */\nmodule.exports = function likely(input, net) {\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.keys(output).forEach(key => {\n    const value = output[key];\n    if (value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n};\n","/* Functions for turning sparse hashes into arrays and vice versa */\nclass lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static toTable(hashes) {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  }\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} objects2D\n   * @returns {Object}\n   */\n  static toTable2D(objects2D) {\n    const table = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].input) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].output) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static toHash(hash) {\n    let lookup = {};\n    let index = 0;\n    for (let i in hash) {\n      lookup[i] = index++;\n    }\n    return lookup;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookup\n   * @param {*} object\n   * @param {*} arrayLength\n   * @returns {Float32Array}\n   */\n  static toArray(lookup, object, arrayLength) {\n    const result = new Float32Array(arrayLength);\n    for (let p in lookup) {\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  }\n\n  static toArrayShort(lookup, object) {\n    const result = [];\n    for (let p in lookup) {\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  }\n\n  static toArrays(lookup, objects, arrayLength) {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toObject(lookup, array) {\n    const object = {};\n    for (let p in lookup) {\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  }\n\n  static toObjectPartial(lookup, array, offset = 0, limit = 0) {\n    const object = {};\n    let i = 0;\n    for (let p in lookup) {\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    let lookup = {};\n    let z = 0;\n    let i = array.length;\n    while (i-- > 0) {\n      lookup[array[i]] = z++;\n    }\n    return lookup;\n  }\n\n  static dataShape(data) {\n    const shape = [];\n\n    if (data.input) {\n      shape.push('datum');\n      data = data.input;\n    } else if (Array.isArray(data)) {\n      if (data[0].input) {\n        shape.push('array', 'datum');\n        data = data[0].input;\n      } else {\n        shape.push('array');\n        data = data[0];\n      }\n    }\n\n    let p;\n    while (data) {\n      for (p in data) { break; }\n      if (!data.hasOwnProperty(p)) break;\n      if (Array.isArray(data) || data.buffer instanceof ArrayBuffer) {\n        shape.push('array');\n        data = data[p];\n      } else if (typeof data === 'object') {\n        shape.push('object');\n        data = data[p];\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    shape.push(typeof data);\n    return shape;\n  }\n\n  static addKeys(value, table) {\n    if (Array.isArray(value)) return;\n    table = table || {};\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  }\n}\n\nmodule.exports = lookup;\n","// TODO: implement and test\nclass Adam {}\n\nfunction adam() {\n  // gradient = grad_fun(theta)\n  //\n  //           # Update moment estimates\n  // moment1 = beta1 * moment1 + (1 - beta1) * gradient\n  // moment2 = beta2 * moment2 + (1 - beta2) * np.square(gradient)\n  //\n  //           # Yield adapted gradient\n  // theta = ( theta - alpha * (1 - beta2**t)**0.5 / (1 - beta1**t) *\n  //   moment1 / (epsilon + np.sqrt(moment2)) )\n  // yield theta\n  // t += 1\n  // adam update\n  // gsumi[j] = gsumi[j] * this.beta1 + (1- this.beta1) * gij; // update biased first moment estimate\n  // xsumi[j] = xsumi[j] * this.beta2 + (1-this.beta2) * gij * gij; // update biased second moment estimate\n  // var biasCorr1 = gsumi[j] * (1 - Math.pow(this.beta1, this.k)); // correct bias first moment estimate\n  // var biasCorr2 = xsumi[j] * (1 - Math.pow(this.beta2, this.k)); // correct bias second moment estimate\n  // var dx =  - this.learning_rate * biasCorr1 / (Math.sqrt(biasCorr2) + this.eps);\n  // p[j] += dx;\n}\n\nmodule.exports = {\n  Adam, adam\n};\n","const { makeKernel, makeDevKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nconst { Base } = require('./base');\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nfunction clipByValue(value, max, min) {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction update(\n  weights,\n  deltas,\n  previousMomentums\n) {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomentums[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nfunction isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nclass MomentumRootMeanSquaredPropagation extends Base {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.000001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5\n    };\n  }\n\n  constructor(layer, settings = {}) {\n    super(layer, settings);\n    this.momentums = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas, this.momentums);\n    this.momentums = output.momentums;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momentums: getMomentum,\n      },\n    });\n  }\n}\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\nconst mRmsProp = momentumRootMeanSquaredPropagation;\n\nmodule.exports = {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n  getMomentum, clipByValue, isClippedByValue\n};\n","const { Adam, adam } = require('./adam');\nconst { ArthurDeviationBiases, arthurDeviationBiases } = require('./arthur-deviation-biases');\nconst { ArthurDeviationWeights, arthurDeviationWeights } = require('./arthur-deviation-weights');\nconst {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp\n} = require('./momentum-root-mean-squared-propagation');\n\nmodule.exports = {\n  Adam, adam,\n  ArthurDeviationBiases, arthurDeviationBiases,\n  ArthurDeviationWeights, arthurDeviationWeights,\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n};\n","module.exports = function mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0;\n  const length = errors.length * errors[0].length;\n  for (let y = 0; y < errors.length; y++) {\n    for (let x = 0; x < errors[y].length; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / length;\n};\n","const layer = require('../layer');\n\nmodule.exports = function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\n  const Layer = layer[jsonLayer.type];\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p];\n    }\n  });\n\n  return realLayer;\n}\n","module.exports = function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb);\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb);\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb);\n    }\n  }\n  cb(layer);\n}\n","const traverseLayersFrom = require('./traverse-layers-from');\n\nmodule.exports = function flattenLayers(layers) {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","const lookup = require('./lookup');\nconst mse2d = require('./utilities/mse-2d');\nconst layerFromJSON = require('./utilities/layer-from-json');\nconst praxis = require('./praxis');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { makeKernel } = require('./utilities/kernel');\n\nclass FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      errorCheckInterval: 100,\n      reinforce: false,\n    };\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxisOpts: null,\n      praxis: (layer, settings) => praxis.momentumRootMeanSquaredPropagation(layer, settings),\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    };\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n    });\n    this.constructor._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n    };\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.layers = null;\n    this.inputLayer = null;\n    this.hiddenLayers = null;\n    this.outputLayer = null;\n    this.praxisOpts = null;\n    this.praxis = null;\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    );\n    Object.assign(this, this.constructor.structure);\n    this._inputLayer = null;\n    this._hiddenLayers = null;\n    this._outputLayer = null;\n  }\n\n  _connectLayers() {\n    const layers = [];\n    this._inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    this.layers = flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\n      hiddenLayers.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._connectLayers();\n    this.initializeLayers(this.layers);\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels();\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\n        layer.praxis = this.praxis(layer, this.praxisOpts);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = this.runInput(input);\n\n    if (output.toArray) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param {Number} endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.trainOpts.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    if (this.trainOpts.callback && this.trainOpts.callbackPeriod !== this.trainOpts.errorCheckInterval) {\n      console.warn(`options.callbackPeriod with value of ${ this.trainOpts.callbackPeriod } does not match options.errorCheckInterval with value of ${ this.trainOpts.errorCheckInterval }, if logging error, it will repeat.  These values may need to match`);\n    }\n    const formattedData = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    if (!options.reinforce) {\n      this.initialize();\n    }\n\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].input.length]\n    });\n    const transferOutput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].output.length]\n    });\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n\n    return {\n      data: transferredData,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse2d(\n        this._outputLayer.errors.toArray\n          ? this._outputLayer.errors.toArray()\n          : this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].learn(\n        this.layers[i - 1],\n        this.layers[i + 1],\n        this.trainOpts.learningRate\n      );\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (!Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input);\n        return Object.assign({}, datumParam, { input: array });\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output);\n        return Object.assign({}, datumParam, { output: array });\n      }, this);\n    }\n    return data;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    if (!this.layers) {\n      this.initialize();\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes: [this._inputLayer.height]\n        .concat(this._hiddenLayers.map(l => l.height))\n        .concat([this._outputLayer.height]),\n      layers: jsonLayers,\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers;\n    const layers = [];\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex];\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        );\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error('inputLayer1Index not defined');\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error('inputLayer2Index not defined');\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer1Index} not found`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer2Index} not found`\n          );\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        );\n      }\n    }\n\n    const net = new FeedForward(json);\n    net.layers = layers;\n    return net;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = {\n  FeedForward\n};\n","//private variables\nlet thawing = false;\nlet thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\nexport default class Thaw {\n  /**\n   *\n   * @type {{each: null, done: null}}\n   */\n  static get defaultSettings() {\n    return {\n      each: null,\n      done: null\n    };\n  }\n\n  /**\n   * returns if Thaw.js is thawing\n   * @returns {boolean}\n   */\n  static get isThawing() {\n    return thawing;\n  }\n\n  /**\n   * Stops all Thaw instances\n   */\n  static stopAll() {\n    for(let i = 0;i< thaws.length; i++) {\n      thaws[i].stop();\n    }\n  }\n\n  constructor(items, options = {}) {\n    const { each, done } = {...this.constructor.defaultSettings, ...options};\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    const tick = this.tick = () => {\n      if (this.i < 0) return;\n\n      this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      const item = items[this.i];\n      if (this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, this.i);\n          thawing = false;\n        }\n\n        this.i = -1;\n        clearTimeout(this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n  makeReady() {\n    if (this.i < 0) {\n      this.i = this.items.length;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  add(item) {\n    const doTick = this.makeReady();\n\n    this.items.push(item);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  insert(item) {\n    const doTick = this.makeReady();\n\n    this.items.splice(this.i, 0, item);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  addArray(items) {\n    const doTick = this.makeReady();\n\n    this.items = this.items.concat(items);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  insertArray(items) {\n    const doTick = this.makeReady();\n    const left = this.items;\n    const middle = items;\n    const right = this.items.splice(this.i, (this.items.length - this.i) + 1);\n\n    this.items = left.concat(middle, right);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Stops this instance of Thaw\n   * @returns {Thaw}\n   */\n  stop() {\n    this.i = -1;\n    clearTimeout(this.timeout);\n    if (this.options.done) {\n      this.options.done();\n    }\n    return this;\n  }\n}\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\nexport function thaw(items, options = {}) {\n  return new Thaw(items, options);\n}","import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","const { Writable } = require('stream');\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nclass TrainStream extends Writable {\n  constructor(options) {\n    super({\n      objectMode: true\n    });\n\n    options = options || {};\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    const { neuralNetwork } = options;\n    this.neuralNetwork = neuralNetwork;\n    this.dataFormatDetermined = false;\n    this.i = 0; // keep track of internal iterations\n    this.size = 0;\n    this.count = 0;\n    this.sum = 0;\n    this.floodCallback = options.floodCallback;\n    this.doneTrainingCallback = options.doneTrainingCallback;\n\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    const { trainOpts } = neuralNetwork;\n    this.iterations = trainOpts.iterations;\n    this.errorThresh = trainOpts.errorThresh;\n    this.log = trainOpts.log;\n    this.logPeriod = trainOpts.logPeriod;\n    this.callbackPeriod = trainOpts.callbackPeriod;\n    this.callback = trainOpts.callback;\n\n    this.on('finish', this.finishStreamIteration.bind(this));\n  }\n\n  endInputs() {\n    this.write(false);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.neuralNetwork.addFormat(chunk);\n      this.firstDatum = this.firstDatum || chunk;\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData(chunk);\n    this.sum += this.neuralNetwork.trainPattern(data[0], true);\n\n    // tell the Readable Stream that we are ready for more data\n    next();\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log('This iteration\\'s data length was different from the first.');\n    }\n\n    if (!this.dataFormatDetermined) {\n      const data = this.neuralNetwork.formatData(this.firstDatum);\n      this.neuralNetwork.verifyIsInitialized(data);\n      this.dataFormatDetermined = true;\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && (this.i % this.logPeriod === 0)) {\n      this.log(`iterations: ${ this.i}, training error: ${ error }`);\n    }\n    if (this.callback && (this.i % this.callbackPeriod === 0)) {\n      this.callback({\n        error: error,\n        iterations: this.i\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        return this.floodCallback();\n      }\n    } else {\n      // done training\n      if (typeof this.doneTrainingCallback === 'function') {\n        return this.doneTrainingCallback({\n          error: error,\n          iterations: this.i\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TrainStream;\n","/**\n *\n * @param values\n * @returns {*}\n */\nmodule.exports = function toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  }\n  return new Float32Array(Object.values(values));\n};\n","const toArray = require('./to-array');\n/**\n *\n * @param values\n * @returns {number}\n */\nmodule.exports = function max(values) {\n  return Math.max(...toArray(values));\n}\n","module.exports = function mse(errors) {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nmodule.exports = function range(start, end) {\n  const result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","function LookupTable(data, prop) {\n  this.length = 0;\n  if (prop) {\n    this.prop = prop;\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const object = datum[prop];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  } else if (Array.isArray(data[0])) {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const array = data[i];\n      for (let j = 0; j < array.length; j++) {\n        const object = array[j];\n        for (let p in object) {\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  } else {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const object = data[i];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = LookupTable;\n","function arraysToFloat32Arrays(arrays) {\n  const result = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\nfunction arrayToFloat32Arrays(array) {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\nfunction arrayToFloat32Array(array) {\n  return Float32Array.from(array)\n}\nfunction objectsToFloat32Arrays(objects, table, length) {\n  const results = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (let p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\nfunction objectToFloat32Arrays(object) {\n  const result = [];\n  for (let p in object) {\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\nfunction objectToFloat32Array(object, table, length) {\n  const result = new Float32Array(length);\n  for (let p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  arrayToFloat32Array,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array,\n};\n","const Thaw = require('thaw.js').default;\nconst lookup = require('./lookup');\nconst TrainStream = require('./train-stream');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst zeros = require('./utilities/zeros');\nconst LookupTable = require('./utilities/lookup-table');\nconst { arrayToFloat32Array } = require('./utilities/cast');\n\n/**\n * @param {object} options\n * @constructor\n */\nclass NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,    // the maximum times to iterate the training data\n      errorThresh: 0.005,   // the acceptable error percentage from training data\n      log: false,           // true to use console.log, when a function is supplied it is used\n      logPeriod: 10,        // iterations between logging out\n      learningRate: 0.3,    // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1,        // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null,       // a periodic call back that can be triggered while training\n      callbackPeriod: 10,   // the number of iterations through the training data between callback calls\n      timeout: Infinity,    // the max number of milliseconds to train for\n      praxis: null,\n      beta1: 0.9,\n      beta2: 0.999,\n      epsilon: 1e-8,\n    };\n  }\n\n  static get defaults() {\n    return {\n      leakyReluAlpha: 0.01,\n      binaryThresh: 0.5,\n      hiddenLayers: null,     // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid'  // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    };\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.inputSize && options.hiddenLayers && options.outputSize) {\n      this.sizes = [options.inputSize]\n        .concat(options.hiddenLayers)\n        .concat([options.outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize() {\n    if (!this.sizes) throw new Error ('Sizes must be set before initializing');\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = []; // weights for bias nodes\n    this.weights = [];\n    this.outputs = [];\n\n    // state for training\n    this.deltas = [];\n    this.changes = []; // for momentum\n    this.errors = [];\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      this.deltas[layer] = zeros(size);\n      this.errors[layer] = zeros(size);\n      this.outputs[layer] = zeros(size);\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size);\n        this.weights[layer] = new Array(size);\n        this.changes[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.weights[layer][node] = randos(prevSize);\n          this.changes[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation ? activation : this.activation;\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error('unknown activation ' + this.activation + ', The activation should be one of [\\'sigmoid\\', \\'relu\\', \\'leaky-relu\\', \\'tanh\\']');\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if(!this.runInput){\n      console.error('Activation function has not been initialized, did you run train()?');\n      return false;\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter(c => this[c] === null);\n\n    if(checkFns.length > 0){\n      console.error(`Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(', ')}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n\n    let output = this.runInput(input).slice(0);\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        let weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //relu\n        currentOutputs[node] = (sum < 0 ? 0 : sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n    let alpha = this.leakyReluAlpha;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //leaky relu\n        currentOutputs[node] = (sum < 0 ? 0 : alpha * sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //tanh\n        currentOutputs[node] = Math.tanh(sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    this.sizes.push(data[0].input.length);\n    if (!this.hiddenLayers) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n    } else {\n      this.hiddenLayers.forEach(size => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].output.length);\n\n    this.initialize();\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    const trainDefaults = this.constructor.trainDefaults;\n    for (const p in trainDefaults) {\n      if (!trainDefaults.hasOwnProperty(p)) continue;\n      this.trainOpts[p] = options.hasOwnProperty(p)\n        ? options[p]\n        : trainDefaults[p];\n    }\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  /**\n   *\n   * @param options\n   */\n  validateTrainingOptions(options) {\n    const validations = {\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      momentum: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      callback: (val) => { return typeof val === 'function' || val === null },\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\n    };\n    for (const p in validations) {\n      if (!validations.hasOwnProperty(p)) continue;\n      if (!options.hasOwnProperty(p)) continue;\n      if (!validations[p](options[p])) {\n        throw new Error(`[${p}, ${options[p]}] is out of normal training range, your network will probably not train.`);\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON() {\n    return Object.keys(this.constructor.trainDefaults)\n      .reduce((opts, opt) => {\n        if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\n        if (opt === 'callback') return opts;\n        if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\n        if (opt === 'log') opts.log = typeof opts.log === 'function';\n        return opts;\n      }, {});\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   */\n  trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  trainingTick(data, status, endTime) {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (status.iterations >= iterations || status.error <= errorThresh || Date.now() >= endTime) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && (status.iterations % logPeriod === 0)) {\n      status.error = this.calculateTrainingError(data);\n      log(`iterations: ${status.iterations}, training error: ${status.error}`);\n    } else {\n      if (status.iterations % this.errorCheckInterval === 0) {\n        status.error = this.calculateTrainingError(data);\n      } else {\n        this.trainPatterns(data);\n      }\n    }\n\n    if (callback && (status.iterations % callbackPeriod === 0)) {\n      callback({\n        iterations: status.iterations,\n        error: status.error\n      });\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {object} {error: number, iterations: number}\n   */\n  train(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    while (this.trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () => this.trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status)\n        });\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject({trainError, status});\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {object} value\n   * @param {boolean} [logErrorRate]\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if  (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        let output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          let deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    let alpha = this.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights() {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      let incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        let delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = (learningRate * delta * incoming[k])\n            + (momentum * change);\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam() {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam() {\n    this.iterations++;\n\n    const { iterations } = this;\n    const {\n      beta1,\n      beta2,\n      epsilon,\n      learningRate\n    } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow = currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh = currentChangesHigh[node][k] * beta2 + (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection = changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection = changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] += learningRate * momentumCorrection / (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow = currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh = currentBiasChangesHigh[node] * beta2 + (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection = currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection = currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] += learningRate * biasMomentumCorrection / (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (!Array.isArray(data)) { // turn stream datum into array\n      data = [data];\n    }\n\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (typeof this._formatInput === 'undefined') {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: this._formatOutput(data[i].output),\n        });\n      }\n      return result;\n    } else if (this._formatInput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: data[i].output\n        });\n      }\n      return result;\n    } else if (this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: data[i].input,\n          output: this._formatOutput(data[i].output)\n        });\n      }\n      return result;\n    }\n    return data;\n  }\n\n  addFormat(data) {\n    this.inputLookup = lookup.addKeys(data.input, this.inputLookup);\n    if (this.inputLookup) {\n      this.inputLookupLength = Object.keys(this.inputLookup).length;\n    }\n    this.outputLookup = lookup.addKeys(data.output, this.outputLookup);\n    if (this.outputLookup) {\n      this.outputLookupLength = Object.keys(this.outputLookup).length;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array,\n   *  }\n   * }\n   */\n  test(data) {\n    data = this.formatData(data);\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < data.length; i++) {\n        const output = this.runInput(data[i].input);\n        const target = data[i].output;\n        const actual = output[0] > this.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = data[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(output.map((value, i) => {\n          return target[i] - value;\n        }));\n      }\n\n      return {\n        error: errorSum / data.length,\n        misclasses: misclasses,\n        total: data.length,\n        trueNeg: trueNeg,\n        truePos: truePos,\n        falseNeg: falseNeg,\n        falsePos: falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / data.length\n      };\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input);\n      const target = data[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = data[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected\n        });\n      }\n\n      errorSum += mse(output.map((value, i) => {\n        return target[i] - value;\n      }));\n    }\n    return {\n      error: errorSum / data.length,\n      misclasses: misclasses,\n      total: data.length\n    };\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    const layers = [];\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = {};\n\n      let nodes;\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup);\n      } else if (this.outputLookup && layer === this.outputLayer) {\n        nodes = Object.keys(this.outputLookup);\n      } else {\n        nodes = range(0, this.sizes[layer]);\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j];\n        layers[layer][node] = {};\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j];\n          layers[layer][node].weights = {};\n          for (let k in layers[layer - 1]) {\n            let index = k;\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k];\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\n          }\n        }\n      }\n    }\n    return {\n      sizes: this.sizes.slice(0),\n      layers,\n      outputLookup: this.outputLookup !== null,\n      inputLookup: this.inputLookup !== null,\n      activation: this.activation,\n      trainOpts: this.getTrainOptsJSON()\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    Object.assign(this, this.constructor.defaults, json);\n    this.sizes = json.sizes;\n    this.initialize();\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      let layer = json.layers[i];\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.toHash(layer);\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n      else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.toHash(layer);\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer);\n        this.sizes[i] = nodes.length;\n        for (let j in nodes) {\n          if (nodes.hasOwnProperty(j)) {\n            const node = nodes[j];\n            this.biases[i][j] = layer[node].bias;\n            this.weights[i][j] = toArray(layer[node].weights);\n          }\n        }\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this.updateTrainingOptions(json.trainOpts);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const activation = this.activation;\n    const leakyReluAlpha = this.leakyReluAlpha;\n    let needsVar = false;\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `(input['${nodeKey}']||0)`\n          : `(input[${nodeKey}]||0)`;\n      }\n\n      const layer = layers[layerNumber];\n      const node = layer[nodeKey];\n      let result = ['(' , node.bias];\n      for (let w in node.weights) {\n        if (node.weights[w] < 0) {\n          result.push(`${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        } else {\n          result.push(`+${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        }\n      }\n      result.push(')');\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result.join('')})`;\n        default:\n          throw new Error(`unknown activation type ${activation}`);\n      }\n    }\n\n    const layers = this.toJSON().layers;\n    const layersAsMath = [];\n    let result;\n    for (let i in layers[layers.length - 1]) {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\n    }\n    if (this.outputLookup) {\n      result = `{${\n        Object.keys(this.outputLookup)\n          .map((key, i) => `'${key}':${layersAsMath[i]}`)\n        }}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    return new Function('input', `${ needsVar ? 'var v;' : '' }return ${result};`);\n  }\n}\n\n\nfunction getTypedArrayFn(value, table) {\n  if (value.buffer instanceof ArrayBuffer) {\n    return null;\n  } else if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  } else {\n    const length = Object.keys(table).length;\n    return (v) => {\n      const array = new Float32Array(length);\n      for (let p in table) {\n        array[table[p]] = v[p] || 0;\n      }\n      return array;\n    }\n  }\n}\n\n\nmodule.exports = NeuralNetwork;\n","const { GPU, alias } = require('gpu.js');\nconst NeuralNetwork = require('./neural-network');\nconst lookup = require('./lookup');\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0;\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  );\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nclass NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options);\n    this.forwardPropagate = [];\n    this.backwardPropagate = [];\n    this.changesPropagate = [];\n    this.biasesPropagate = [];\n    this.biasCopies = [];\n    this.copyBias = [];\n    this.changesCopies = [];\n    this.copyChanges = [];\n    this.weightsCopies = [];\n    this.copyWeights = [];\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  /**\n   *\n   */\n  initialize() {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation() {\n    return;\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    );\n  }\n\n  /**\n   *\n   * @param value\n   * @param logErrorRate\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer])[0];\n    } else {\n      return null;\n    }\n  }\n\n  adjustWeights() {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput() {\n    let weightedSum = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [this.sizes[1]],\n      pipeline: true,\n      immutable: true,\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcErrorOutput', calcErrorOutput),\n            deltas: alias('calcDeltas', calcDeltas),\n          },\n          function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n          }\n        );\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcError', calcError),\n            deltas: alias('calcDeltas', calcDeltas),\n          },\n          function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.deltas[layer + 1].length,\n            },\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output;\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](\n          this.outputs[layer],\n          target);\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1],\n        );\n      }\n\n      this.deltas[layer] = output.deltas;\n      this.errors[layer] = output.error;\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: alias('addWeights', addWeights),\n          changes: alias('calcChanges', calcChanges),\n        },\n        function (previousOutputs, deltas, weights, changes) {\n          const change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n        }\n      );\n\n      this.copyChanges[layer] = this.gpu.createKernel(\n        function(value) { return value[this.thread.y][this.thread.x]; },\n        {\n          output: this.changesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n\n      this.copyWeights[layer] = this.gpu.createKernel(\n        function (value) { return value[this.thread.y][this.thread.x]; },\n        {\n          output: this.changesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        this.weightsCopies[layer] || this.weights[layer],\n        this.changesCopies[layer] || this.changes[layer]\n      );\n      this.changes[layer] = output.changes;\n      this.weights[layer] = output.weights;\n\n      this.changesCopies[layer] = this.copyChanges[layer](output.changes);\n      this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n      });\n      this.copyBias[layer] = this.gpu.createKernel(\n        function(value) { return value[this.thread.x]; },\n        {\n          output: this.biasesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biases[layer] = this.biasesPropagate[layer](\n        this.biasCopies[layer] || this.biases[layer],\n        this.deltas[layer]\n      );\n      this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    const inputTexture = this.texturizeInputData(input);\n    const outputTextures = this.runInput(inputTexture);\n    let output = outputTextures.toArray ? outputTextures.toArray() : outputTextures;\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function(value) { return value[this.thread.x]; },\n      {\n        output: [data[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n\n    return {\n      data: data.map(set => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n  toJSON() {\n    if (!this.weights[1].toArray) {\n      // in fallback mode\n      return super.toJSON();\n    }\n\n    // in GPU mode\n    const weights = [];\n    const biases = [];\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      weights[layer] = Array.from(this.weights[layer].toArray(this.gpu));\n      biases[layer] = Array.from(this.biases[layer].toArray(this.gpu));\n    }\n\n    // pseudo lo-fi decorator\n    return NeuralNetwork.prototype.toJSON.call({\n      activation: this.activation,\n      inputLookup: this.inputLookup,\n      outputLookup: this.outputLookup,\n      outputLayer: this.outputLayer,\n      sizes: this.sizes,\n      getTrainOptsJSON: () => this.getTrainOptsJSON(),\n      weights,\n      biases,\n    });\n  }\n}\n\nmodule.exports = NeuralNetworkGPU;\n","const { Internal } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  get width() {\n    return this.layer.width;\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height() {\n    return this.layer.height;\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas() {\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas) {\n    this.layer.deltas = deltas;\n  }\n\n  get weights() {\n    return this.layer.weights;\n  }\n\n  set weights(weights) {\n    this.layer.weights = weights;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.layer.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentConnection\n};\n","const { Internal } = require('./types');\nconst { Base } = require('./base');\n\nclass RecurrentInput extends Internal {\n  setRecurrentInput(recurrentInput) {\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas) {\n    this.recurrentInput.deltas = deltas;\n  }\n\n  get weights() {\n    return this.recurrentInput.weights;\n  }\n\n  set weights(weights) {\n    this.recurrentInput.weights = weights;\n  }\n\n  validate() {\n    Base.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentInput\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Internal } = require('./types');\n\nclass RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null;\n    this.width = width;\n    this.height = height;\n    this.weights = zeros2D(width, height);\n    this.deltas = zeros2D(width, height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  }\n}\n\nfunction recurrentZeros() {\n  return new RecurrentZeros();\n}\n\nmodule.exports = {\n  RecurrentZeros,\n  recurrentZeros,\n};\n","const { RecurrentConnection } = require('./layer/recurrent-connection');\nconst { RecurrentInput } = require('./layer/recurrent-input');\nconst { RecurrentZeros } = require('./layer/recurrent-zeros');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst mse2d = require('./utilities/mse-2d');\nconst { FeedForward } = require('./feed-forward');\n// const Base from './layer/base'\n\nclass Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 1 dimensional array of hidden layers defined from results from settings.hiddenLayers\n       * @type Object[]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _hiddenLayerSets are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayerSets: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    };\n  }\n\n  _connectLayers() {\n    const initialLayers = [];\n    const inputLayer = this.inputLayer();\n    this._inputLayer = inputLayer;\n    this.layers.push(inputLayer);\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    this._hiddenLayerSets = hiddenLayers;\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    );\n    this._outputLayer = outputLayer;\n    this.layers.push(outputLayer);\n    initialLayers.push(inputLayer);\n    initialLayers.push(...hiddenLayers);\n    initialLayers.push(outputLayer);\n    const flattenedLayers = flattenLayers(initialLayers);\n    this._inputLayers = flattenedLayers.slice(\n      0,\n      flattenedLayers.indexOf(inputLayer) + 1\n    );\n    this._hiddenLayerSets = [\n      flattenedLayers.slice(\n        flattenedLayers.indexOf(inputLayer) + 1,\n        flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n      ),\n    ];\n    this._outputLayers = flattenedLayers.slice(\n      flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n    );\n    this._outputLayers.unshift();\n    this._recurrentIndices = [];\n    this._model = [];\n    for (let i = 0; i < this._hiddenLayerSets[0].length; i++) {\n      if (\n        Object.getPrototypeOf(this._hiddenLayerSets[0][i].constructor).name ===\n        'Model'\n      ) {\n        this._model.push(this._hiddenLayerSets[0][i]);\n        this._hiddenLayerSets[0].splice(i, 1);\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(\n        this._hiddenLayerSets[0].indexOf(hiddenLayers[i])\n      );\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n      this.layers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = [];\n    const previousHiddenLayers = this._hiddenLayerSets[\n      this._hiddenLayerSets.length - 1\n    ];\n    const firstLayer = this._hiddenLayerSets[0];\n    let recurrentIndex = 0;\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer;\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(settings, inputLayer);\n          break;\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break;\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput();\n              layer.setDimensions(\n                previousHiddenLayer.width,\n                previousHiddenLayer.height\n              );\n              layer.setRecurrentInput(\n                previousHiddenLayers[this._recurrentIndices[recurrentIndex]]\n              );\n              recurrentIndex++;\n              break;\n          }\n          break;\n        }\n        case 'Model': {\n          layer = previousHiddenLayer;\n          break;\n        }\n        case 'Modifier': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Operator': {\n          const inputLayer1 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)\n            ] || previousHiddenLayer.inputLayer1;\n          const inputLayer2 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)\n            ] || previousHiddenLayer.inputLayer2;\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2);\n          break;\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousHiddenLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousHiddenLayer.constructor).name\n            }`\n          );\n      }\n\n      hiddenLayers[i] = layer;\n    }\n    this._hiddenLayerSets.push(hiddenLayers);\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this.layers = [];\n    this._previousInputs = [];\n    this._outputConnection = new RecurrentConnection();\n    this._connectLayers();\n    this.initializeLayers(this._model);\n    this.initializeLayers(this._inputLayers);\n    this.initializeLayers(this._hiddenLayerSets[0]);\n    this.initializeLayers(this._outputLayers);\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep();\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i];\n      hiddenLayer.reuseKernels(this._hiddenLayerSets[0][i]);\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1;\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayerSets[x];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n\n      this._inputLayers[0].predict([input[x]]);\n      this._previousInputs.push(this._inputLayers[0].weights);\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict();\n      }\n      for (let i = 0; i < this._hiddenLayerSets[x].length; i++) {\n        this._hiddenLayerSets[x][i].predict();\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict();\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n    this.initializeDeep();\n    return stats;\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x;\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop();\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([[target[x]]]);\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare();\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare();\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare();\n      }\n    }\n  }\n\n  adjustWeights() {\n    for (\n      let hiddenLayersIndex = 0;\n      hiddenLayersIndex < this._hiddenLayerSets.length;\n      hiddenLayersIndex++\n    ) {\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn();\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1);\n    this._calculateDeltas(input.slice(1), 0);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\n      return mse2d(\n        outputLayer.errors.hasOwnProperty('toArray')\n          ? outputLayer.errors.toArray()\n          : outputLayer.errors\n      );\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  Recurrent\n};\n","const zeros = require('../../utilities/zeros');\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n    this.deltas = zeros(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed');\n    return this.weights[ix];\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.weights[ix] = v;\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.deltas[ix] = v;\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    };\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns);\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n    return matrix;\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length;\n    const columns = weightRows[0].length;\n    const m = new Matrix(rows, columns);\n\n    deltasRows = deltasRows || weightRows;\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex];\n      const deltasValues = deltasRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n      }\n    }\n\n    return m;\n  }\n\n  weightsToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.weights[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n\n  deltasToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.deltas[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n}\n\nmodule.exports = Matrix;\n","function randomFloat(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\nfunction randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n\nmodule.exports = { randomFloat, randomInteger, randomN };\n","const Matrix = require('.');\nconst { randomFloat } = require('../../utilities/random');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nclass RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n\nmodule.exports = RandomMatrix;\n","const Matrix = require('.');\nconst ones = require('../../utilities/ones');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass OnesMatrix extends Matrix {\n  constructor(rows, columns) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = ones(rows * columns);\n    this.deltas = ones(rows * columns);\n  }\n}\n\nmodule.exports = OnesMatrix;\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function copy(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n};\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n};\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nmodule.exports = function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiply(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n};\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElement(product, left, right) {\n  const { weights } = left;\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nmodule.exports = function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nmodule.exports = function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n};\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nmodule.exports = function rowPluckB(product, left, rowIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","const Matrix = require('.');\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nmodule.exports = function softmax(m) {\n  const result = new Matrix(m.rows, m.columns); // probability volume\n  let maxVal = -999999;\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n};\n","const Matrix = require('./');\nconst OnesMatrix = require('./ones-matrix');\nconst copy = require('./copy');\nconst cloneNegative = require('./clone-negative');\nconst add = require('./add');\nconst addB = require('./add-b');\nconst allOnes = require('./all-ones');\nconst multiply = require('./multiply');\nconst multiplyB = require('./multiply-b');\nconst multiplyElement = require('./multiply-element');\nconst multiplyElementB = require('./multiply-element-b');\nconst relu = require('./relu');\nconst reluB = require('./relu-b');\nconst rowPluck = require('./row-pluck');\nconst rowPluckB = require('./row-pluck-b');\nconst sigmoid = require('./sigmoid');\nconst sigmoidB = require('./sigmoid-b');\nconst tanh = require('./tanh');\nconst tanhB = require('./tanh-b');\nconst softmax = require('./softmax');\n\nclass Equation {\n  constructor() {\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns);\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, right.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n    return product;\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    this.states.push({\n      product: input,\n      forwardFn: (product) => {\n        product.weights = input.weights = this.inputValue;\n      }\n    });\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this;\n    const product = new Matrix(m.columns, 1);\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow;\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0;\n    let iBackpropagate = 0;\n    this.states.push({\n      forwardFn() {\n        iForward++;\n      },\n      backpropagationFn() {\n        iBackpropagate++;\n      },\n    });\n    return m;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagate() {\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagateIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  predictTarget(input, target) {\n    const output = this.runInput(input);\n    let errorSum = 0;\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n    return errorSum;\n  }\n\n  predictTargetIndex(input, target) {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    let probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n\nmodule.exports = Equation;\n","const { randomFloat } = require('../../utilities/random');\n\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  let x = 0;\n  let i = 0;\n  const w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n};\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function maxI(m) {\n  // argmax of array w\n  const { weights } = m;\n  let maxv = weights[0];\n  let maxix = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n};\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nclass DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.specialIndexes = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else {\n        const character = values[dataFormatterIndex];\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[dataFormatterIndex] = true;\n        this.characters.push(character);\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = [];\n    const { indexTable } = this;\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i];\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable['unrecognized']) {\n          index = indexTable['unrecognized'];\n        } else {\n          throw new Error(`unrecognized character \"${ character }\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result = null;\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    }\n\n    if (value2 === null) return result;\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n    } else {\n      return result.concat(this.toIndexes(value2, maxThreshold));\n    }\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      let index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable['unrecognized']) {\n          character = characterTable[indexTable['unrecognized']];\n        } else {\n          throw new Error(`unrecognized index \"${ index }\"`);\n        }\n      } else if (character !== null) {\n        result.push(character);\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized() {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    const dataFormatter = new DataFormatter(values, maxThreshold);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special, character = null) {\n    let specialIndex = this.indexTable[special] = this.characters.length;\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  countSpecial(output) {\n    let sum = 0;\n    for (let i = 0; i < this.specialIndexes; i++) {\n      let index = -1;\n      while (index = output.indexOf(this.specialIndexes[i], index) > -1) {\n        sum++;\n      }\n    }\n    return sum;\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${ JSON.stringify(this.characterTable) };\nvar indexTable = ${ JSON.stringify(this.indexTable) };\nvar characters = ${ JSON.stringify(this.characters) };\nvar dataFormatter = {\n  ${ this.toIndexes.toString() },\n  ${ this.toIndexesInputOutput.toString() },\n  ${ this.toCharacters.toString() }\n};`;\n  }\n}\n\nmodule.exports = DataFormatter;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst softmax = require('./matrix/softmax');\nconst copy = require('./matrix/copy');\nconst { randomFloat } = require('../utilities/random');\nconst zeros = require('../utilities/zeros');\nconst DataFormatter = require('../utilities/data-formatter');\nconst NeuralNetwork = require('../neural-network');\n\nclass RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor;\n\n    Object.assign(this, defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.ratioClipped = null;\n    this.model = null;\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n      outputConnector: null,\n    };\n\n    if (this.dataFormatter) {\n      this.inputSize =\n      this.inputRange =\n      this.outputSize = this.dataFormatter.characters.length;\n    }\n    this.mapModel();\n  }\n\n  createHiddenLayers() {\n    //0 is end, so add 1 to offset\n    this.model.hiddenLayers.push(this.constructor.getModel(this.hiddenLayers[0], this.inputSize));\n    let prevSize = this.hiddenLayers[0];\n\n    for (let d = 1; d < this.hiddenLayers.length; d++) { // loop over depths\n      let hiddenSize = this.hiddenLayers[d];\n      this.model.hiddenLayers.push(this.constructor.getModel(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      //wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      //whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      //bhh\n      bias: new Matrix(hiddenSize, 1)\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(\n            hiddenLayer.weight,\n            inputMatrix\n          ),\n          multiply(\n            hiddenLayer.transition,\n            previousResult\n          )\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    );\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    );\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1);\n  }\n\n  bindEquation() {\n    const model = this.model;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], model.hiddenLayers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = this.hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], model.hiddenLayers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const model = this.model;\n    const hiddenLayers = model.hiddenLayers;\n    const allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createInputMatrix();\n    if (!model.input) throw new Error('net.model.input not set');\n    allMatrices.push(model.input);\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  /**\n   *\n   * @param {Number[]|string[]|string} input\n   * @param {boolean} [logErrorRate]\n   * @returns {number}\n   */\n  trainPattern(input, logErrorRate) {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  trainInput(input) {\n    this.runs++;\n    let model = this.model;\n    let max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {//last is zero\n      this.bindEquation();\n    }\n    for (let inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\n      // start and end tokens are zeros\n      let equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      let source = (inputIndex === -1 ? 0 : input[inputIndex] + 1); // first step: start with START token\n      let target = (inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1); // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  backpropagate(input) {\n    let i = input.length;\n    let model = this.model;\n    let equations = model.equations;\n    while(i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights() {\n    const { regc, clipval, model, decayRate, stepCache, smoothEps, trainOpts } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas }  = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        }\n        if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] = w + -learningRate * r / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(rawInput = [], isSampleI = false, temperature = 1) {\n    const maxPredictionLength = this.maxPredictionLength + rawInput.length + (this.dataFormatter ? this.dataFormatter.specialIndexes.length : 0);\n    if (!this.isRunnable) return null;\n    const input = this.formatDataIn(rawInput);\n    const model = this.model;\n    const output = [];\n    let i = 0;\n    while (true) {\n      let previousIndex = (i === 0\n        ? 0\n        : i < input.length\n          ? input[i - 1] + 1\n          : output[i - 1])\n          ;\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      let equation = model.equations[i];\n      // sample predicted letter\n      let outputMatrix = equation.runIndex(previousIndex);\n      let logProbabilities = new Matrix(model.output.rows, model.output.columns);\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      let probs = softmax(logProbabilities);\n      let nextIndex = (isSampleI ? sampleI(probs) : maxI(probs));\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output\n        .slice(input.length)\n        .map(value => value - 1)\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    Object.keys(this.constructor.trainDefaults).forEach(p => this.trainOpts[p] = (options.hasOwnProperty(p)) ? options[p] : this.trainOpts[p]);\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options) {\n    NeuralNetwork.prototype.validateTrainingOptions.call(this, options);\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime\n    };\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    let iterations = options.iterations;\n    let errorThresh = options.errorThresh;\n    let log = options.log === true ? console.log : options.log;\n    let logPeriod = options.logPeriod;\n    let callback = options.callback;\n    let callbackPeriod = options.callbackPeriod;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat() {\n    throw new Error('not yet implemented');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    if (options.dataFormatter) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n    }\n\n    this.model = {\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    let model = this.model;\n    let equations = this.model.equations;\n    let equation = equations[1];\n    let states = equation.states;\n    let jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n          } else {\n            return `new Matrix(${m.rows}, ${m.columns})`;\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }': //compiled from ${ fileName(fnName) }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${ jsonString };\n  ${ this.dataFormatter ? `${this.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);` : '' }\n  ${this.dataFormatter && typeof this.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${\n        toInner(this.formatDataIn.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  ${this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${\n        toInner(this.formatDataOut.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  var input = ${\n      (this.dataFormatter && typeof this.formatDataIn === 'function')\n        ? 'formatDataIn(rawInput)' \n        : 'rawInput'\n    };\n  var maxPredictionLength = input.length + ${ this.maxPredictionLength };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    \n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n    \n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${ (this.dataFormatter && typeof this.formatDataOut === 'function') \n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })' };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString() }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', 'isSampleI', 'temperature', src);\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenLayers: [20,20],\n  outputSize: 20,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  maxPredictionLength: 100,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData: function(data) {\n    if (\n      typeof data[0] !== 'string'\n      && !Array.isArray(data[0])\n      && (\n        !data[0].hasOwnProperty('input')\n        || !data[0].hasOwnProperty('output')\n      )\n    ) {\n      return data;\n    }\n    let values = [];\n    const result = [];\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i]);\n        }\n        this.dataFormatter = new DataFormatter(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i]));\n      }\n    } else {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i].input);\n          values.push(data[i].output);\n        }\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i].input, data[i].output));\n      }\n    }\n    return result;\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn: function(input, output = null) {\n    if (this.dataFormatter) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      } else {\n        return this.dataFormatter.toIndexes(input);\n      }\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut: function(input, output) {\n    if (this.dataFormatter) {\n      return this.dataFormatter\n        .toCharacters(output)\n        .join('');\n    }\n    return output;\n  },\n  dataFormatter: null\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callback: null,\n  callbackPeriod: 10\n};\n\nmodule.exports = RNN;\n","function ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  const table = this.table = {};\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const input = datum[prop];\n    for (let j = 0; j < input.length; j++) {\n      for (let p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = ArrayLookupTable;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst RNN = require('./rnn');\nconst zeros = require('../utilities/zeros');\nconst softmax = require('./matrix/softmax');\nconst {randomFloat} = require('../utilities/random');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst lookup = require(\"../lookup\");\nconst LookupTable = require('../utilities/lookup-table');\nconst ArrayLookupTable = require('../utilities/array-lookup-table');\nconst {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } = require('../utilities/cast');\n\nclass RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options);\n  }\n\n  createInputMatrix() {}\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    if (this.outputLookup) {\n      this.run = this.runObjects;\n      return this.runObjects(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized(data);\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(lookup.toTable2D(data)).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget([input[i]], [input[i + 1]]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length),\n        inputArray.length);\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastNumbers(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runObjects(input) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, 1).map(value => lookup.toObject(this.outputLookup, value))[0];\n  }\n\n  forecastObjects(input, count) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, count).map(value => lookup.toObject(this.outputLookup, value));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return [result];\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n        if (this.inputSize !== data[0].length) {\n          throw new Error('inputSize must match data input size');\n        }\n        if (this.outputSize !== data[0].length) {\n          throw new Error('outputSize must match data input size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return [result];\n      }\n      case 'array,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new LookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(objectToFloat32Array(data[i][j], this.inputLookup, this.inputLookupLength));\n          }\n          result.push(array);\n        }\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n        } else {\n          if (this.inputSize !== data[0].input[0].length) {\n            throw new Error('inputSize must match data input size');\n          }\n          if (this.outputSize !== data[0].output[0].length) {\n            throw new Error('outputSize must match data output size');\n          }\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        if (!this.inputLookup) {\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(datum.input, this.inputLookup, this.inputLookupLength),\n            output: objectsToFloat32Arrays(datum.output, this.outputLookup, this.outputLookupLength)\n          });\n        }\n        return result;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            errorCount++;\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number':\n      {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(lookup.toObjectPartial(this.outputLookup, input, 0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {}\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n            errorCount++;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n            errorCount++;\n          }\n\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n\n    return {\n      error: errorSum / formattedData.length,\n      misclasses: misclasses,\n      total: formattedData.length\n    };\n  }\n\n  addFormat(value) {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(value.input, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(value.output, this.outputLookup);\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(value, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < value.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(value[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        for (let i = 0; i < value.input.length; i++) {\n          this.inputLookup = lookup.addKeys(value.input[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        for (let i = 0; i < value.output.length; i++) {\n          this.outputLookup = lookup.addKeys(value.output[i], this.outputLookup);\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = input.weights = this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: RNN.defaults.learningRate,\n  decayRate: RNN.defaults.decayRate,\n  smoothEps: RNN.defaults.smoothEps,\n  regc: RNN.defaults.regc,\n  clipval: RNN.defaults.clipval\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n\nmodule.exports = RNNTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    );\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    );\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    );\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    );\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n}\n\nmodule.exports = LSTM;\n","const Matrix = require('./matrix');\nconst LSTM = require('./lstm');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass LSTMTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return LSTM.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = LSTMTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    );\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    );\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    );\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    );\n  }\n}\n\nmodule.exports = GRU;\n","// import Matrix from './matrix'\nconst GRU = require('./gru');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.getModel(hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = GRUTimeStep;\n","const NeuralNetwork = require('../neural-network');\nconst RNN = require('../recurrent/rnn');\nconst RNNTimeStep = require('../recurrent/rnn-time-step');\nconst { FeedForward } = require('../feed-forward');\nconst { Recurrent } = require('../recurrent');\nconst { recurrentZeros } = require('../layer/recurrent-zeros');\n\nconst recurrentJSONTypes = [\n  'RNN',\n  'LSTM',\n  'GRU',\n  'RNNTimeStep',\n  'LSTMTimeStep',\n  'GRUTimeStep',\n  'Recurrent'\n];\n\nfunction drawInput({ pixelX, pixelY, radius, inputs, row, line, fontSize, fontClassName }) {\n  let svg = `<rect\n              x=\"${ pixelX / 2 - radius }\"\n              y=\"${ pixelY / 2 + row * pixelY - radius }\"\n              width=\"${ 2 * radius }\"\n              height=\"${ 2 * radius }\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${ inputs.color }\" \n              class=\"${ inputs.className }\" />\n            <line\n              x1=\"${ pixelX / 4 }\"\n              y1=\"${ pixelY / 2 + row * pixelY }\"\n              x2=\"${ pixelX / 2 - radius }\"\n              y2=\"${ pixelY / 2 + row * pixelY }\"\n              style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n              class=\"${ line.className }\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${ pixelX / 8 }\"\n              y=\"${ pixelY / 2 + row * pixelY - 5 }\"\n              fill=\"black\"\n              font-size=\"${ fontSize }\"\n              class=\"${ fontClassName }\">${ inputs.labels[row] }</text>`;\n  }\n  return svg;\n}\n\nfunction drawNeuron({ pixelX, pixelY, row, column, radius, hidden }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ hidden.color }\"\n            class=\"${ hidden.className }\" />`\n}\n\nfunction drawOutput({ pixelX, pixelY, row, column, line, outputs, radius }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ outputs.color }\"\n            class=\"${ outputs.className }\" />\n          <line\n            x1=\"${ pixelX / 2 + column * pixelX + radius }\"\n            y1=\"${ pixelY / 2 + row * pixelY }\"\n            x2=\"${ pixelX / 2 + column * pixelX + pixelX / 4 }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`\n}\n\nfunction drawBackwardConnections({ pixelX, pixelY, row, column, radius, lineY, line, previousConnectionIndex }) {\n  return `<line\n            x1=\"${ pixelX / 2 + (column - 1) * pixelX + radius }\"\n            y1=\"${ lineY / 2 + previousConnectionIndex * lineY }\"\n            x2=\"${ pixelX / 2 + column * pixelX - radius }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`;\n}\n\nfunction neuralNetworkToSVG(options) {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput(Object.assign({ pixelX, pixelY, row, column }, options));\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput(Object.assign({ pixelX, pixelY, row, column }, options));\n        } else {\n          svg += drawNeuron(Object.assign({ pixelX, pixelY, row, column }, options));\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (let previousConnectionIndex = 0; previousConnectionIndex < previousSize; previousConnectionIndex++) {\n          svg += drawBackwardConnections(Object.assign({ pixelX, pixelY, row, column, lineY, previousConnectionIndex }, options));\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nfunction rnnToSVG(options) {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${ recurrentLine.color }\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine });\n    }\n  }\n  return svg;\n\n  function drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine }) {\n    const moveX = (pixelX / 2 + column * pixelX + radius) + 1;\n    const moveY = pixelY / 2 + row * pixelY;\n    const x = (moveX - (radius * 2)) - 2;\n    const y = moveY;\n    const x1 = x + 100;\n    const y1 = y + 50;\n    const x2 = moveX - 100;\n    const y2 = moveY + 50;\n    return `<path\n              d=\"M ${ moveX } ${ moveY } C ${ x1 } ${ y1 }, ${ x2 } ${ y2 }, ${ x } ${ y }\"\n              stroke=\"${ recurrentLine.color }\"\n              stroke-width=\"${ recurrentLine.width }\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${ recurrentLine.className }\" />`;\n  }\n}\n\nfunction getFeedForwardLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1]));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction getRecurrentLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction wrapSVG(svgBody, width, height) {\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${ width }\"\n            height=\"${ height }\">${ svgBody }</svg>`;\n}\n\nfunction getSizes(object) {\n  return (typeof object.inputSize === 'number'\n    && Array.isArray(object.hiddenLayers)\n    && object.hiddenLayers.every(l => typeof l === 'number')\n    && typeof object.outputSize === 'number')\n  ? [object.inputSize]\n      .concat(object.hiddenLayers)\n      .concat([object.outputSize])\n  : null\n}\n\nfunction toSVG(net, options) {\n  //default values\n  const defaultOptions = {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection'\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence'\n    },\n    inputs: {\n      color:'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input'\n    },\n    outputs: {\n      color:'rgba(100, 149, 237, 0.5)',\n      className: 'output'\n    },\n    hidden: {\n      color:'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron'\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250\n  };\n\n  const mergedOptions = { ...defaultOptions, ...options };\n  const {\n    width,\n    height,\n    inputs,\n  } = mergedOptions;\n\n  const isRNN = net.hasOwnProperty('model')\n    || net instanceof Recurrent\n    || (net.type && recurrentJSONTypes.indexOf(net.type) !== -1);\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes = null;\n  if (\n    net instanceof NeuralNetwork\n    || net instanceof RNN\n    || net instanceof RNNTimeStep\n  ) {\n    sizes = getSizes(net);\n  }\n  // Get network size array for NeuralNetwork json\n  else if (net.sizes) {\n    sizes = net.sizes;\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputLayer, hiddenLayers, outputLayer } = getRecurrentLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputLayer, hiddenLayers, outputLayer } = getFeedForwardLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // handle json, recurrent first\n  else if (isRNN) {\n    if (net.options) {\n      sizes = getSizes(net.options);\n    }\n  }\n  // handle json, NeuralNetwork\n  else {\n    sizes = getSizes(net);\n  }\n\n  if (!sizes) throw new Error('sizes not set');\n\n  if (inputs.labels && inputs.labels.length !== sizes[0]) throw new Error('not enough labels for inputs');\n\n  if (isRNN) {\n    return wrapSVG(rnnToSVG({ ...mergedOptions, sizes }), width, height);\n  } else {\n    return wrapSVG(neuralNetworkToSVG({ ...mergedOptions, sizes }), width, height);\n  }\n}\n\nmodule.exports = toSVG;\n","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n"]}