{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/dist/core/utils-core.js","../node_modules/gpu.js/dist/core/input.js","../node_modules/gpu.js/dist/core/texture.js","../node_modules/gpu.js/dist/core/utils.js","../node_modules/gpu.js/dist/backend/kernel-run-shortcut.js","../node_modules/gpu.js/dist/backend/runner-base.js","../node_modules/gpu.js/dist/backend/kernel-base.js","../node_modules/gpu.js/dist/backend/web-gl/shader-frag.js","../node_modules/gpu.js/dist/backend/web-gl/shader-vert.js","../node_modules/gpu.js/dist/backend/web-gl/kernel-string.js","../node_modules/gpu.js/dist/backend/web-gl/kernel.js","../node_modules/gpu.js/dist/backend/function-builder-base.js","../node_modules/acorn/dist/acorn.es.js","../node_modules/gpu.js/dist/backend/function-node-base.js","../node_modules/gpu.js/dist/backend/web-gl/function-node.js","../node_modules/gpu.js/dist/backend/web-gl/function-builder.js","../node_modules/gpu.js/dist/backend/web-gl/runner.js","../node_modules/gpu.js/dist/backend/web-gl2/function-node.js","../node_modules/gpu.js/dist/backend/web-gl2/function-builder.js","../node_modules/gpu.js/dist/backend/web-gl2/shader-frag.js","../node_modules/gpu.js/dist/backend/web-gl2/shader-vert.js","../node_modules/gpu.js/dist/backend/web-gl2/kernel.js","../node_modules/gpu.js/dist/backend/web-gl2/runner.js","../node_modules/gpu.js/dist/backend/cpu/kernel-string.js","../node_modules/gpu.js/dist/backend/cpu/kernel.js","../node_modules/gpu.js/dist/backend/cpu/function-node.js","../node_modules/gpu.js/dist/backend/cpu/function-builder.js","../node_modules/gpu.js/dist/backend/cpu/runner.js","../node_modules/gpu.js/dist/backend/web-gl/validator-kernel.js","../node_modules/gpu.js/dist/backend/web-gl2/validator-kernel.js","../node_modules/gpu.js/dist/core/gpu-core.js","../node_modules/gpu.js/dist/core/gpu.js","../node_modules/gpu.js/dist/core/alias.js","../node_modules/gpu.js/dist/index.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/zeros-3d.js","layer/base.js","layer/types.js","layer/add.js","utilities/layer-setup.js","utilities/random-weight.js","utilities/randos.js","utilities/randos-2d.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/fully-connected.js","layer/input.js","layer/leaky-relu.js","layer/multiply.js","layer/multiply-element.js","layer/negative.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/pool.js","layer/random.js","layer/regression.js","layer/relu.js","layer/sigmoid.js","layer/soft-max.js","layer/svm.js","layer/tanh.js","layer/target.js","layer/transpose.js","layer/zeros.js","layer/index.js","likely.js","lookup.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/mse-2d.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","feed-forward.js","../node_modules/thaw.js/dist/thaw.js","../node_modules/thaw.js/dist/block.js","../node_modules/thaw.js/dist/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/isarray/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","utilities/random.js","recurrent/matrix/random-matrix.js","recurrent/matrix/ones-matrix.js","recurrent/matrix/copy.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","recurrent/matrix/softmax.js","utilities/data-formatter.js","recurrent/rnn.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","layer/feed-forward.js","layer/gru.js","layer/lstm.js","layer/recurrent.js","layer/output.js","index.js"],"names":["activate","weight","measure","error","Math","max","delta","value","exp","tanh","tanhDerivative","leakyRelu","relu","sigmoid","testPartition","Classifier","opts","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","iterations","learningRate","hiddenSizes","toJSON","shuffleArray","array","i","length","j","floor","random","temp","crossValidate","data","k","size","constructor","Array","newData","keys","forEach","key","avgs","misclasses","results","dclone","slice","splice","result","avg","stat","concat","push","precision","truePos","falsePos","recall","falseNeg","accuracy","trueNeg","total","testSize","trainSize","nonASCIIwhitespace","reservedWords","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","lineBreak","lineBreakG","source","isNewLine","ecma2019String","skipWhiteSpace","ref","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","getOptions","opt","ecmaVersion","allowReserved","onToken","tokens","token","onComment","pushComment","block","text","startLoc","endLoc","comment","locations","loc","ranges","range","plugins","keywordRegexp","words","replace","Parser","startPos","reserved","v","sourceType","reservedStrict","strict","reservedWordsStrict","reservedWordsStrictBind","strictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","split","type","eof","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","allowHashBang","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","Error","this$1","parse","node","program","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","braceR","insertSemicolon","onInsertedSemicolon","semicolon","semi","afterTrailingComma","tokType","notNext","onTrailingComma","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","_var","_break","_continue","parseBreakContinueStatement","_debugger","parseDebuggerStatement","_do","parseDoStatement","_for","parseForStatement","_function","parseFunctionStatement","_class","parseClass","_if","parseIfStatement","_return","parseReturnStatement","_switch","parseSwitchStatement","_throw","parseThrowStatement","_try","parseTryStatement","_const","parseVarStatement","_while","parseWhileStatement","_with","parseWithStatement","braceL","parseBlock","parseEmptyStatement","_export","_import","allowImportExportEverywhere","parseImport","parseExport","maybeName","parseExpression","colon","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","allowAwaitOutsideFunction","enterLexicalScope","parenL","parseFor","init$1","parseVar","_in","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","_else","allowReturnOutsideFunction","argument","discriminant","cases","sawDefault","_case","_default","isCase","exitLexicalScope","empty","handler","_catch","clause","param","parseBindingAtom","parenR","finalizer","_finally","object","i$1","list","label$1","statementStart","generator","async","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","eq","comma","isStatement","allowExpressionBody","initFunction","star","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","_extends","parseExprSubscripts","string","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","bracketL","bracketR","parseObj","close","allowEmpty","allowTrailingComma","elts","ellipsis","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","question","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","logicalOR","logicalAND","op","buildBinary","sawUnary","parseAwait","incDec","starstar","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","dot","property","parseExprList","arrow","parseArrowExpression","callee","arguments","backQuote","tag","quasi","parseTemplate","isTagged","canBeArrow","_super","_this","regexp","parseLiteral","regex","pattern","flags","num","_null","_true","_false","parseParenAndDistinguishExpression","_new","parseNew","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","preserveParens","par","item","empty$1","meta","parseTemplateElement","invalidTemplate","tail","curElt","quasis","dollarBraceL","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","len","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","directSourceFile","pp$6","TokContext","isExpr","preserveSpace","override","types$1","tryReadTemplateToken","pp$7","b_stat","braceIsBlock","prevType","parent","curContext","f_expr","f_stat","b_expr","inGeneratorContext","out","b_tmpl","statementParens","p_stat","p_expr","q_tmpl","f_expr_gen","f_gen","allowed","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","slash","readToken_mult_modulo_exp","tokentype","modulo","readToken_pipe_amp","bitwiseOR","bitwiseAND","readToken_caret","bitwiseXOR","readToken_plus_min","plusMin","readToken_lt_gt","bitShift","relational","readToken_eq_excl","equality","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","template","inTemplate","octalStr","substr","escStart","esc","parse_dammit","LooseParser","pluginsLoose","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","tokTypes","keywordTypes","tokContexts","setup","teardown","makeKernel","kernelInput","gpuInstance","fn","settings","GPU","mode","createKernelMap","map","setOutputToTexture","createKernel","zeros","Float32Array","zeros2D","width","height","y","zeros3D","depth","z","Base","deltas","weights","praxis","defaults","Number","isNaN","layer","predictKernel","compareKernel","previousLayer","nextLayer","run","toArray","jsonLayer","Activation","Internal","Filter","Model","Modifier","Operator","Add","predict","inputWeights1","inputWeights2","thread","x","inputLayer1","inputLayer2","validate","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","randomWeight","randos","randos2D","randos3D","values","fill","Convolution","compareFilters","compareInputs","compareBiases","inputs","filters","biases","output","constants","inputWidth","inputHeight","sum","filterY","filterHeight","inputY","filterX","filterWidth","inputX","inputIndex","inputDepth","filterIndex","filterCount","filterDeltas","offsetY","offsetX","biasDeltas","inputLayer","bias","learnFilters","learnInputs","compareFiltersKernel","compareInputsKernel","compareBiasesKernel","Dropout","trainingPredict","probability","isTraining","learnKernel","FullyConnected","predict3D","compareInputDeltas","compareInputDeltas3D","compareFilterDeltas","compareFilterDeltas3D","inputDeltas","inputWeights","inputZ","compareFilterDeltasKernel","compareInputDeltasKernel","connectionCount","Input","predict1D","LeakyRelu","compare","Multiply","compareFromX","compareFromY","weights1","weights2","compareKernel1","compareKernel2","newDeltas1","newDeltas2","MultiplyElement","inputLayerWeights","Negative","ones","ones2D","Ones","Pool","compare3D","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Random","Regression","learn","targets","Relu","Sigmoid","SoftMax","getMaxValue","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","predict2D","compare2D","loss","maxInput","exponentials","exponentialsSum","indicator","log","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","targetValues","errors","Tanh","Target","compare1D","compareFn","Transpose","transpose","Zeros","add","convolution","dropout","fullyConnected","multiply","multiplyElement","negative","pool","regression","softMax","svm","SVM","likely","net","maxProp","lookup","hashes","reducedHash","reduce","memo","hash","lookupFromHash","lookupHash","MRmsProp","clipByValue","isClippedByValue","getMomentum","decay","previousMomentum","momentumRootMeanSquaredPropagation","previousMomentums","clippedDelta","clipValue","momentum","decayRate","sqrt","smoothEps","regularizationStrength","MomentumRootMeanSquaredPropagation","momentums","setupKernels","kernel","mRmsProp","mse2d","layerFromJSON","require","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","flattenLayers","layers","FeedForward","hiddenLayers","outputLayer","errorCheckInterval","_updateTrainingOptions","trainDefaults","structure","console","_validateTrainingOptions","_setLogMethod","validations","_inputLayer","_connectHiddenLayers","_outputLayer","hiddenLayer","_connectLayers","initializeLayers","inputLookup","runInput","outputLookup","toHash","status","endTime","_prepTraining","_trainingTick","errorThresh","logPeriod","_calculateTrainingError","_trainPatterns","callback","callbackPeriod","_formatData","timeout","initialize","_trainPattern","logErrorRate","_calculateDeltas","_adjustWeights","tmp","datum","buildLookup","datumParam","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","json","getLayer","undefined","EventEmitter","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","module","defaultMaxListeners","setMaxListeners","TypeError","emit","er","args","listeners","addListener","listener","m","newListener","warned","trace","on","once","fired","g","removeListener","removeAllListeners","ret","listenerCount","evlistener","emitter","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","browser","env","argv","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","TrainStream","uniques","arr","Set","neuralNetwork","dataFormatDetermined","inputKeys","outputKeys","floodCallback","doneTrainingCallback","count","finishStreamIteration","bind","Writable","chunk","enc","firstDatum","formatData","trainDatum","trainPattern","lookupFromArray","sizes","inputSize","outputSize","unshift","mse","NeuralNetwork","outputs","changes","calculateDeltas","prevSize","setActivation","activation","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","_initialize","_verifyIsInitialized","Promise","resolve","reject","thawedTrain","Thaw","stop","tick","trainError","incoming","change","datumCheck","isBinary","actual","expected","binaryThresh","misclass","_getTrainOptsJSON","layersAsMath","nodeHandle","layerNumber","nodeKey","w","join","Function","trainStream","checkFns","filter","NeuralNetworkGPU","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","nextWeights","nextDeltas","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","biasCopies","copyBias","changesCopies","copyChanges","weightsCopies","copyWeights","gpu","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getChanges","changeBiases","getMSE","weightedSum","_texturizeInputData","calcDeltas","alias","inputTexture","texturizeOutputData","RecurrentConnection","RecurrentInput","recurrentInput","RecurrentZeros","Recurrent","initialLayers","_outputConnection","setLayer","flattenedLayers","_inputLayers","_hiddenLayers","_outputLayers","_recurrentIndices","_model","getPrototypeOf","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","setDimensions","setRecurrentInput","_previousInputs","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","initializeDeep","hiddenLayersIndex","Matrix","rows","columns","row","ix","matrix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","a","b","gaussRandom","returnV","vVal","u","r","randomInteger","randomN","mu","std","RandomMatrix","OnesMatrix","copy","product","cloneNegative","addB","allOnes","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","multiplyB","leftRowRoot","rightRow","backPropagateValue","multiplyElementB","reluB","rowPluck","rowPluckIndex","rowBase","rowPluckB","sig","sigmoidB","mwi","tanhB","Equation","inputRow","inputValue","states","self","iForward","iBackpropagate","forwardFn","backpropagationFn","sampleI","randomF","_randomF","maxI","maxv","maxix","softmax","maxVal","DataFormatter","maxThreshold","indexTable","characterTable","characters","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","value1","value2","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","JSON","stringify","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sort","RNN","stepCache","runs","totalCost","ratioClipped","model","initialLayerInputs","inputRange","fromJSON","mapModel","getModel","d","hiddenSize","lastHiddenSize","outputConnector","equation","equationConnection","equationConnections","getEquation","inputMatrixToRow","equations","allMatrices","createInputMatrix","createHiddenLayers","createOutputMatrix","runBackpropagate","step","log2ppl","cost","bindEquation","inputMax","equationIndex","logProbabilities","probabilities","log2","stepSize","regc","clipval","numClipped","numTot","matrixIndex","cache","rawInput","maxPredictionLength","isSampleI","temperature","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","keepNetworkIntact","jsonString","previousConnectionIndex","connection","states0","matrixToString","stateIndex","matrixOrigin","toInner","fnString","shift","fileName","fnName","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","src","toFunctionString","inputMatrix","previousResult","transition","fromArrayInputOutput","RNNTimeStep","errorSum","abs","lastOutput","LSTM","inputGate","inputHidden","inputBias","forgetGate","forgetMatrix","forgetHidden","forgetBias","outputGate","outputHidden","outputBias","cellWrite","cellActivationMatrix","cellActivationHidden","cellActivationBias","retainCell","writeCell","LSTMTimeStep","GRU","updateGate","updateGateInputMatrix","updateGateHiddenMatrix","updateGateBias","resetGate","resetGateInputMatrix","resetGateHiddenMatrix","resetGateBias","cell","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","feedForward","updateGateWeights","updateGatePeepholes","resetGateWeights","resetGatePeepholes","cellWeights","cellPeepholes","cellBias","inputGateWeights","inputGatePeepholes","inputGateBias","forgetGateWeights","forgetGatePeepholes","forgetGateBias","outputGateWeights","outputGatePeepholes","outputGateBias","memoryWeights","memoryPeepholes","memoryBias","memory","outputGateConnector","gru","lstm","recurrent","brain","window"],"mappings":"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ClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEQ,OAAA,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJI,MAAMwE,UAAUzD,KAAK8iB,MAAMjkB,GAAKkkB,MAAOlkB,GAAKmkB,kBAC5CnkB,GAAKokB,GAAKpkB,GAAKmkB,iBACfnkB,GAAKqkB,GAAKrkB,GAAKskB,kBAAoBtkB,GAAKukB,IAAMvkB,GAAKwkB,OAEnD,IAAIC,GAAO5c,EAAOjD,UAEd8f,GAAwB,SAA+BrC,GACpDA,KAAAA,OAASA,EACTsC,KAAAA,WAAa,OAAStC,EAAOle,QAAQsC,aAAe,EAAI,KAAO,KAAO4b,EAAOle,QAAQsC,aAAe,EAAI,IAAM,IAC9GlC,KAAAA,OAAS,GACT6Z,KAAAA,MAAQ,GACRxY,KAAAA,MAAQ,EACRgf,KAAAA,SAAU,EACVC,KAAAA,SAAU,EACVhiB,KAAAA,IAAM,EACNiiB,KAAAA,aAAe,EACfC,KAAAA,gBAAkB,GAClBC,KAAAA,6BAA8B,EAC9BC,KAAAA,mBAAqB,EACrBC,KAAAA,iBAAmB,EACnBC,KAAAA,WAAa,GACbC,KAAAA,mBAAqB,IAg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","file":"brain-browser.min.map","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nexport function activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nexport function measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error\n}\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nexport function activate(weight) {\n  return Math.max(0, weight)\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nexport function measure(weight, delta) {\n  if (weight <= 0) {\n    return 0\n  }\n  return delta\n}\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nexport function activate(value) {\n  return 1 / (1 + Math.exp(-value))\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nexport function measure(weight, error) {\n  return weight * (1 - weight) * error\n}\n","/**\n *\n * @param weight\n * @returns {number}\n */\nexport function tanh(weight) {\n  return Math.tanh(weight)\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nexport function tanhDerivative(weight, error) {\n  return (1 - weight * weight) * error\n}\n","import * as leakyRelu from './leaky-relu'\nimport * as relu from './relu'\nimport * as sigmoid from './sigmoid'\nimport * as tanh from './tanh'\n\nexport { leakyRelu, relu, sigmoid, tanh }\n","/**\n *\n * @param {NeuralNetwork|constructor} Classifier\n * @param {object} opts\n * @param {object} trainOpts\n * @param {object} trainSet\n * @param {object} testSet\n * @returns {void|*}\n */\nexport function testPartition(Classifier, opts, trainOpts, trainSet, testSet) {\n  const classifier = new Classifier(opts)\n  const beginTrain = Date.now()\n  const trainingStats = classifier.train(trainSet, trainOpts)\n  const beginTest = Date.now()\n  const testStats = classifier.test(testSet)\n  const endTest = Date.now()\n  const stats = Object.assign({}, testStats, {\n    trainTime: beginTest - beginTrain,\n    testTime: endTest - beginTest,\n    iterations: trainingStats.iterations,\n    trainError: trainingStats.error,\n    learningRate: trainOpts.learningRate,\n    hidden: classifier.hiddenSizes,\n    network: classifier.toJSON(),\n  })\n\n  return stats\n}\n\n/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n * source: http://stackoverflow.com/a/12646864/1324039\n */\nexport function shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    const temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array\n}\n\n/**\n *\n * @param {NeuralNetwork|constructor} Classifier\n * @param {object} data\n * @param {object} opts\n * @param {object} trainOpts\n * @param {number} k\n * @returns {\n *  {\n *    avgs: {\n *      error: number,\n *      trainTime: number,\n *      testTime: number,\n *      iterations: number,\n *      trainError: number\n *    },\n *    stats: {\n *      truePos: number,\n *      trueNeg: number,\n *      falsePos: number,\n *      falseNeg: number,\n *      total: number\n *    },\n *    sets: Array,\n *    misclasses: Array\n *  }\n * }\n */\nexport default function crossValidate(Classifier, data, opts, trainOpts, k) {\n  k = k || 4\n  const size = data.length / k\n\n  if (data.constructor === Array) {\n    shuffleArray(data)\n  } else {\n    const newData = {}\n    shuffleArray(Object.keys(data)).forEach(key => {\n      newData[key] = data[key]\n    })\n    data = newData\n  }\n\n  const avgs = {\n    error: 0,\n    trainTime: 0,\n    testTime: 0,\n    iterations: 0,\n    trainError: 0,\n  }\n\n  const stats = {\n    truePos: 0,\n    trueNeg: 0,\n    falsePos: 0,\n    falseNeg: 0,\n    total: 0,\n  }\n\n  const misclasses = []\n  const results = []\n\n  for (let i = 0; i < k; i++) {\n    const dclone = data.slice(0)\n    const testSet = dclone.splice(i * size, size)\n    const trainSet = dclone\n    const result = testPartition(Classifier, opts, trainOpts, trainSet, testSet)\n\n    Object.keys(avgs).forEach(avg => {\n      avgs[avg] += result[avg]\n    })\n\n    Object.keys(stats).forEach(stat => {\n      stats[stat] += result[stat]\n    })\n\n    misclasses.concat(results.misclasses)\n\n    results.push(result)\n  }\n\n  Object.keys(avgs).forEach(avg => {\n    avgs[avg] /= k\n  })\n\n  stats.precision = stats.truePos / (stats.truePos + stats.falsePos)\n  stats.recall = stats.truePos / (stats.truePos + stats.falseNeg)\n  stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total\n\n  stats.testSize = size\n  stats.trainSize = data.length - size\n\n  return {\n    avgs,\n    stats,\n    sets: results,\n    misclasses,\n  }\n}\n","'use strict';\n\n/**\n *\n * @desc Reduced subset of Utils, used exclusively in gpu-core.js\n * Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class is 'static' by nature `UtilsCore.functionName()`\n *\n * @class UtilsCore\n *\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = function () {\n\tfunction UtilsCore() {\n\t\t_classCallCheck(this, UtilsCore);\n\t}\n\n\t_createClass(UtilsCore, null, [{\n\t\tkey: 'isCanvas',\n\n\n\t\t/**\n   * @typedef {Object} webGlContext\n   */\n\n\t\t/**\n   * @typedef {Object} CanvasDOMObject\n   */\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Canvas validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @name isCanvas\n   * @static\n   * @function\n   * @memberOf UtilsCore\n   *\n   *\n   * @desc Return TRUE, on a valid DOM canvas object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a DOM canvas\n   *\n   */\n\t\tvalue: function isCanvas(canvasObj) {\n\t\t\treturn canvasObj !== null && canvasObj.nodeName && canvasObj.getContext && canvasObj.nodeName.toUpperCase() === 'CANVAS';\n\t\t}\n\n\t\t/**\n   * @name isCanvasSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports canvas\n   *\n   * @returns {Boolean} TRUE if browser supports canvas\n   *\n   */\n\n\t}, {\n\t\tkey: 'isCanvasSupported',\n\t\tvalue: function isCanvasSupported() {\n\t\t\treturn _isCanvasSupported;\n\t\t}\n\n\t\t/**\n   * @name initCanvas\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a canvas, for usage in init_webgl.\n   * Returns only if canvas is supported by browser.\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initCanvas',\n\t\tvalue: function initCanvas() {\n\t\t\t// Fail fast if browser previously detected no support\n\t\t\tif (!_isCanvasSupported) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar canvas = document.createElement('canvas');\n\n\t\t\t// Default width and height, to fix webgl issue in safari\n\t\t\tcanvas.width = 2;\n\t\t\tcanvas.height = 2;\n\n\t\t\t// Returns the canvas\n\t\t\treturn canvas;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Webgl validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\n\t\t/**\n   *\n   * @name isWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGlContext object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGlObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGlContext object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl',\n\t\tvalue: function isWebGl(webGlObj) {\n\t\t\treturn webGlObj && typeof webGlObj.getExtension === 'function';\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl\n   *\n   * @returns {Boolean} TRUE if browser supports webgl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn _isWebGlSupported;\n\t\t}\n\t}, {\n\t\tkey: 'isWebGlDrawBuffersSupported',\n\t\tvalue: function isWebGlDrawBuffersSupported() {\n\t\t\treturn _isWebGlDrawBuffersSupported;\n\t\t}\n\n\t\t// Default webgl options to use\n\n\t}, {\n\t\tkey: 'initWebGlDefaultOptions',\n\t\tvalue: function initWebGlDefaultOptions() {\n\t\t\treturn {\n\t\t\t\talpha: false,\n\t\t\t\tdepth: false,\n\t\t\t\tantialias: false\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @name initWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar webGl = canvasObj.getContext('experimental-webgl', UtilsCore.initWebGlDefaultOptions()) || canvasObj.getContext('webgl', UtilsCore.initWebGlDefaultOptions());\n\n\t\t\tif (webGl) {\n\t\t\t\t// Get the extension that is needed\n\t\t\t\twebGl.OES_texture_float = webGl.getExtension('OES_texture_float');\n\t\t\t\twebGl.OES_texture_float_linear = webGl.getExtension('OES_texture_float_linear');\n\t\t\t\twebGl.OES_element_index_uint = webGl.getExtension('OES_element_index_uint');\n\t\t\t}\n\n\t\t\t// Returns the canvas\n\t\t\treturn webGl;\n\t\t}\n\n\t\t/**\n   * @name initWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl2',\n\t\tvalue: function initWebGl2(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\treturn canvasObj.getContext('webgl2', UtilsCore.initWebGlDefaultOptions());\n\t\t}\n\n\t\t/**\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   * @param {number[]} output\n   * @throws if not correctly defined\n   */\n\n\t}, {\n\t\tkey: 'checkOutput',\n\t\tvalue: function checkOutput(output) {\n\t\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\t\tif (isNaN(output[i]) || output[i] < 1) {\n\t\t\t\t\tthrow new Error('kernel.output[' + i + '] incorrectly defined as `' + output[i] + '`, needs to be numeric, and greater than 0');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn UtilsCore;\n}();\n\n//-----------------------------------------------------------------------------\n//\n//  Canvas & Webgl validation and support constants\n//\n//-----------------------------------------------------------------------------\n\nvar _isCanvasSupported = typeof document !== 'undefined' ? UtilsCore.isCanvas(document.createElement('canvas')) : false;\nvar _testingWebGl = UtilsCore.initWebGl(UtilsCore.initCanvas());\nvar _isWebGlSupported = UtilsCore.isWebGl(_testingWebGl);\nvar _isWebGlDrawBuffersSupported = _isWebGlSupported && Boolean(_testingWebGl.getExtension('WEBGL_draw_buffers'));\n\nif (_isWebGlSupported) {\n\tUtilsCore.OES_texture_float = _testingWebGl.OES_texture_float;\n\tUtilsCore.OES_texture_float_linear = _testingWebGl.OES_texture_float_linear;\n\tUtilsCore.OES_element_index_uint = _testingWebGl.OES_element_index_uint;\n} else {\n\tUtilsCore.OES_texture_float = false;\n\tUtilsCore.OES_texture_float_linear = false;\n\tUtilsCore.OES_element_index_uint = false;\n}\n\nmodule.exports = UtilsCore;","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function Input(value, size) {\n\t_classCallCheck(this, Input);\n\n\tthis.value = value;\n\tif (Array.isArray(size)) {\n\t\tthis.size = [];\n\t\tfor (var i = 0; i < size.length; i++) {\n\t\t\tthis.size[i] = size[i];\n\t\t}\n\t\twhile (this.size.length < 3) {\n\t\t\tthis.size.push(1);\n\t\t}\n\t} else {\n\t\tif (size.z) {\n\t\t\tthis.size = [size.x, size.y, size.z];\n\t\t} else if (size.y) {\n\t\t\tthis.size = [size.x, size.y, 1];\n\t\t} else {\n\t\t\tthis.size = [size.x, 1, 1];\n\t\t}\n\t}\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @desc WebGl Texture implementation in JS\n  * @constructor Texture\n  * @param {Object} texture\n  * @param {Array} size\n  * @param dimensions\n  * @param {Array} output\n  * @param {Object} webGl\n  */\n\tfunction Texture(texture, size, dimensions, output, webGl) {\n\t\t_classCallCheck(this, Texture);\n\n\t\tthis.texture = texture;\n\t\tthis.size = size;\n\t\tthis.dimensions = dimensions;\n\t\tthis.output = output;\n\t\tthis.webGl = webGl;\n\t\tthis.kernel = null;\n\t}\n\n\t/**\n  * @name toArray\n  * @function\n  * @memberOf Texture#\n  *\n  * @desc Converts the Texture into a JavaScript Array.\n  * \n  * @param {Object} The `gpu` Object\n  *\n  */\n\n\n\t_createClass(Texture, [{\n\t\tkey: 'toArray',\n\t\tvalue: function toArray(gpu) {\n\t\t\tif (!gpu) throw new Error('You need to pass the GPU object for toArray to work.');\n\t\t\tif (this.kernel) return this.kernel(this);\n\n\t\t\tthis.kernel = gpu.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t}).setOutput(this.output);\n\n\t\t\treturn this.kernel(this);\n\t\t}\n\n\t\t/**\n   * @name delete\n   * @desc Deletes the Texture.\n   * @function\n   * @memberOf Texture#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'delete',\n\t\tvalue: function _delete() {\n\t\t\treturn this.webGl.deleteTexture(this.texture);\n\t\t}\n\t}]);\n\n\treturn Texture;\n}();","'use strict';\n\n/**\n * \n * @classdesc Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class are *static* by nature `Utils.functionName()`\n * \n * @class Utils\n * @extends UtilsCore\n *\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UtilsCore = require(\"./utils-core\");\nvar Input = require('./input');\nvar Texture = require('./texture');\n// FUNCTION_NAME regex\nvar FUNCTION_NAME = /function ([^(]*)/;\n\n// STRIP COMMENTS regex\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n// ARGUMENT NAMES regex\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nvar _systemEndianness = function () {\n\tvar b = new ArrayBuffer(4);\n\tvar a = new Uint32Array(b);\n\tvar c = new Uint8Array(b);\n\ta[0] = 0xdeadbeef;\n\tif (c[0] === 0xef) return 'LE';\n\tif (c[0] === 0xde) return 'BE';\n\tthrow new Error('unknown endianness');\n}();\n\nvar _isFloatReadPixelsSupported = null;\nvar _isFloatReadPixelsSupportedWebGL2 = null;\n\nvar _isMixedIdentifiersSupported = function () {\n\ttry {\n\t\tnew Function('let i = 1; const j = 1;')();\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}();\n\nvar _hasIntegerDivisionAccuracyBug = null;\n\n/**\n * @class\n * @extends UtilsCore\n */\n\nvar Utils = function (_UtilsCore) {\n\t_inherits(Utils, _UtilsCore);\n\n\tfunction Utils() {\n\t\t_classCallCheck(this, Utils);\n\n\t\treturn _possibleConstructorReturn(this, (Utils.__proto__ || Object.getPrototypeOf(Utils)).apply(this, arguments));\n\t}\n\n\t_createClass(Utils, null, [{\n\t\tkey: 'systemEndianness',\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  System values support (currently only endianness)\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name systemEndianness\n   * @function\n   * @static\n   *\n   * Gets the system endianness, and cache it\n   *\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   *\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n\t\tvalue: function systemEndianness() {\n\t\t\treturn _systemEndianness;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Function and function string validations\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunction\n   * @function\n   * @static\n   *\n   * Return TRUE, on a JS function\n   *\n   * @param {Function} funcObj - Object to validate if its a function\n   *\n   * @returns\t{Boolean} TRUE if the object is a JS function\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunction',\n\t\tvalue: function isFunction(funcObj) {\n\t\t\treturn typeof funcObj === 'function';\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunctionString\n   * @function\n   * @static\n   *\n   * Return TRUE, on a valid JS function string\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {Boolean} TRUE if the string passes basic validation\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunctionString',\n\t\tvalue: function isFunctionString(funcStr) {\n\t\t\tif (funcStr !== null) {\n\t\t\t\treturn funcStr.toString().slice(0, 'function'.length).toLowerCase() === 'function';\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getFunctionName_fromString\n   * @function\n   * @static\n   *\n   * Return the function name from a JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String} Function name string (if found)\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionNameFromString',\n\t\tvalue: function getFunctionNameFromString(funcStr) {\n\t\t\treturn FUNCTION_NAME.exec(funcStr)[1];\n\t\t}\n\t}, {\n\t\tkey: 'getFunctionBodyFromString',\n\t\tvalue: function getFunctionBodyFromString(funcStr) {\n\t\t\treturn funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getParamNames_fromString\n   * @function\n   * @static\n   *\n   * Return list of parameter names extracted from the JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String[]}  Array representing all the parameter names\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamNamesFromString',\n\t\tvalue: function getParamNamesFromString(func) {\n\t\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '');\n\t\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\t\t\tif (result === null) result = [];\n\t\t\treturn result;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Object / function cloning and manipulation\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name clone\n   * @function\n   * @static\n   *\n   * Returns a clone\n   *\n   * @param {Object} obj - Object to clone\n   *\n   * @returns {Object}  Cloned object\n   *\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(obj) {\n\t\t\tif (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n\t\t\tvar temp = obj.constructor(); // changed\n\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj.isActiveClone = null;\n\t\t\t\t\ttemp[key] = Utils.clone(obj[key]);\n\t\t\t\t\tdelete obj.isActiveClone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn temp;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name newPromise\n   * @function\n   * @static\n   *\n   * Returns a `new Promise` object based on the underlying implmentation\n   *\n   * @param {Function} executor - Promise builder function\n   *\n   * @returns {Promise}  Promise object\n   *\n   */\n\n\t}, {\n\t\tkey: 'newPromise',\n\t\tvalue: function newPromise(executor) {\n\t\t\tvar simple = Promise || small_promise;\n\t\t\tif (simple === null) {\n\t\t\t\tthrow TypeError('Browser is missing Promise implementation. Consider adding small_promise.js polyfill');\n\t\t\t}\n\t\t\treturn new simple(executor);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name functionBinder\n   * @function\n   * @static\n   *\n   * Limited implementation of Function.bind, with fallback\n   *\n   * @param {Function} inFunc - to setup bind on\n   * @param {Object} thisObj - The this parameter to assume inside the binded function\n   *\n   * @returns {Function}  The binded function\n   *\n   */\n\n\t}, {\n\t\tkey: 'functionBinder',\n\t\tvalue: function functionBinder(inFunc, thisObj) {\n\t\t\tif (inFunc.bind) {\n\t\t\t\treturn inFunc.bind(thisObj);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\t\t\t\treturn inFunc.apply(thisObj, args);\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isArray\n   * @function\n   * @static\n   *\n   * * Checks if is an array or Array-like object\n   *\n   * @param {Object} arg - The argument object to check if is array\n   *\n   * @returns {Boolean}  true if is array or Array-like object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isArray',\n\t\tvalue: function isArray(array) {\n\t\t\tif (isNaN(array.length)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getArgumentType\n   * @function\n   * @static\n   *\n   * Evaluate the argument type, to apply respective logic for it\n   *\n   * @param {Object} arg - The argument object to evaluate type\n   *\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentType',\n\t\tvalue: function getArgumentType(arg) {\n\t\t\tif (Utils.isArray(arg)) {\n\t\t\t\tif (arg[0].nodeName === 'IMG') {\n\t\t\t\t\treturn 'HTMLImageArray';\n\t\t\t\t}\n\t\t\t\treturn 'Array';\n\t\t\t} else if (typeof arg === 'number') {\n\t\t\t\tif (Number.isInteger(arg)) {\n\t\t\t\t\treturn 'Integer';\n\t\t\t\t}\n\t\t\t\treturn 'Float';\n\t\t\t} else if (arg instanceof Texture) {\n\t\t\t\treturn 'Texture';\n\t\t\t} else if (arg instanceof Input) {\n\t\t\t\treturn 'Input';\n\t\t\t} else if (arg.nodeName === 'IMG') {\n\t\t\t\treturn 'HTMLImage';\n\t\t\t} else {\n\t\t\t\treturn 'Unknown';\n\t\t\t}\n\t\t}\n\t\t/**\n   * @typedef {Object} gpuJSObject\n   */\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupported\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupported',\n\t\tvalue: function isFloatReadPixelsSupported() {\n\t\t\tif (_isFloatReadPixelsSupported !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupported;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupported = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupported;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupportedWebGL2\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupportedWebGL2',\n\t\tvalue: function isFloatReadPixelsSupportedWebGL2() {\n\t\t\tif (_isFloatReadPixelsSupportedWebGL2 !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl2-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupportedWebGL2 = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name hasIntegerDivisionAccuracyBug\n   * @function\n   * @static\n   *\n   * Checks if the system has inaccuracies when dividing integers\n   *\n   * @returns {Boolean} true if bug is exhibited on this system\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\tif (_hasIntegerDivisionAccuracyBug !== null) {\n\t\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function (v1, v2) {\n\t\t\t\treturn v1[this.thread.x] / v2[this.thread.x];\n\t\t\t}, {\n\t\t\t\toutput: [1]\n\t\t\t})([6, 6030401], [3, 3991]);\n\n\t\t\t// have we not got whole numbers for 6/3 or 6030401/3991\n\t\t\t// add more here if others see this problem\n\t\t\t_hasIntegerDivisionAccuracyBug = x[0] !== 2 || x[1] !== 1511;\n\t\t\tgpu.destroy();\n\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t}\n\t}, {\n\t\tkey: 'isMixedIdentifiersSupported',\n\t\tvalue: function isMixedIdentifiersSupported() {\n\t\t\treturn _isMixedIdentifiersSupported;\n\t\t}\n\t}, {\n\t\tkey: 'dimToTexSize',\n\t\tvalue: function dimToTexSize(opt, dimensions, output) {\n\t\t\tvar numTexels = dimensions[0];\n\t\t\tvar w = dimensions[0];\n\t\t\tvar h = dimensions[1];\n\t\t\tfor (var i = 1; i < dimensions.length; i++) {\n\t\t\t\tnumTexels *= dimensions[i];\n\t\t\t}\n\n\t\t\tif (opt.floatTextures && (!output || opt.floatOutput)) {\n\t\t\t\tw = numTexels = Math.ceil(numTexels / 4);\n\t\t\t}\n\t\t\t// if given dimensions == a 2d image\n\t\t\tif (h > 1 && w * h === numTexels) {\n\t\t\t\treturn [w, h];\n\t\t\t}\n\t\t\t// find as close to square width, height sizes as possible\n\t\t\tvar sqrt = Math.sqrt(numTexels);\n\t\t\tvar high = Math.ceil(sqrt);\n\t\t\tvar low = Math.floor(sqrt);\n\t\t\twhile (high * low > numTexels) {\n\t\t\t\thigh--;\n\t\t\t\tlow = Math.ceil(numTexels / high);\n\t\t\t}\n\t\t\tw = low;\n\t\t\th = Math.ceil(numTexels / w);\n\t\t\treturn [w, h];\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getDimensions\n   * @function\n   * @static\n   *\n   * Return the dimension of an array.\n   * \n   * @param {Array|String} x - The array\n   * @param {number} [pad] - To include padding in the dimension calculation [Optional]\n   *\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'getDimensions',\n\t\tvalue: function getDimensions(x, pad) {\n\t\t\tvar ret = void 0;\n\t\t\tif (Utils.isArray(x)) {\n\t\t\t\tvar dim = [];\n\t\t\t\tvar temp = x;\n\t\t\t\twhile (Utils.isArray(temp)) {\n\t\t\t\t\tdim.push(temp.length);\n\t\t\t\t\ttemp = temp[0];\n\t\t\t\t}\n\t\t\t\tret = dim.reverse();\n\t\t\t} else if (x instanceof Texture) {\n\t\t\t\tret = x.output;\n\t\t\t} else if (x instanceof Input) {\n\t\t\t\tret = x.size;\n\t\t\t} else {\n\t\t\t\tthrow 'Unknown dimensions of ' + x;\n\t\t\t}\n\n\t\t\tif (pad) {\n\t\t\t\tret = Utils.clone(ret);\n\t\t\t\twhile (ret.length < 3) {\n\t\t\t\t\tret.push(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return ret;\n\t\t\treturn new Int32Array(ret);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name pad\n   * @function\n   * @static\n   *\n   * Pad an array AND its elements with leading and ending zeros\n   *\n   * @param {Array} arr - the array to pad zeros to\n   * @param {number} padding - amount of padding\n   *\n   * @returns {Array} Array with leading and ending zeros, and all the elements padded by zeros.\n   *\n   */\n\n\t}, {\n\t\tkey: 'pad',\n\t\tvalue: function pad(arr, padding) {\n\t\t\tfunction zeros(n) {\n\t\t\t\treturn Array.apply(null, new Array(n)).map(Number.prototype.valueOf, 0);\n\t\t\t}\n\n\t\t\tvar len = arr.length + padding * 2;\n\n\t\t\tvar ret = arr.map(function (x) {\n\t\t\t\treturn [].concat(zeros(padding), x, zeros(padding));\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < padding; i++) {\n\t\t\t\tret = [].concat([zeros(len)], ret, [zeros(len)]);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten2dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten2dArrayTo',\n\t\tvalue: function flatten2dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var y = 0; y < array.length; y++) {\n\t\t\t\ttarget.set(array[y], offset);\n\t\t\t\toffset += array[y].length;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten3dArrayTo',\n\t\tvalue: function flatten3dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var z = 0; z < array.length; z++) {\n\t\t\t\tfor (var y = 0; y < array[z].length; y++) {\n\t\t\t\t\ttarget.set(array[z][y], offset);\n\t\t\t\t\toffset += array[z][y].length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flattenTo',\n\t\tvalue: function flattenTo(array, target) {\n\t\t\tif (Utils.isArray(array[0])) {\n\t\t\t\tif (Utils.isArray(array[0][0])) {\n\t\t\t\t\tUtils.flatten3dArrayTo(array, target);\n\t\t\t\t} else {\n\t\t\t\t\tUtils.flatten2dArrayTo(array, target);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.set(array);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name splitArray\n   * @function\n   * @static\n   *\n   * Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Array} array - The array to split into chunks\n   * @param {Array} part - elements in one chunk\n   *\n  \t * @returns {Array} An array of smaller chunks\n   *\n   */\n\n\t}, {\n\t\tkey: 'splitArray',\n\t\tvalue: function splitArray(array, part) {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < array.length; i += part) {\n\t\t\t\tresult.push(Array.prototype.slice.call(array, i, i + part));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'getAstString',\n\t\tvalue: function getAstString(source, ast) {\n\t\t\tvar lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n\t\t\tvar start = ast.loc.start;\n\t\t\tvar end = ast.loc.end;\n\t\t\tvar result = [];\n\t\t\tresult.push(lines[start.line - 1].slice(start.column));\n\t\t\tfor (var i = start.line; i < end.line - 1; i++) {\n\t\t\t\tresult.push(lines[i]);\n\t\t\t}\n\t\t\tresult.push(lines[end.line - 1].slice(0, end.column));\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: 'allPropertiesOf',\n\t\tvalue: function allPropertiesOf(obj) {\n\t\t\tvar props = [];\n\n\t\t\tdo {\n\t\t\t\tprops.push.apply(props, Object.getOwnPropertyNames(obj));\n\t\t\t} while (obj = Object.getPrototypeOf(obj));\n\n\t\t\treturn props;\n\t\t}\n\t}]);\n\n\treturn Utils;\n}(UtilsCore);\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\n\n\nObject.assign(Utils, UtilsCore);\n\nmodule.exports = Utils;","'use strict';\n\nvar utils = require('../core/utils');\n\nmodule.exports = function kernelRunShortcut(kernel) {\n\tvar shortcut = function shortcut() {\n\t\treturn kernel.run.apply(kernel, arguments);\n\t};\n\n\tutils.allPropertiesOf(kernel).forEach(function (key) {\n\t\tif (key[0] === '_' && key[1] === '_') return;\n\t\tif (typeof kernel[key] === 'function') {\n\t\t\tif (key.substring(0, 3) === 'add' || key.substring(0, 3) === 'set') {\n\t\t\t\tshortcut[key] = function () {\n\t\t\t\t\tkernel[key].apply(kernel, arguments);\n\t\t\t\t\treturn shortcut;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tshortcut[key] = kernel[key].bind(kernel);\n\t\t\t}\n\t\t} else {\n\t\t\tshortcut.__defineGetter__(key, function () {\n\t\t\t\treturn kernel[key];\n\t\t\t});\n\t\t\tshortcut.__defineSetter__(key, function (value) {\n\t\t\t\tkernel[key] = value;\n\t\t\t});\n\t\t}\n\t});\n\n\tshortcut.kernel = kernel;\n\n\treturn shortcut;\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar kernelRunShortcut = require('./kernel-run-shortcut');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor BaseRunner\n  *\n  * @desc Represents the 'private/protected' namespace of the GPU class\n  *\n  * <p>I know @private makes more sense, but since the documentation engine state is undetirmined.\n  * (See https://github.com/gpujs/gpu.js/issues/19 regarding documentation engine issue)\n  * File isolation is currently the best way to go. </p>\n  *\n  * *base.js* internal functions namespace <br>\n  * *gpu.js* PUBLIC function namespace <br>\n  *\n  * @prop {Object} settings - Settings object used to set Dimensions, etc.\n  * @prop {String} kernel - Current kernel instance\n  * @prop {Object} canvas - Canvas instance attached to the kernel\n  * @prop {Object} webGl - WebGl instance attached to the kernel\n  * @prop {Function} fn - Kernel function to run\n  * @prop {Object} functionBuilder - FunctionBuilder instance\n  * @prop {String} fnString - Kernel function (as a String)\n  * @prop {String} endianness - endian information like Little-endian, Big-endian.\n  *\n  */\n\n\tfunction BaseRunner(functionBuilder, settings) {\n\t\t_classCallCheck(this, BaseRunner);\n\n\t\tsettings = settings || {};\n\t\tthis.kernel = settings.kernel;\n\t\tthis.canvas = settings.canvas;\n\t\tthis.webGl = settings.webGl;\n\t\tthis.fn = null;\n\t\tthis.functionBuilder = functionBuilder;\n\t\tthis.fnString = null;\n\t\tthis.endianness = utils.systemEndianness();\n\t}\n\n\t/**\n  * @memberOf BaseRunner#\n  * @function\n  * @name textureToArray\n  *\n  * @desc Converts the provided Texture instance to a JavaScript Array\n  *\n  * @param {Object} texture - Texture Object\n  *\n  */\n\n\n\t_createClass(BaseRunner, [{\n\t\tkey: 'textureToArray',\n\t\tvalue: function textureToArray(texture) {\n\t\t\tvar copy = this.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t});\n\n\t\t\treturn copy(texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name deleteTexture\n   *\n   * @desc Deletes the provided Texture instance\n   *\n   * @param {Object} texture - Texture Object\n   */\n\n\t}, {\n\t\tkey: 'deleteTexture',\n\t\tvalue: function deleteTexture(texture) {\n\t\t\tthis.webGl.deleteTexture(texture.texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   * @name buildPromiseKernel\n   *\n   * @desc Get and returns the ASYNCHRONOUS executor, of a class and kernel\n   * This returns a Promise object from an argument set.\n   *\n   * Note that there is no current implementation.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildPromiseKernel',\n\t\tvalue: function buildPromiseKernel() {\n\t\t\tthrow new Error('not yet implemented');\n\t\t}\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\tthrow new Error('\"mode\" not implemented on BaseRunner');\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name buildKernel\n   *\n   * @desc Get and returns the Synchronous executor, of a class and kernel\n   * Which returns the result directly after passing the arguments.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildKernel',\n\t\tvalue: function buildKernel(fn, settings) {\n\t\t\tsettings = Object.assign({}, settings || {});\n\t\t\tvar fnString = fn.toString();\n\t\t\tif (!settings.functionBuilder) {\n\t\t\t\tsettings.functionBuilder = this.functionBuilder;\n\t\t\t}\n\n\t\t\tif (!settings.canvas) {\n\t\t\t\tsettings.canvas = this.canvas;\n\t\t\t}\n\n\t\t\tif (!settings.webGl) {\n\t\t\t\tsettings.webGl = this.webgl;\n\t\t\t}\n\n\t\t\treturn kernelRunShortcut(new this.Kernel(fnString, settings));\n\t\t}\n\t}]);\n\n\treturn BaseRunner;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar Input = require('../core/input');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor KernelBase\n  * \n  * @desc Implements the base class for Kernels, and is used as a \n  * parent class for all Kernel implementations.\n  *\n  * This contains the basic methods needed by all Kernel implementations, \n  * like setDimensions, addSubKernel, etc.\n  * \n  * @prop {Array} paramNames - Name of the parameters of the kernel function\n  * @prop {String} fnString - Kernel function as a String\n  * @prop {Array} dimensions - Dimensions of the kernel function, this.thread.x, etc.\n  * @prop {Boolean} debug - Toggle debug mode\n  * @prop {String} graphical - Toggle graphical mode\n  * @prop {number} loopMaxIterations - Maximum number of loop iterations\n  * @prop {Object} constants - Global constants\n  * @prop {Array} subKernels - Sub kernels bound to this kernel instance\n  * @prop {Object} subKernelProperties - Sub kernels bound to this kernel instance as key/value pairs\n  * @prop {Array} subKernelOutputVariableNames - Names of the variables outputted by the subkerls\n  * @prop {Boolean} fixIntegerDivisionAccuracy - fix issues with some graphics cards not returning whole numbers when dividing by factors of 3\n  *\n  */\n\tfunction KernelBase(fnString, settings) {\n\t\t_classCallCheck(this, KernelBase);\n\n\t\tthis.paramNames = utils.getParamNamesFromString(fnString);\n\t\tthis.fnString = fnString;\n\t\tthis.output = null;\n\t\tthis.debug = false;\n\t\tthis.graphical = false;\n\t\tthis.loopMaxIterations = 0;\n\t\tthis.constants = null;\n\t\tthis.wraparound = null;\n\t\tthis.hardcodeConstants = null;\n\t\tthis.outputToTexture = null;\n\t\tthis.outputImmutable = null;\n\t\tthis.texSize = null;\n\t\tthis._canvas = null;\n\t\tthis._webGl = null;\n\t\tthis.threadDim = null;\n\t\tthis.floatTextures = null;\n\t\tthis.floatOutput = null;\n\t\tthis.floatOutputForce = null;\n\t\tthis.addFunction = null;\n\t\tthis.functions = null;\n\t\tthis.nativeFunctions = null;\n\t\tthis.subKernels = null;\n\t\tthis.subKernelProperties = null;\n\t\tthis.subKernelNames = null;\n\t\tthis.subKernelOutputVariableNames = null;\n\t\tthis.functionBuilder = null;\n\t\tthis.paramTypes = null;\n\t\tthis.paramSizes = null;\n\t\tthis.constantTypes = null;\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tfor (var p in settings) {\n\t\t\tif (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n\t\t\tthis[p] = settings[p];\n\t\t}\n\t\tif (settings.hasOwnProperty('canvas')) {\n\t\t\tthis._canvas = settings.canvas;\n\t\t}\n\t\tif (settings.hasOwnProperty('output')) {\n\t\t\tthis.setOutput(settings.output); // Flatten output object\n\t\t}\n\n\t\tif (!this._canvas) this._canvas = utils.initCanvas();\n\t}\n\n\t_createClass(KernelBase, [{\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthrow new Error('\"build\" not defined on Base');\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setupParams\n   *\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {IArguments} args - The actual parameters sent to the Kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'setupParams',\n\t\tvalue: function setupParams(args) {\n\t\t\tthis.paramTypes = [];\n\t\t\tthis.paramSizes = [];\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar arg = args[i];\n\t\t\t\tthis.paramTypes.push(utils.getArgumentType(arg));\n\t\t\t\tthis.paramSizes.push(arg.constructor === Input ? arg.size : null);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setupConstants',\n\t\tvalue: function setupConstants() {\n\t\t\tthis.constantTypes = {};\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var p in this.constants) {\n\t\t\t\t\tthis.constantTypes[p] = utils.getArgumentType(this.constants[p]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(cb) {\n\t\t\tthis.addFunction = cb;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFunctions',\n\t\tvalue: function setFunctions(functions) {\n\t\t\tthis.functions = functions;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setOutput\n   *\n   * @desc Set dimensions of the kernel function\n   *\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   *\n   */\n\n\t}, {\n\t\tkey: 'setOutput',\n\t\tvalue: function setOutput(output) {\n\t\t\tif (output.hasOwnProperty('x')) {\n\t\t\t\tif (output.hasOwnProperty('y')) {\n\t\t\t\t\tif (output.hasOwnProperty('z')) {\n\t\t\t\t\t\tthis.output = [output.x, output.y, output.z];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.output = [output.x, output.y];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.output = [output.x];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.output = output;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setDebug\n   *\n   * @desc Toggle debug mode\n   *\n   * @param {Boolean} flag - true to enable debug\n   *\n   */\n\n\t}, {\n\t\tkey: 'setDebug',\n\t\tvalue: function setDebug(flag) {\n\t\t\tthis.debug = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setGraphical\n   *\n   * @desc Toggle graphical output mode\n   *\n   * @param {Boolean} flag - true to enable graphical output\n   *\n   */\n\n\t}, {\n\t\tkey: 'setGraphical',\n\t\tvalue: function setGraphical(flag) {\n\t\t\tthis.graphical = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setLoopMaxIterations\n   *\n   * @desc Set the maximum number of loop iterations\n   *\n   * @param {number} max - iterations count\n   *\n   */\n\n\t}, {\n\t\tkey: 'setLoopMaxIterations',\n\t\tvalue: function setLoopMaxIterations(max) {\n\t\t\tthis.loopMaxIterations = max;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFixIntegerDivisionAccuracy\n   *\n   * @desc Fix division by factor of 3 FP accuracy bug\n   *\n   * @param {Boolean} fix - should fix \n   *\n   */\n\n\t}, {\n\t\tkey: 'setFixIntegerDivisionAccuracy',\n\t\tvalue: function setFixIntegerDivisionAccuracy(fix) {\n\t\t\tthis.fixIntegerDivisionAccuracy = fix;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setConstants\n   * @desc Set Constants\n   */\n\n\t}, {\n\t\tkey: 'setConstants',\n\t\tvalue: function setConstants(constants) {\n\t\t\tthis.constants = constants;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setWraparound',\n\t\tvalue: function setWraparound(flag) {\n\t\t\tconsole.warn('Wraparound mode is not supported and undocumented.');\n\t\t\tthis.wraparound = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setHardcodeConstants',\n\t\tvalue: function setHardcodeConstants(flag) {\n\t\t\tthis.hardcodeConstants = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputToTexture',\n\t\tvalue: function setOutputToTexture(flag) {\n\t\t\tthis.outputToTexture = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputImmutable',\n\t\tvalue: function setOutputImmutable(flag) {\n\t\t\tthis.outputImmutable = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatTextures\n   *\n   * @desc Toggle texture output mode\n   *\n   * @param {Boolean} flag - true to enable floatTextures\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatTextures',\n\t\tvalue: function setFloatTextures(flag) {\n\t\t\tthis.floatTextures = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatOutput\n   *\n   * @desc Toggle output mode\n   *\n   * @param {Boolean} flag - true to enable float\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatOutput',\n\t\tvalue: function setFloatOutput(flag) {\n\t\t\tthis.floatOutput = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFloatOutputForce',\n\t\tvalue: function setFloatOutputForce(flag) {\n\t\t\tthis.floatOutputForce = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the canvas to kernel\n   * \n   * @param {Canvas} canvas - Canvas to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setCanvas',\n\t\tvalue: function setCanvas(canvas) {\n\t\t\tthis._canvas = canvas;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the webGL instance to kernel\n   * \n   * @param {Canvas} webGL - webGL instance to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setWebGl',\n\t\tvalue: function setWebGl(webGl) {\n\t\t\tthis._webGl = webGl;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getCanvas()\n   *\n   * @desc Returns the current canvas instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getWebGl()\n   *\n   * @desc Returns the current webGl instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tthrow new Error('validateOptions not defined');\n\t\t}\n\t}, {\n\t\tkey: 'exec',\n\t\tvalue: function exec() {\n\t\t\treturn this.execute.apply(this, arguments);\n\t\t}\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this = this;\n\n\t\t\t//\n\t\t\t// Prepare the required objects\n\t\t\t//\n\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\n\t\t\t//\n\t\t\t// Setup and return the promise, and execute the function, in synchronous mode\n\t\t\t//\n\t\t\treturn utils.newPromise(function (accept, reject) {\n\t\t\t\ttry {\n\t\t\t\t\taccept(_this.run.apply(_this, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//\n\t\t\t\t\t// Error : throw rejection\n\t\t\t\t\t//\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(fnString) {\n\t\t\tif (this.subKernels === null) {\n\t\t\t\tthis.subKernels = [];\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tthis.subKernels.push(fnString);\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernelProperty\n   *\n   * @desc Add a sub kernel to the root kernel instance, indexed by a property name\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} property - property key for the subKernel\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernelProperty',\n\t\tvalue: function addSubKernelProperty(property, fnString) {\n\t\t\tif (this.subKernelProperties === null) {\n\t\t\t\tthis.subKernelProperties = {};\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tif (this.subKernelProperties.hasOwnProperty(property)) {\n\t\t\t\tthrow new Error('cannot add sub kernel ' + property + ', already defined');\n\t\t\t}\n\t\t\tthis.subKernelProperties[property] = fnString;\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, source) {\n\t\t\tthis.functionBuilder.addNativeFunction(name, source);\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with this kernel\n   *\n   * @name destroy\n   * @function\n   * @memberOf KernelBase#\n   *\n   * * @param {Boolean} removeCanvasReferences remve any associated canvas references?\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {}\n\t}]);\n\n\treturn KernelBase;\n}();","\"use strict\";\n\nmodule.exports = \"__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nvarying vec2 vTexCoord;\\n\\nvec4 round(vec4 x) {\\n  return floor(x + 0.5);\\n}\\n\\nfloat round(float x) {\\n  return floor(x + 0.5);\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x / y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    if (channel == 0) return rgba.r * 255.0;\\n    if (channel == 1) return rgba.g * 255.0;\\n    if (channel == 2) return rgba.b * 255.0;\\n    if (channel == 3) return rgba.a * 255.0;\\n  }\\n  else {\\n    if (channel == 0) return rgba.r * 255.0 + rgba.g * 65280.0;\\n    if (channel == 1) return rgba.b * 255.0 + rgba.a * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture2D(tex, st / vec2(texSize));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), int(0), x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), int(0), x);\\n}\\n\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\nvoid color(sampler2D image) {\\n  actualColor = texture2D(image, vTexCoord);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"precision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nattribute vec2 aPos;\\nattribute vec2 aTexCoord;\\n\\nvarying vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (gpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      splitArray: ' + removeNoise(utils.splitArray.toString()) + ',\\n      getArgumentType: ' + removeNoise(utils.getArgumentType.toString()) + ',\\n      getDimensions: ' + removeNoise(utils.getDimensions.toString()) + ',\\n      dimToTexSize: ' + removeNoise(utils.dimToTexSize.toString()) + ',\\n      flattenTo: ' + removeNoise(utils.flattenTo.toString()) + ',\\n      flatten2dArrayTo: ' + removeNoise(utils.flatten2dArrayTo.toString()) + ',\\n      flatten3dArrayTo: ' + removeNoise(utils.flatten3dArrayTo.toString()) + ',\\n      systemEndianness: \\'' + removeNoise(utils.systemEndianness()) + '\\',\\n      initWebGl: ' + removeNoise(utils.initWebGl.toString()) + ',\\n      isArray: ' + removeNoise(utils.isArray.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    const canvases = [];\\n    const maxTexSizes = {};\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {\\n        this.maxTexSize = null;\\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(gpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(gpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(gpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(gpuKernel.output) + ';\\n        this.compiledFragShaderString = `' + gpuKernel.compiledFragShaderString + '`;\\n\\t\\t    this.compiledVertShaderString = `' + gpuKernel.compiledVertShaderString + '`;\\n\\t\\t    this.programUniformLocationCache = {};\\n\\t\\t    this.textureCache = {};\\n\\t\\t    this.subKernelOutputTextures = null;\\n\\t\\t    this.subKernelOutputVariableNames = null;\\n\\t\\t    this.uniform1fCache = {};\\n\\t\\t    this.uniform1iCache = {};\\n\\t\\t    this.uniform2fCache = {};\\n\\t\\t    this.uniform2fvCache = {};\\n\\t\\t    this.uniform2ivCache = {};\\n\\t\\t    this.uniform3fvCache = {};\\n\\t\\t    this.uniform3ivCache = {};\\n      }\\n      ' + removeFnNoise(gpuKernel._getFragShaderString.toString()) + '\\n      ' + removeFnNoise(gpuKernel._getVertShaderString.toString()) + '\\n      validateOptions() {}\\n      setupParams() {}\\n      setupConstants() {}\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      ' + removeFnNoise(gpuKernel.getUniformLocation.toString()) + '\\n      ' + removeFnNoise(gpuKernel.setupParams.toString()) + '\\n      ' + removeFnNoise(gpuKernel.setupConstants.toString()) + '\\n      ' + removeFnNoise(gpuKernel.build.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.run.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._addArgument.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getArgumentTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.renderOutput.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.updateMaxTexSize.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._setupOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.detachTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1i.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2iv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3fv.toString()) + ' \\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3iv.toString()) + ' \\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\nvar kernelString = require('./kernel-string');\nvar canvases = [];\nvar maxTexSizes = {};\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(WebGLKernel, _KernelBase);\n\n\t_createClass(WebGLKernel, null, [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t\t/**\n   * @constructor WebGLKernel\n   *\n   * @desc Kernel Implementation for WebGL.\n   * <p>This builds the shaders and runs them on the GPU,\n   * the outputs the result back as float(enabled by default) and Texture.</p>\n   *\n   * @extends KernelBase\n   *\n   * @prop {Object} textureCache - webGl Texture cache\n   * @prop {Object} threadDim - The thread dimensions, x, y and z\n   * @prop {Object} programUniformLocationCache - Location of program variables in memory\n   * @prop {Object} framebuffer - Webgl frameBuffer\n   * @prop {Object} buffer - WebGL buffer\n   * @prop {Object} program - The webGl Program\n   * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n   * @prop {Boolean} outputToTexture - Set output type to Texture, instead of float\n   * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n   * @prop {Array} paramTypes - Types of parameters sent to the Kernel\n   * @prop {number} argumentsLength - Number of parameters sent to the Kernel\n   * @prop {String} compiledFragShaderString - Compiled fragment shader string\n   * @prop {String} compiledVertShaderString - Compiled Vertical shader string\n   */\n\n\t}]);\n\n\tfunction WebGLKernel(fnString, settings) {\n\t\t_classCallCheck(this, WebGLKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLKernel.__proto__ || Object.getPrototypeOf(WebGLKernel)).call(this, fnString, settings));\n\n\t\t_this.textureCache = {};\n\t\t_this.threadDim = {};\n\t\t_this.programUniformLocationCache = {};\n\t\t_this.framebuffer = null;\n\n\t\t_this.buffer = null;\n\t\t_this.program = null;\n\t\t_this.outputToTexture = settings.outputToTexture;\n\t\t_this.endianness = utils.systemEndianness();\n\t\t_this.subKernelOutputTextures = null;\n\t\t_this.subKernelOutputVariableNames = null;\n\t\t_this.argumentsLength = 0;\n\t\t_this.constantsLength = 0;\n\t\t_this.compiledFragShaderString = null;\n\t\t_this.compiledVertShaderString = null;\n\t\t_this.fragShader = null;\n\t\t_this.vertShader = null;\n\t\t_this.drawBuffersMap = null;\n\t\t_this.outputTexture = null;\n\t\t_this.maxTexSize = null;\n\t\t_this.uniform1fCache = {};\n\t\t_this.uniform1iCache = {};\n\t\t_this.uniform2fCache = {};\n\t\t_this.uniform2fvCache = {};\n\t\t_this.uniform2ivCache = {};\n\t\t_this.uniform3fvCache = {};\n\t\t_this.uniform3ivCache = {};\n\t\tif (!_this._webGl) _this._webGl = _this.initWebGl();\n\t\treturn _this;\n\t}\n\n\t_createClass(WebGLKernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl(this.getCanvas());\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupported();\n\t\t\tif (this.floatTextures === true && !utils.OES_texture_float) {\n\t\t\t\tthrow new Error('Float textures are not supported on this browser');\n\t\t\t} else if (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateMaxTexSize',\n\t\tvalue: function updateMaxTexSize() {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (this.maxTexSize === null) {\n\t\t\t\tvar canvasIndex = canvases.indexOf(canvas);\n\t\t\t\tif (canvasIndex === -1) {\n\t\t\t\t\tcanvasIndex = canvases.length;\n\t\t\t\t\tcanvases.push(canvas);\n\t\t\t\t\tmaxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n\t\t\t\t}\n\t\t\t\tthis.maxTexSize = maxTexSizes[canvasIndex];\n\t\t\t}\n\t\t\tif (this.maxTexSize[0] < texSize[0]) {\n\t\t\t\tthis.maxTexSize[0] = texSize[0];\n\t\t\t}\n\t\t\tif (this.maxTexSize[1] < texSize[1]) {\n\t\t\t\tthis.maxTexSize[1] = texSize[1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.validateOptions();\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.updateMaxTexSize();\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar canvas = this._canvas;\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n\t\t\tcanvas.width = this.maxTexSize[0];\n\t\t\tcanvas.height = this.maxTexSize[1];\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.functionBuilder) this._addKernels();\n\n\t\t\tvar compiledVertShaderString = this._getVertShaderString(arguments);\n\t\t\tvar vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\t\tgl.shaderSource(vertShader, compiledVertShaderString);\n\t\t\tgl.compileShader(vertShader);\n\t\t\tif (this.vertShader) {}\n\t\t\tthis.vertShader = vertShader;\n\n\t\t\tvar compiledFragShaderString = this._getFragShaderString(arguments);\n\t\t\tvar fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(fragShader, compiledFragShaderString);\n\t\t\tgl.compileShader(fragShader);\n\t\t\tthis.fragShader = fragShader;\n\n\t\t\tif (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledVertShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(vertShader));\n\t\t\t\tthrow new Error('Error compiling vertex shader');\n\t\t\t}\n\t\t\tif (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(fragShader));\n\t\t\t\tthrow new Error('Error compiling fragment shader');\n\t\t\t}\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('GLSL Shader Output:');\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t}\n\n\t\t\tvar program = this.program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertShader);\n\t\t\tgl.attachShader(program, fragShader);\n\t\t\tgl.linkProgram(program);\n\t\t\tthis.framebuffer = gl.createFramebuffer();\n\t\t\tthis.framebuffer.width = texSize[0];\n\t\t\tthis.framebuffer.height = texSize[1];\n\n\t\t\tvar vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n\t\t\tvar texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n\t\t\tvar texCoordOffset = vertices.byteLength;\n\n\t\t\tvar buffer = this.buffer;\n\t\t\tif (!buffer) {\n\t\t\t\tbuffer = this.buffer = gl.createBuffer();\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n\t\t\t} else {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t}\n\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n\t\t\tvar aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n\t\t\tgl.enableVertexAttribArray(aPosLoc);\n\t\t\tgl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, gl.FALSE, 0, 0);\n\t\t\tvar aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n\t\t\tgl.enableVertexAttribArray(aTexCoordLoc);\n\t\t\tgl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, gl.FALSE, 0, texCoordOffset);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar value = this.constants[p];\n\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\tif (type === 'Decimal' || type === 'Integer') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tgl.useProgram(this.program);\n\t\t\t\tthis._addConstant(this.constants[p], type, p);\n\t\t\t\tthis.constantsLength++;\n\t\t\t}\n\n\t\t\tif (!this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t\tif (this.subKernelOutputVariableNames !== null && this.subKernelOutputVariableNames.length > 0) {\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', this.threadDim);\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tthis.drawBuffers.drawBuffersWEBGL(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name renderOutput\n   *\n   *\n   * @desc Helper function to return webGl function's output.\n   * Since the program runs on GPU, we need to get the\n   * output of the program back to CPU and then return them.\n   *\n   * *Note*: This should not be called directly.\n   *\n   * @param {Object} outputTexture - Output Texture returned by webGl program\n   *\n   * @returns {Object|Array} result\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'renderOutput',\n\t\tvalue: function renderOutput(outputTexture) {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar output = this.output;\n\t\t\tif (this.outputToTexture) {\n\t\t\t\treturn new Texture(outputTexture, texSize, this.threadDim, output, this._webGl);\n\t\t\t} else {\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, output[0]);\n\t\t\t\t} else if (output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, output[0] * output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getArgumentTexture\n   *\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   *\n   * @param {String} name - Name of the argument\n   *\n   * \tTexture cache for the supplied argument\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentTexture',\n\t\tvalue: function getArgumentTexture(name) {\n\t\t\treturn this.getTextureCache('ARGUMENT_' + name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name getTextureCache\n   * @function\n   *\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   *\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   *\n   * @returns {Object} Texture cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getTextureCache',\n\t\tvalue: function getTextureCache(name) {\n\t\t\tif (this.textureCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.textureCache[name];\n\t\t\t}\n\t\t\treturn this.textureCache[name] = this._webGl.createTexture();\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name detachTextureCache\n   * @function\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n\n\t}, {\n\t\tkey: 'detachTextureCache',\n\t\tvalue: function detachTextureCache(name) {\n\t\t\tdelete this.textureCache[name];\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1f',\n\t\tvalue: function setUniform1f(name, value) {\n\t\t\tif (this.uniform1fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1fCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1fCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1f(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1i',\n\t\tvalue: function setUniform1i(name, value) {\n\t\t\tif (this.uniform1iCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1iCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1iCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1i(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2f',\n\t\tvalue: function setUniform2f(name, value1, value2) {\n\t\t\tif (this.uniform2fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fCache[name];\n\t\t\t\tif (value1 === cache[0] && value2 === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fCache[name] = [value1, value2];\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2f(loc, value1, value2);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2fv',\n\t\tvalue: function setUniform2fv(name, value) {\n\t\t\tif (this.uniform2fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2iv',\n\t\tvalue: function setUniform2iv(name, value) {\n\t\t\tif (this.uniform2ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2iv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3fv',\n\t\tvalue: function setUniform3fv(name, value) {\n\t\t\tif (this.uniform3fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3iv',\n\t\tvalue: function setUniform3iv(name, value) {\n\t\t\tif (this.uniform3ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3iv(loc, value);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getUniformLocation\n   *\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defiend variables,\n   * as well as, dimension sizes, etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUniformLocation',\n\t\tvalue: function getUniformLocation(name) {\n\t\t\tif (this.programUniformLocationCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.programUniformLocationCache[name];\n\t\t\t}\n\t\t\treturn this.programUniformLocationCache[name] = this._webGl.getUniformLocation(this.program, name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderArtifactMap\n   *\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderArtifactMap',\n\t\tvalue: function _getFragShaderArtifactMap(args) {\n\t\t\treturn {\n\t\t\t\tHEADER: this._getHeaderString(),\n\t\t\t\tLOOP_MAX: this._getLoopMaxString(),\n\t\t\t\tCONSTANTS: this._getConstantsString(),\n\t\t\t\tDECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n\t\t\t\tENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n\t\t\t\tDIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n\t\t\t\tGET_WRAPAROUND: this._getGetWraparoundString(),\n\t\t\t\tGET_TEXTURE_CHANNEL: this._getGetTextureChannelString(),\n\t\t\t\tGET_TEXTURE_INDEX: this._getGetTextureIndexString(),\n\t\t\t\tGET_RESULT: this._getGetResultString(),\n\t\t\t\tMAIN_PARAMS: this._getMainParamsString(args),\n\t\t\t\tMAIN_CONSTANTS: this._getMainConstantsString(),\n\t\t\t\tKERNEL: this._getKernelString(),\n\t\t\t\tMAIN_RESULT: this._getMainResultString()\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim3 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size3 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('constants_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim4 = input.size;\n\t\t\t\t\t\tvar _size4 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim4);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size4[0] * _size4[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer5 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer5.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer5.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0], _size4[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0] / _bitRatio2, _size4[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim4);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim5 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size5 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim6 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size6 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _formatArrayTransfer\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array} value - The actual argument supplied to the kernel\n   * @param {String} length - the expected total length of the output array\n   *\n   * @returns {Object} bitRatio - bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * \t\t\t\t     valuesFlat - flattened array to transfer\n   */\n\n\t}, {\n\t\tkey: '_formatArrayTransfer',\n\t\tvalue: function _formatArrayTransfer(value, length) {\n\t\t\tvar bitRatio = 1; // bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n\t\t\tvar valuesFlat = value;\n\t\t\tif (utils.isArray(value[0]) || this.floatTextures) {\n\t\t\t\t// not already flat\n\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t} else {\n\n\t\t\t\tswitch (value.constructor) {\n\t\t\t\t\tcase Uint8Array:\n\t\t\t\t\tcase Int8Array:\n\t\t\t\t\t\tbitRatio = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Uint16Array:\n\t\t\t\t\tcase Int16Array:\n\t\t\t\t\t\tbitRatio = 2;\n\t\t\t\t\tcase Float32Array:\n\t\t\t\t\tcase Int32Array:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbitRatio: bitRatio,\n\t\t\t\tvaluesFlat: valuesFlat\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn this.subKernels !== null || this.subKernelProperties !== null ?\n\t\t\t//webgl2 '#version 300 es\\n' :\n\t\t\t'#extension GL_EXT_draw_buffers : require\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + '.0;\\n' : ' 1000.0;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getConstantsString\n   *\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   *\n   * They can be defined by *hardcodeConstants*\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getConstantsString',\n\t\tvalue: function _getConstantsString() {\n\t\t\tvar result = [];\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar texSize = this.texSize;\n\t\t\tif (this.hardcodeConstants) {\n\t\t\t\tresult.push('ivec3 uOutputDim = ivec3(' + threadDim[0] + ',' + threadDim[1] + ', ' + threadDim[2] + ')', 'ivec2 uTexSize = ivec2(' + texSize[0] + ', ' + texSize[1] + ')');\n\t\t\t} else {\n\t\t\t\tresult.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'varying vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDecode32EndiannessString\n   *\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDecode32EndiannessString',\n\t\tvalue: function _getDecode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getEncode32EndiannessString\n   *\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getEncode32EndiannessString',\n\t\tvalue: function _getEncode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDivideWithIntegerCheckString\n   *\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDivideWithIntegerCheckString',\n\t\tvalue: function _getDivideWithIntegerCheckString() {\n\t\t\treturn this.fixIntegerDivisionAccuracy ? '\\n\\t\\t\\t  float div_with_int_check(float x, float y) {\\n\\t\\t\\t  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\\n\\t\\t\\t    return float(int(x)/int(y));\\n\\t\\t\\t  }\\n\\t\\t\\t  return x / y;\\n\\t\\t\\t}\\n\\t\\t\\t' : '';\n\t\t}\n\n\t\t/**\n   * @function\n   * @memberOf WebGLKernel#\n   * @name _getGetWraparoundString\n   *\n   * @returns {String} wraparound string\n   */\n\n\t}, {\n\t\tkey: '_getGetWraparoundString',\n\t\tvalue: function _getGetWraparoundString() {\n\t\t\treturn this.wraparound ? '  xyz = mod(xyz, texDim);\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureChannelString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureChannelString',\n\t\tvalue: function _getGetTextureChannelString() {\n\t\t\tif (!this.floatTextures) return '';\n\n\t\t\treturn this._linesToString(['  int channel = integerMod(index, 4)', '  index = index / 4']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureIndexString\n   *\n   * @desc Get generic texture index string, if floatTextures flag is true.\n   *\n   * @example\n   * '  index = float(int(index)/4);\\n'\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureIndexString',\n\t\tvalue: function _getGetTextureIndexString() {\n\t\t\treturn this.floatTextures ? '  index = index / 4;\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn this._linesToString(['  if (channel == 0) return texel.r', '  if (channel == 1) return texel.g', '  if (channel == 2) return texel.b', '  if (channel == 3) return texel.a']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'ivec2 user_' + paramName + 'Size = vec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'ivec3 user_' + paramName + 'Dim = vec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'uniform ivec2 user_' + paramName + 'Size', 'uniform ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Param type ' + paramType + ' not supported in WebGL, only WebGL2');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\t\tresult.push('uniform sampler2D constants_' + name, 'uniform ivec2 constants_' + name + 'Size', 'uniform ivec3 constants_' + name + 'Dim', 'uniform int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  gl_FragData[0].' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  gl_FragData[' + (j + 1) + '].' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  gl_FragColor.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  gl_FragData[0] = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  gl_FragData[' + (_i2 + 1) + '] = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _linesToString\n   *\n   * @param {Array} lines - An Array of strings\n   *\n   * @returns {String} Single combined String, seperated by *\\n*\n   *\n   */\n\n\t}, {\n\t\tkey: '_linesToString',\n\t\tvalue: function _linesToString(lines) {\n\t\t\tif (lines.length > 0) {\n\t\t\t\treturn lines.join(';\\n') + ';\\n';\n\t\t\t} else {\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _replaceArtifacts\n   *\n   * @param {String} src - Shader string\n   * @param {Array} map - Variables/Constants associated with shader\n   *\n   */\n\n\t}, {\n\t\tkey: '_replaceArtifacts',\n\t\tvalue: function _replaceArtifacts(src, map) {\n\t\t\treturn src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, function (match, artifact) {\n\t\t\t\tif (map.hasOwnProperty(artifact)) {\n\t\t\t\t\treturn map[artifact];\n\t\t\t\t}\n\t\t\t\tthrow 'unhandled artifact ' + artifact;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tvar drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tvar _drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!_drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_addSubKernel',\n\t\tvalue: function _addSubKernel(subKernel) {\n\t\t\tthis.functionBuilder.addSubKernel(subKernel, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn) {\n\t\t\tthis.functionBuilder.addFunction(null, fn);\n\t\t}\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy(removeCanvasReferences) {\n\t\t\t_get(WebGLKernel.prototype.__proto__ || Object.getPrototypeOf(WebGLKernel.prototype), 'destroy', this).call(this);\n\t\t\tif (this.outputTexture) {\n\t\t\t\tthis._webGl.deleteTexture(this.outputTexture);\n\t\t\t}\n\t\t\tif (this.buffer) {\n\t\t\t\tthis._webGl.deleteBuffer(this.buffer);\n\t\t\t}\n\t\t\tif (this.framebuffer) {\n\t\t\t\tthis._webGl.deleteFramebuffer(this.framebuffer);\n\t\t\t}\n\n\t\t\tif (this.vertShader) {\n\t\t\t\tthis._webGl.deleteShader(this.vertShader);\n\t\t\t}\n\n\t\t\tif (this.fragShader) {\n\t\t\t\tthis._webGl.deleteShader(this.fragShader);\n\t\t\t}\n\n\t\t\tif (this.program) {\n\t\t\t\tthis._webGl.deleteProgram(this.program);\n\t\t\t}\n\n\t\t\tvar keys = Object.keys(this.textureCache);\n\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar name = keys[i];\n\t\t\t\tthis._webGl.deleteTexture(this.textureCache[name]);\n\t\t\t}\n\n\t\t\tif (this.subKernelOutputTextures) {\n\t\t\t\tfor (var _i3 = 0; _i3 < this.subKernelOutputTextures.length; _i3++) {\n\t\t\t\t\tthis._webGl.deleteTexture(this.subKernelOutputTextures[_i3]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (removeCanvasReferences) {\n\t\t\t\tvar idx = canvases.indexOf(this._canvas);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tcanvases[idx] = null;\n\t\t\t\t\tmaxTexSizes[idx] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._webGl;\n\t\t}\n\t}]);\n\n\treturn WebGLKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options).setAddFunction(this.addFunction.bind(this)));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.2\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {Object} options\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.addFunction = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\t\tthis.states = [];\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tvar paramTypes = void 0;\n\t\tvar returnType = void 0;\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('paramTypes')) {\n\t\t\t\tthis.paramTypes = paramTypes = options.paramTypes;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constantTypes')) {\n\t\t\t\tthis.constantTypes = options.constantTypes;\n\t\t\t} else {\n\t\t\t\tthis.constantTypes = {};\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('returnType')) {\n\t\t\t\treturnType = options.returnType;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = options.fixIntegerDivisionAccuracy;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'float';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'float';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'isInput',\n\t\tvalue: function isInput(paramName) {\n\t\t\treturn this.paramTypes[this.paramNames.indexOf(paramName)] === 'Input';\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(fn) {\n\t\t\tthis.addFunction = fn;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'pushState',\n\t\tvalue: function pushState(state) {\n\t\t\tthis.states.push(state);\n\t\t}\n\t}, {\n\t\tkey: 'popState',\n\t\tvalue: function popState(state) {\n\t\t\tif (this.state !== state) {\n\t\t\t\tthrow new Error('Cannot popState ' + state + ' when in ' + this.state);\n\t\t\t}\n\t\t\tthis.states.pop();\n\t\t}\n\t}, {\n\t\tkey: 'isState',\n\t\tvalue: function isState(state) {\n\t\t\treturn this.state === state;\n\t\t}\n\t}, {\n\t\tkey: 'getJsFunction',\n\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\tif (this.declarations.hasOwnProperty(paramName)) {\n\t\t\t\t\treturn this.declarations[paramName];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'getConstantType',\n\t\tvalue: function getConstantType(constantName) {\n\t\t\tif (this.constantTypes[constantName]) {\n\t\t\t\treturn this.constantTypes[constantName];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tvar param = calledFunctionArgument[paramIndex];\n\t\t\t\tif (param !== null && param.type !== 'Integer') {\n\t\t\t\t\treturn param.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astGeneric\n   *\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed string array\n   */\n\n\t}, {\n\t\tkey: 'astGeneric',\n\t\tvalue: function astGeneric(ast, retArr) {\n\t\t\tif (ast === null) {\n\t\t\t\tthrow this.astErrorOutput('NULL ast', ast);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(ast)) {\n\t\t\t\t\tfor (var i = 0; i < ast.length; i++) {\n\t\t\t\t\t\tthis.astGeneric(ast[i], retArr);\n\t\t\t\t\t}\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\n\t\t\t\tswitch (ast.type) {\n\t\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\t\t\treturn this.astFunctionDeclaration(ast, retArr);\n\t\t\t\t\tcase 'FunctionExpression':\n\t\t\t\t\t\treturn this.astFunctionExpression(ast, retArr);\n\t\t\t\t\tcase 'ReturnStatement':\n\t\t\t\t\t\treturn this.astReturnStatement(ast, retArr);\n\t\t\t\t\tcase 'Literal':\n\t\t\t\t\t\treturn this.astLiteral(ast, retArr);\n\t\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\t\treturn this.astBinaryExpression(ast, retArr);\n\t\t\t\t\tcase 'Identifier':\n\t\t\t\t\t\treturn this.astIdentifierExpression(ast, retArr);\n\t\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\t\treturn this.astAssignmentExpression(ast, retArr);\n\t\t\t\t\tcase 'ExpressionStatement':\n\t\t\t\t\t\treturn this.astExpressionStatement(ast, retArr);\n\t\t\t\t\tcase 'EmptyStatement':\n\t\t\t\t\t\treturn this.astEmptyStatement(ast, retArr);\n\t\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\t\treturn this.astBlockStatement(ast, retArr);\n\t\t\t\t\tcase 'IfStatement':\n\t\t\t\t\t\treturn this.astIfStatement(ast, retArr);\n\t\t\t\t\tcase 'BreakStatement':\n\t\t\t\t\t\treturn this.astBreakStatement(ast, retArr);\n\t\t\t\t\tcase 'ContinueStatement':\n\t\t\t\t\t\treturn this.astContinueStatement(ast, retArr);\n\t\t\t\t\tcase 'ForStatement':\n\t\t\t\t\t\treturn this.astForStatement(ast, retArr);\n\t\t\t\t\tcase 'WhileStatement':\n\t\t\t\t\t\treturn this.astWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'DoWhileStatement':\n\t\t\t\t\t\treturn this.astDoWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\t\treturn this.astVariableDeclaration(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclarator':\n\t\t\t\t\t\treturn this.astVariableDeclarator(ast, retArr);\n\t\t\t\t\tcase 'ThisExpression':\n\t\t\t\t\t\treturn this.astThisExpression(ast, retArr);\n\t\t\t\t\tcase 'SequenceExpression':\n\t\t\t\t\t\treturn this.astSequenceExpression(ast, retArr);\n\t\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\t\treturn this.astUnaryExpression(ast, retArr);\n\t\t\t\t\tcase 'UpdateExpression':\n\t\t\t\t\t\treturn this.astUpdateExpression(ast, retArr);\n\t\t\t\t\tcase 'LogicalExpression':\n\t\t\t\t\t\treturn this.astLogicalExpression(ast, retArr);\n\t\t\t\t\tcase 'MemberExpression':\n\t\t\t\t\t\treturn this.astMemberExpression(ast, retArr);\n\t\t\t\t\tcase 'CallExpression':\n\t\t\t\t\t\treturn this.astCallExpression(ast, retArr);\n\t\t\t\t\tcase 'ArrayExpression':\n\t\t\t\t\t\treturn this.astArrayExpression(ast, retArr);\n\t\t\t\t\tcase 'DebuggerStatement':\n\t\t\t\t\t\treturn this.astDebuggerStatement(ast, retArr);\n\t\t\t\t}\n\n\t\t\t\tthrow this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n\t\t\t}\n\t\t}\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, this);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @ignore\n   * @function\n   * @name pushParameter\n   *\n   * @desc [INTERNAL] pushes a fn parameter onto retArr and 'casts' to int if necessary\n   *  i.e. deal with force-int-parameter state\n   * \t\t\t\n   * @param {Array} retArr - return array string\n   * @param {String} parameter - the parameter name  \n   *\n   */\n\n\t}, {\n\t\tkey: 'pushParameter',\n\t\tvalue: function pushParameter(retArr, parameter) {\n\t\t\tif (this.isState('in-get-call-parameters')) {\n\t\t\t\tretArr.push('int(' + parameter + ')');\n\t\t\t} else {\n\t\t\t\tretArr.push(parameter);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'state',\n\t\tget: function get() {\n\t\t\treturn this.states[this.states.length - 1];\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionNodeBase = require('../function-node-base');\nvar utils = require('../../core/utils');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar jsMathPrefix = 'Math.';\nvar localPrefix = 'this.';\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n// these debugs were hugely usefull...\n// TODO: optimise out - webpack/babel options? maybe some generic logging support in core/utils?\n// const debugLog = console.log\nvar debugLog = function debugLog() {};\n/**\n * @class WebGLFunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends FunctionNodeBase\n *\n * @param {functionNode} inNode - The function node object\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_FunctionNodeBase) {\n\t_inherits(WebGLFunctionNode, _FunctionNodeBase);\n\n\tfunction WebGLFunctionNode() {\n\t\t_classCallCheck(this, WebGLFunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLFunctionNode.__proto__ || Object.getPrototypeOf(WebGLFunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLFunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tdebugLog(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn WebGLFunctionNode.astFunctionPrototype(this.getJsAST(), [], this).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), [], this);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tif (this.addFunction) {\n\t\t\t\tthis.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   * @static\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t} else {\n\t\t\t\tretArr.push(this.returnType);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar type = this.getParamType(paramName);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\t\tretArr.push('sampler2D');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tretArr.push('float');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return;');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\t// Push the literal value as a float/int\n\t\t\tretArr.push(ast.value);\n\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\t// If it was an int, node made a float if necessary\n\t\t\tif (Number.isInteger(ast.value)) {\n\t\t\t\tif (!inGetParams) {\n\t\t\t\t\tretArr.push('.0');\n\t\t\t\t}\n\t\t\t} else if (inGetParams) {\n\t\t\t\t// or cast to an int as we are addressing an input array\n\t\t\t\tretArr.pop();\n\t\t\t\tretArr.push('int(');\n\t\t\t\tretArr.push(ast.value);\n\t\t\t\tretArr.push(')');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\t\t\t\tretArr.push('int');\n\t\t\t}\n\t\t\tretArr.push('(');\n\n\t\t\tif (ast.operator === '%') {\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else if (ast.operator === '===') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('==');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (ast.operator === '!==') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('!=');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n\t\t\t\tretArr.push('div_with_int_check(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(', ');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(ast.operator);\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t}\n\n\t\t\tretArr.push(')');\n\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\t// https://stackoverflow.com/a/47543127/1324039\n\t\t\t\t\tretArr.push('3.402823466e+38');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statment', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif (forNode.test.right.type === 'Identifier' && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tdebugLog(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (float ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tif (assNode.operator === '%=') {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push('=');\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(assNode.operator);\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\treturn retArr;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tvar declaration = vardecNode.declarations[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tvar retDeclaration = [];\n\t\t\t\tthis.astGeneric(declaration, retDeclaration);\n\t\t\t\tif (retDeclaration[2] === 'getImage2D(' || retDeclaration[2] === 'getImage3D(') {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tretArr.push('vec4 ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.declarations[declaration.id.name] = 'vec4';\n\t\t\t\t} else {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.declarations[declaration.id.name] = 'float';\n\t\t\t\t}\n\t\t\t\tretArr.push.apply(retArr, retDeclaration);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tdebugLog(\"[in] astMemberExpression \" + mNode.object.type);\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\t// Working logger\n\t\t\t\t\tvar reqName = mNode.object.name;\n\t\t\t\t\tvar funcName = this.functionName || 'kernel';\n\t\t\t\t\tvar assumeNotTexture = false;\n\n\t\t\t\t\t// Possibly an array request - handle it as such\n\t\t\t\t\tif (this.paramNames) {\n\t\t\t\t\t\tvar idx = this.paramNames.indexOf(reqName);\n\t\t\t\t\t\tif (idx >= 0 && this.paramTypes[idx] === 'float') {\n\t\t\t\t\t\t\tassumeNotTexture = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdebugLog(\"- astMemberExpression \" + reqName + \" \" + funcName);\n\t\t\t\t\tif (assumeNotTexture) {\n\t\t\t\t\t\t// Get from array\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tretArr.push('[int(');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(')]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar isInGetParams = this.isState('in-get-call-parameters');\n\t\t\t\t\t\tvar multiMemberExpression = this.isState('multi-member-expression');\n\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\n\t\t\t\t\t\t// This normally refers to the global read only input vars\n\t\t\t\t\t\tvar variableType = null;\n\t\t\t\t\t\tif (mNode.object.name) {\n\t\t\t\t\t\t\tvariableType = this.getParamType(mNode.object.name);\n\t\t\t\t\t\t} else if (mNode.object && mNode.object.object && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression') {\n\t\t\t\t\t\t\tvariableType = this.getConstantType(mNode.object.property.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (variableType) {\n\t\t\t\t\t\t\tcase 'vec4':\n\t\t\t\t\t\t\t\t// Get from local vec4\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('[');\n\t\t\t\t\t\t\t\tretArr.push(mNode.property.raw);\n\t\t\t\t\t\t\t\tretArr.push(']');\n\t\t\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage3D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage2D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// Get from texture\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push('int(');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push('get(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('BitRatio');\n\t\t\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tdebugLog(\"- astMemberExpression obj:\", mNode.object);\n\t\t\t\t\tvar stateStackDepth = this.states.length;\n\t\t\t\t\tvar startedInGetParamsState = this.isState('in-get-call-parameters');\n\t\t\t\t\tif (!startedInGetParamsState) {\n\t\t\t\t\t\tthis.pushState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tif (this.isState('multi-member-expression')) {\n\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tvar changedGetParamsState = !startedInGetParamsState && this.isState('in-get-call-parameters');\n\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t\tdebugLog(\"- astMemberExpression prop:\", mNode.property);\n\t\t\t\t\tvar shouldPopParamState = this.isState('should-pop-in-get-call-parameters');\n\t\t\t\t\tif (shouldPopParamState) {\n\t\t\t\t\t\t// go back to in-get-call-parameters state\n\t\t\t\t\t\tthis.popState('should-pop-in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\tretArr.push(last);\n\n\t\t\t\t\tif (changedGetParamsState) {\n\t\t\t\t\t\t// calling memberExpression should pop...\n\t\t\t\t\t\tthis.pushState('should-pop-in-get-call-parameters');\n\t\t\t\t\t} else if (shouldPopParamState) {\n\t\t\t\t\t\t// do the popping!\n\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Unroll the member expression\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tvar unrolled_lc = unrolled.toLowerCase();\n\t\t\t\tdebugLog(\"- astMemberExpression unrolled:\", unrolled);\n\t\t\t\t// Its a constant, remove this.constants.\n\t\t\t\tif (unrolled.indexOf(constantsPrefix) === 0) {\n\t\t\t\t\tunrolled = 'constants_' + unrolled.slice(constantsPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// do we need to cast addressing vales to float?\n\t\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\t\tswitch (unrolled_lc) {\n\t\t\t\t\tcase 'this.thread.x':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.y':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.z':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdebugLog(\"[out] astMemberExpression \" + mNode.object.type);\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Its a math operator, remove the prefix\n\t\t\t\tif (funcName.indexOf(jsMathPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(jsMathPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// Its a local function, remove this\n\t\t\t\tif (funcName.indexOf(localPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(localPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// if this if grows to more than one, lets use a switch\n\t\t\t\tif (funcName === 'atan2') {\n\t\t\t\t\tfuncName = 'atan';\n\t\t\t\t}\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('float[' + arrLen + '](');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\treturn this.getFunctionPrototypeString().length > 0;\n\t\t}\n\t}], [{\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionNode;\n}(FunctionNodeBase);\n\nfunction isIdentifierKernelParam(paramName, ast, funcParam) {\n\treturn funcParam.paramNames.indexOf(paramName) !== -1;\n}\n\nfunction ensureIndentifierType(paramName, expectedType, ast, funcParam) {\n\tvar start = ast.loc.start;\n\n\tif (!isIdentifierKernelParam(paramName) && expectedType !== 'float') {\n\t\tthrow new Error('Error unexpected identifier ' + paramName + ' on line ' + start.line);\n\t} else {\n\t\tvar actualType = funcParam.paramTypes[funcParam.paramNames.indexOf(paramName)];\n\t\tif (actualType !== expectedType) {\n\t\t\tthrow new Error('Error unexpected identifier ' + paramName + ' on line ' + start.line);\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following:\n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGLFunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n\t_inherits(WebGLFunctionBuilder, _FunctionBuilderBase);\n\n\tfunction WebGLFunctionBuilder() {\n\t\t_classCallCheck(this, WebGLFunctionBuilder);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLFunctionBuilder.__proto__ || Object.getPrototypeOf(WebGLFunctionBuilder)).call(this));\n\n\t\t_this.Node = WebGLFunctionNode;\n\t\treturn _this;\n\t}\n\n\t//---------------------------------------------------------\n\t//\n\t//  Polyfill stuff\n\t//\n\t//---------------------------------------------------------\n\n\t// Round function used in polyfill\n\n\n\t_createClass(WebGLFunctionBuilder, [{\n\t\tkey: 'polyfillStandardFunctions',\n\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name polyfillStandardFunctions\n   *\n   * @desc Polyfill in the missing Math functions (round)\n   *\n   */\n\t\tvalue: function polyfillStandardFunctions() {\n\t\t\tthis.addFunction('round', _round);\n\t\t}\n\t}], [{\n\t\tkey: 'round',\n\t\tvalue: function round(a) {\n\t\t\treturn _round(a);\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionBuilder;\n}(FunctionBuilderBase);\n\nfunction _round(a) {\n\treturn Math.floor(a + 0.5);\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGLKernel = require('./kernel');\nvar WebGLFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGLRunner, _RunnerBase);\n\n\t/**\n  * @constructor WebGLRunner\n  *\n \t * @extends RunnerBase\n  \t * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGLRunner(settings) {\n\t\t_classCallCheck(this, WebGLRunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLRunner.__proto__ || Object.getPrototypeOf(WebGLRunner)).call(this, new WebGLFunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGLKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGLRunner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(WebGLRunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGLRunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\n\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn WebGL2FunctionNode.astFunctionPrototype(this.getJsAST(), [], this).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), [], this);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t} else {\n\t\t\t\tretArr.push(this.returnType);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar type = this.getParamType(paramName);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\tretArr.push('sampler2D');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tretArr.push('float');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGL2FunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(WebGL2FunctionBuilder, _FunctionBuilderBase);\n\n  function WebGL2FunctionBuilder() {\n    _classCallCheck(this, WebGL2FunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (WebGL2FunctionBuilder.__proto__ || Object.getPrototypeOf(WebGL2FunctionBuilder)).call(this));\n\n    _this.Node = WebGL2FunctionNode;\n    return _this;\n  }\n\n  return WebGL2FunctionBuilder;\n}(FunctionBuilderBase);","\"use strict\";\n\nmodule.exports = \"#version 300 es\\n__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nin vec2 vTexCoord;\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x/y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    return rgba[channel] * 255.0;\\n  }\\n  else {\\n    return rgba[channel*2] * 255.0 + rgba[channel*2 + 1] * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, st / vec2(texSize));\\n}\\n\\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, vec3(st / vec2(texSize), z));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, 0, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, 0, x);\\n}\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nin vec2 aPos;\\nin vec2 aTexCoord;\\n\\nout vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('../web-gl/kernel');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\n\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2Kernel, _WebGLKernel);\n\n\tfunction WebGL2Kernel() {\n\t\t_classCallCheck(this, WebGL2Kernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2Kernel.__proto__ || Object.getPrototypeOf(WebGL2Kernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2Kernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl2(this.getCanvas());\n\t\t}\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupportedWebGL2();\n\t\t\tif (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\n\t\t\tif (this.floatOutput || this.floatOutputForce) {\n\t\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tgl.drawBuffers(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim3 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size3 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, _internalFormat, width, height, textureDepth, border, _srcFormat, _srcType, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat, _srcType, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim4 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size4 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim4);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size4);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // always float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2D constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2DArray constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('constants_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim5 = input.size;\n\t\t\t\t\t\tvar _size5 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim5);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size5[0] * _size5[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size5[0], _size5[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size5[0] / _bitRatio2, _size5[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim6 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size6 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim7 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size7 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel2 = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat2 = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat2 = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType2 = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, _internalFormat2, width, height, textureDepth, border, _srcFormat2, _srcType2, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat2, _srcType2, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim7);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size7);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim8 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size8 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim8);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size8);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn '  return texel[channel];';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'in highp vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out highp vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'highp ivec2 user_' + paramName + 'Size = ivec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'highp ivec3 user_' + paramName + 'Dim = ivec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform highp int user_' + paramName + 'BitRatio');\n\n\t\t\t\t\t\tif (paramType === 'Array') {\n\t\t\t\t\t\t\tresult.push('uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'HTMLImageArray') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2DArray user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tresult.push('layout(location = 0) out vec4 data0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0', 'layout(location = ' + (i + 1) + ') out vec4 data' + (i + 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('out vec4 data0');\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  data' + (j + 1) + '.' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  data0 = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  data' + (_i2 + 1) + ' = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\t}], [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t}]);\n\n\treturn WebGL2Kernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGL2FunctionBuilder = require('./function-builder');\nvar WebGL2Kernel = require('./kernel');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGL2Runner, _RunnerBase);\n\n\t/**\n  * @constructor WebGL2Runner\n  *\n  * @extends RunnerBase\n \t * @desc Instantiates a Runner instance for the kernel.\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGL2Runner(settings) {\n\t\t_classCallCheck(this, WebGL2Runner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGL2Runner.__proto__ || Object.getPrototypeOf(WebGL2Runner)).call(this, new WebGL2FunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGL2Kernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGL2Runner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  *\n  * @returns {String} The current mode; \"gpu\".\n  *\n  */\n\n\n\t_createClass(WebGL2Runner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGL2Runner;\n}(RunnerBase);","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (cpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {        \\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(cpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(cpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(cpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n        this._kernelString = `' + cpuKernel._kernelString + '`;\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n\\t\\t    this.run = function() {\\n          this.run = null;\\n          this.build();\\n          return this.run.apply(this, arguments);\\n        }.bind(this);\\n        this.thread = {\\n          x: 0,\\n          y: 0,\\n          z: 0\\n        };\\n      }\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      ' + removeFnNoise(cpuKernel.build.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupParams.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupConstants.toString()) + '\\n      run () { ' + cpuKernel.kernelString + ' }\\n      getKernelString() { return this._kernelString; }\\n      ' + removeFnNoise(cpuKernel.validateOptions.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  * \n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as \n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel \n   * string using thread dimensions, and arguments \n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.validateOptions();\n\t\t\tvar canvas = this._canvas;\n\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tcanvas.width = threadDim[0];\n\t\t\t\tcanvas.height = threadDim[1];\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   * \n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tparamSizes: this.paramSizes,\n\t\t\t\tconstantTypes: this.constantTypes\n\t\t\t});\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim\n\t\t\t});\n\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes('kernel');\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + '\\n\\t\\tvar constants = this.constants;\\n\\t\\tvar _this = this;\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  var ' + name + ' = null;\\n';\n\t\t\t}).join('')) + '\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n  ' + this._processConstants() + '\\n  ' + this._processParams() + '\\n    var ret = new Array(' + threadDim[2] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  ' + name + 'Z = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('')) + '\\n    for (this.thread.z = 0; this.thread.z < ' + threadDim[2] + '; this.thread.z++) {\\n      ret[this.thread.z] = new Array(' + threadDim[1] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + 'Z[this.thread.z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('')) + '\\n      for (this.thread.y = 0; this.thread.y < ' + threadDim[1] + '; this.thread.y++) {\\n        ret[this.thread.z][this.thread.y] = ' + (this.floatOutput ? 'new Float32Array(' + threadDim[0] + ')' : 'new Array(' + threadDim[0] + ')') + ';\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '      ' + name + 'Z[this.thread.z][this.thread.y] = ' + (_this2.floatOutput ? 'new Float32Array(' + threadDim[0] + ')' : 'new Array(' + threadDim[0] + ')') + ';\\n';\n\t\t\t}).join('')) + '\\n        for (this.thread.x = 0; this.thread.x < ' + threadDim[0] + '; this.thread.x++) {\\n          var kernelResult;\\n          ' + kernel + '\\n          ret[this.thread.z][this.thread.y][this.thread.x] = kernelResult;\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '        ' + name + 'Z[this.thread.z][this.thread.y][this.thread.x] = ' + name + ';\\n';\n\t\t\t}).join('')) + '\\n          }\\n        }\\n      }\\n      \\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      \\n      if (this.output.length === 1) {\\n        ret = ret[0][0];\\n        ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0][0];\\n';\n\t\t\t}).join('')) + '\\n      \\n      } else if (this.output.length === 2) {\\n        ret = ret[0];\\n        ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0];\\n';\n\t\t\t}).join('')) + '\\n      } else {\\n        ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z;\\n';\n\t\t\t}).join('')) + '\\n      }\\n    \\n      ' + (this.subKernelOutputVariableNames === null ? 'return ret;\\n' : this.subKernels !== null ? 'var result = [\\n        ' + this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '' + name;\n\t\t\t}).join(',\\n') + '\\n      ];\\n      result.result = ret;\\n      return result;\\n' : 'return {\\n        result: ret,\\n        ' + Object.keys(this.subKernelProperties).map(function (name, i) {\n\t\t\t\treturn name + ': ' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n      };') + '\\n    ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processConstants',\n\t\tvalue: function _processConstants() {\n\t\t\tif (!this.constants) return '';\n\n\t\t\tvar result = [];\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar type = this.constantTypes[p];\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo2DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo3DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: '_processParams',\n\t\tvalue: function _processParams() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = user_' + this.paramNames[i] + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (canvas.width < image.width) {\n\t\t\t\tcanvas.width = image.width;\n\t\t\t}\n\t\t\tif (canvas.height < image.height) {\n\t\t\t\tcanvas.height = image.height;\n\t\t\t}\n\t\t\tvar ctx = this._canvasCtx;\n\t\t\tctx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\tvar r = pixelsData[index++] / 255;\n\t\t\t\t\tvar g = pixelsData[index++] / 255;\n\t\t\t\t\tvar b = pixelsData[index++] / 255;\n\t\t\t\t\tvar a = pixelsData[index++] / 255;\n\t\t\t\t\tvar result = [r, g, b, a];\n\t\t\t\t\tresult.r = r;\n\t\t\t\t\tresult.g = g;\n\t\t\t\t\tresult.b = b;\n\t\t\t\t\tresult.a = a;\n\t\t\t\t\timageArray[y][x] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseFunctionNode = require('../function-node-base');\nvar utils = require('../../core/utils');\n\n/**\n * @class CPUFunctionNode\n *\n * @extends BaseFunctionNode#\n *\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n *\n * @prop functionName         - {String}        Name of the function\n * @prop jsFunction           - {Function}   The JS Function the node represents\n * @prop jsFunctionString     - {String}        jsFunction.toString()\n * @prop paramNames           - {String[]}  Parameter names of the function\n * @prop paramTypes           - {String[]}  Shader land parameters type assumption\n * @prop isRootKernel         - {Boolean}       Special indicator, for kernel function\n * @prop webglFunctionString  - {String}        webgl converted function string\n * @prop openglFunctionString - {String}        opengl converted function string\n * @prop calledFunctions      - {String[]}  List of all the functions called\n * @prop initVariables        - {String[]}  List of variables initialized in the function\n * @prop readVariables        - {String[]}  List of variables read operations occur\n * @prop writeVariables       - {String[]}  List of variables write operations occur\n *\n */\nmodule.exports = function (_BaseFunctionNode) {\n\t_inherits(CPUFunctionNode, _BaseFunctionNode);\n\n\tfunction CPUFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, CPUFunctionNode);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUFunctionNode.__proto__ || Object.getPrototypeOf(CPUFunctionNode)).call(this, functionName, jsFunction, options));\n\n\t\t_this.paramSizes = options ? options.paramSizes : [];\n\t\t_this.memberStates = [];\n\t\treturn _this;\n\t}\n\n\t_createClass(CPUFunctionNode, [{\n\t\tkey: 'pushMemberState',\n\t\tvalue: function pushMemberState(name) {\n\t\t\tthis.memberStates.push(name);\n\t\t}\n\t}, {\n\t\tkey: 'popMemberState',\n\t\tvalue: function popMemberState(name) {\n\t\t\tif (this.memberState === name) {\n\t\t\t\tthis.memberStates.pop();\n\t\t\t} else {\n\t\t\t\tthrow new Error('Cannot popMemberState ' + name + ' when in ' + this.memberState);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\tthis.functionString = this.functionStringArray.join('').trim();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted JS function\n   *\n   * @returns {String} function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tif (this.addFunction) {\n\t\t\t\tthis.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\tretArr.push('function');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push(this.functionName);\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\n\t\t\t\t// Function opening\n\t\t\t\tretArr.push(') {\\n');\n\t\t\t}\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Function closing\n\t\t\t\tretArr.push('}\\n');\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\tretArr.push(ast.value);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\tretArr.push(ast.operator);\n\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\tretArr.push('(');\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('Infinity');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar _size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + _size[0] * _size[1] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed cpu string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif ((forNode.test.right.type === 'Identifier' || forNode.test.right.type === 'Literal') && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tif (retArr[retArr.length - 1] !== ';') {\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else if (forNode.init.declarations) {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tconsole.log(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('var ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (let ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed openclgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\tretArr.push(assNode.operator);\n\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tretArr.push('var ');\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tthis.declarations[vardecNode.declarations[i].id.name] = 'var';\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(vardecNode.declarations[i], retArr);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('_this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\tthis.pushState('identifier');\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tthis.popState('identifier');\n\t\t\t\t\tretArr.push('[');\n\t\t\t\t\tif (this.isInput(mNode.object.name)) {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(']');\n\t\t\t\t} else {\n\t\t\t\t\tif (mNode.object.object) {\n\t\t\t\t\t\tif (mNode.object.object.object && this.isInput(mNode.object.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t\tthis.pushState('input-index-z');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tthis.popState('input-index-z');\n\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\tretArr.push(last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t} else if (this.isInput(mNode.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.name);\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar isInputIndexZ = this.isState('input-index-z');\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tretArr.push(_last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last2 = retArr.pop();\n\t\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tretArr.push(_last2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tvar _last3 = retArr.pop();\n\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(_last3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tif (mNode.property.type === 'Identifier' && mNode.computed) {\n\t\t\t\t\tunrolled = 'user_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tif (unrolled.indexOf('this.constants') === 0) {\n\t\t\t\t\t// remove 'this.constants' from beginning\n\t\t\t\t\tunrolled = 'constants_' + unrolled.substring(15);\n\t\t\t\t} else if (unrolled.indexOf('this') === 0) {\n\t\t\t\t\t// Its a reference to `this`, add '_' before\n\t\t\t\t\tunrolled = '_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\tretArr.push('(');\n\t\t\t\t}\n\n\t\t\t\tswitch (unrolled) {\n\t\t\t\t\tcase '_this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar _size2 = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + _size2[0] * _size2[1] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('new Float32Array(');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\tretArr.push('debugger;');\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'memberState',\n\t\tget: function get() {\n\t\t\treturn this.memberStates[this.memberStates.length - 1];\n\t\t}\n\t}]);\n\n\treturn CPUFunctionNode;\n}(BaseFunctionNode);","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar CPUFunctionNode = require('./function-node');\n\n/**\n * @class CPUFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds functions to execute on CPU from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(CPUFunctionBuilder, _FunctionBuilderBase);\n\n  function CPUFunctionBuilder() {\n    _classCallCheck(this, CPUFunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (CPUFunctionBuilder.__proto__ || Object.getPrototypeOf(CPUFunctionBuilder)).call(this));\n\n    _this.Node = CPUFunctionNode;\n    return _this;\n  }\n\n  return CPUFunctionBuilder;\n}(FunctionBuilderBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('../../core/utils');\nvar RunnerBase = require('../runner-base');\nvar CPUKernel = require('./kernel');\nvar CPUFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(CPURunner, _RunnerBase);\n\n\t/**\n  * @constructor CPURunner\n  *\n  * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @extends RunnerBase\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\n\tfunction CPURunner(settings) {\n\t\t_classCallCheck(this, CPURunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPURunner.__proto__ || Object.getPrototypeOf(CPURunner)).call(this, new CPUFunctionBuilder(), settings));\n\n\t\t_this.Kernel = CPUKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPURunner#\n  * @function\n  * @name getMode()\n  *\n  * Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(CPURunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'cpu';\n\t\t}\n\t}]);\n\n\treturn CPURunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGLValidatorKernel, _WebGLKernel);\n\n\tfunction WebGLValidatorKernel() {\n\t\t_classCallCheck(this, WebGLValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLValidatorKernel.__proto__ || Object.getPrototypeOf(WebGLValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGLValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2ValidatorKernel, _WebGLKernel);\n\n\tfunction WebGL2ValidatorKernel() {\n\t\t_classCallCheck(this, WebGL2ValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2ValidatorKernel.__proto__ || Object.getPrototypeOf(WebGL2ValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2ValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGL2ValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedMode = mode || 'gpu';\n\t\t}\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} [settings] - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, settings || {});\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined') return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n   * @param {String} returnType - The return type, assumes 'float' if null\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, paramTypes, returnType) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, paramTypes, returnType);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if system has integer division accuracy issue\n   *\n   * @name get hasIntegerDivisionAccuracyBug\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.hasIntegerDivisionAccuracyBug()`\n   *\n   * @returns {Boolean} TRUE if system has integer division accuracy issue\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\treturn utils.hasIntegerDivisionAccuracyBug();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with gpu.js & the webGl if we created it\n   *\n   * @name destroy\n   * @function\n   * @memberOf GPU#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// perform on next runloop - for some reason we dont get lose context events \n\t\t\t// if webGl is created and destroyed in the same run loop.\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar kernels = _this2.kernels;\n\n\t\t\t\tvar destroyWebGl = !_this2._webGl && kernels.length && kernels[0]._webGl;\n\t\t\t\tfor (var i = 0; i < _this2.kernels.length; i++) {\n\t\t\t\t\t_this2.kernels[i].destroy(true); // remove canvas if exists\n\t\t\t\t}\n\n\t\t\t\tif (destroyWebGl) {\n\t\t\t\t\tdestroyWebGl.OES_texture_float = null;\n\t\t\t\t\tdestroyWebGl.OES_texture_float_linear = null;\n\t\t\t\t\tdestroyWebGl.OES_element_index_uint = null;\n\t\t\t\t\tvar loseContextExt = destroyWebGl.getExtension('WEBGL_lose_context');\n\t\t\t\t\tif (loseContextExt) {\n\t\t\t\t\t\tloseContextExt.loseContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;","'use strict';\n\nvar utils = require('./utils');\nmodule.exports = function alias(name, fn) {\n\tvar fnString = fn.toString();\n\treturn new Function('return function ' + name + ' (' + utils.getParamNamesFromString(fnString).join(', ') + ') {' + utils.getFunctionBodyFromString(fnString) + '}')();\n};","'use strict';\n\nconsole.log(\"Testing\");\nvar GPU = require('./core/gpu');\nvar alias = require('./core/alias');\nvar utils = require('./core/utils');\nvar Input = require('./core/input');\nvar Texture = require('./core/texture');\n\nvar CPUFunctionBuilder = require('./backend/cpu/function-builder');\nvar CPUFunctionNode = require('./backend/cpu/function-node');\nvar CPUKernel = require('./backend/cpu/kernel');\nvar CPURunner = require('./backend/cpu/runner');\n\nvar WebGLFunctionBuilder = require('./backend/web-gl/function-builder');\nvar WebGLFunctionNode = require('./backend/web-gl/function-node');\nvar WebGLKernel = require('./backend/web-gl/kernel');\nvar WebGLRunner = require('./backend/web-gl/runner');\n\nvar WebGL2FunctionBuilder = require('./backend/web-gl2/function-builder');\nvar WebGL2FunctionNode = require('./backend/web-gl2/function-node');\nvar WebGL2Kernel = require('./backend/web-gl2/kernel');\nvar WebGL2Runner = require('./backend/web-gl2/runner');\n\nGPU.alias = alias;\nGPU.utils = utils;\nGPU.Texture = Texture;\nGPU.Input = Input;\nGPU.input = function (value, size) {\n\treturn new Input(value, size);\n};\n\nGPU.CPUFunctionBuilder = CPUFunctionBuilder;\nGPU.CPUFunctionNode = CPUFunctionNode;\nGPU.CPUKernel = CPUKernel;\nGPU.CPURunner = CPURunner;\n\nGPU.WebGLFunctionBuilder = WebGLFunctionBuilder;\nGPU.WebGLFunctionNode = WebGLFunctionNode;\nGPU.WebGLKernel = WebGLKernel;\nGPU.WebGLRunner = WebGLRunner;\n\nGPU.WebGL2FunctionBuilder = WebGL2FunctionBuilder;\nGPU.WebGL2FunctionNode = WebGL2FunctionNode;\nGPU.WebGL2Kernel = WebGL2Kernel;\nGPU.WebGL2Runner = WebGL2Runner;\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = GPU;\n}\nif (typeof window !== 'undefined') {\n\twindow.GPU = GPU;\n}","import GPU from 'gpu.js'\n\nlet gpuInstance = null\n\nexport function setup(value) {\n  gpuInstance = value\n}\n\nexport function teardown() {\n  gpuInstance = null\n}\n\nexport function makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'cpu' }))\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setOutputToTexture(true)\n  }\n  return gpuInstance.createKernel(fn, settings).setOutputToTexture(true)\n}\n\nexport function kernelInput(input, size) {\n  return GPU.input(input, size)\n}\n","export default function zeros(size) {\n  return new Float32Array(size)\n}\n","import zeros from './zeros'\n\nexport default function zeros2D(width, height) {\n  const result = new Array(height)\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width)\n  }\n  return result\n}\n","import zeros2D from './zeros-2d'\n\nexport default function zeros3D(width, height, depth) {\n  const result = new Array(depth)\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height)\n  }\n  return result\n}\n","import zeros2D from '../utilities/zeros-2d'\nimport zeros3D from '../utilities/zeros-3d'\n\nexport default class Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: 1,\n      weights: null,\n      deltas: null,\n      name: null,\n    }\n  }\n\n  constructor(settings = {}) {\n    // size\n    this.width = null\n    this.height = null\n\n    // what matters :P\n    this.deltas = null\n    this.weights = null\n\n    this.praxis = null\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings)\n    }\n    Object.assign(this, this.constructor.defaults, settings)\n\n    // special settings\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(\n          Object.assign(\n            {\n              height: this.height,\n              width: this.width,\n            },\n            settings\n          )\n        )\n      } else {\n        this.praxis = settings.praxis\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`)\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`)\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`)\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`)\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      )\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      )\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel\n    }\n    this.praxis = layer.praxis\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate)\n\n    //TODO: put into a kernel\n    if (this.depth > 1) {\n      this.deltas = zeros3D(this.width, this.height, this.depth)\n    } else {\n      this.deltas = zeros2D(this.width, this.height)\n    }\n  }\n\n  toArray() {\n    return this.weights.toArray()\n  }\n\n  toJSON() {\n    const jsonLayer = {}\n    const { defaults, name } = this.constructor\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults)\n    }\n    const keys = Object.keys(defaults)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (key === 'deltas') continue\n      if (key === 'name' && this[key] === null) continue\n      jsonLayer[key] = this[key]\n    }\n    jsonLayer.type = name\n    return jsonLayer\n  }\n}\n","import Base from './base'\n\nexport class Activation extends Base {}\nexport class Internal {}\nexport class Filter extends Base {}\nexport class Model extends Base {}\nexport class Modifier extends Base {}\nexport class Operator extends Base {}\n","import { makeKernel } from '../utilities/kernel'\nimport zeros2D from '../utilities/zeros-2d'\nimport { Operator } from './types'\n\nexport function predict(inputWeights1, inputWeights2) {\n  return (\n    inputWeights1[this.thread.y][this.thread.x] +\n    inputWeights2[this.thread.y][this.thread.x]\n  )\n}\n\nexport default class Add extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super()\n    this.inputLayer1 = inputLayer1\n    this.inputLayer2 = inputLayer2\n    this.width = this.inputLayer1.width\n    this.height = this.inputLayer1.height\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  validate() {\n    super.validate()\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      )\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      )\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    )\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    this.inputLayer1.deltas = this.deltas\n    this.inputLayer2.deltas = this.deltas\n  }\n}\n","export function setStride(layer, settings) {\n  const { defaults } = layer.constructor\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride\n    layer.strideY = settings.stride\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX\n    } else {\n      layer.strideX = defaults.stride\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY\n    } else {\n      layer.strideY = defaults.stride\n    }\n  }\n}\n\nexport function setPadding(layer, settings) {\n  const { defaults } = layer.constructor\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding\n    layer.paddingY = settings.padding\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX\n    } else {\n      layer.paddingX = defaults.padding\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY\n    } else {\n      layer.paddingY = defaults.padding\n    }\n  }\n}\n","export default function randomWeight() {\n  return Math.random() * 0.4 - 0.2\n}\n","import randomWeight from './random-weight'\n\nexport default function randos(size) {\n  const array = new Float32Array(size)\n  for (let i = 0; i < size; i++) {\n    array[i] = randomWeight()\n  }\n  return array\n}\n","import randos from './randos'\n\nexport default function randos2D(width, height) {\n  const result = new Array(height)\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width)\n  }\n  return result\n}\n","import rondos2D from './randos-2d'\n\nexport default function randos3D(width, height, depth) {\n  const result = new Array(depth)\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height)\n  }\n  return result\n}\n","export default function values(size, value) {\n  return new Float32Array(size).fill(value)\n}","import { makeKernel } from '../utilities/kernel'\nimport { setStride, setPadding } from '../utilities/layer-setup'\nimport { Filter } from './types'\nimport randos from '../utilities/randos'\nimport randos3D from '../utilities/randos-3d'\nimport zeros3D from '../utilities/zeros-3d'\nimport values from '../utilities/values'\n\nexport function predict(inputs, filters, biases) {\n  const x =\n    (this.thread.x / this.output.x) *\n      this.constants.inputWidth *\n      this.constants.strideX -\n    this.constants.paddingX\n  const y =\n    (this.thread.y / this.output.y) *\n      this.constants.inputHeight *\n      this.constants.strideY -\n    this.constants.paddingY\n\n  // convolve centered at this particular location\n  let sum = 0\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        for (\n          let inputIndex = 0;\n          inputIndex < this.constants.inputDepth;\n          inputIndex++\n        ) {\n          for (\n            let filterIndex = 0;\n            filterIndex < this.constants.filterCount;\n            filterIndex++\n          ) {\n            sum +=\n              filters[filterIndex][filterY][filterX] *\n              inputs[inputIndex][inputY][inputX]\n          }\n        }\n      }\n    }\n  }\n  return sum + biases[this.thread.z]\n}\n\nexport function compareFilters(filterDeltas, inputs, deltas) {\n  const inputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX\n  const inputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x]\n  for (let z = 0; z < this.constants.filterCount; z++) {\n    for (let y = 0; y < this.constants.filterHeight; y++) {\n      for (let x = 0; x < this.constants.filterWidth; x++) {\n        sum += deltas[this.thread.z][inputY + y][inputX + x] * inputs[this.thread.z][y][x]\n      }\n    }\n  }\n  return sum\n}\n\nexport function compareInputs(filters, deltas) {\n  let sum = 0\n  for (let filterY = 0; filterY <= this.thread.y; filterY++) {\n    let offsetY = this.thread.y - filterY\n    for (let filterX = 0; filterX <= this.thread.x; filterX++) {\n      let offsetX = this.thread.x - filterX\n      for (\n        let filterIndex = 0;\n        filterIndex < this.constants.filterCount;\n        filterIndex++\n      ) {\n        sum +=\n          filters[filterIndex][offsetY][offsetX] *\n          deltas[filterIndex][filterY][filterX]\n      }\n      offsetX--\n    }\n    offsetY--\n  }\n  return sum\n}\n\nexport function compareBiases(biasDeltas, deltas) {\n  let sum = 0\n  for (let y = 0; y < this.constants.y; y++) {\n    for (let x = 0; x < this.constants.x; x++) {\n      sum += deltas[this.thread.z][y][x]\n    }\n  }\n  return biasDeltas[this.thread.z] + sum\n}\n\nexport default class Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    }\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings)\n\n    this.stride = null\n    this.strideX = null\n    this.strideY = null\n    setStride(this, settings)\n\n    this.padding = null\n    this.paddingX = null\n    this.paddingY = null\n    setPadding(this, settings)\n\n    this.filterCount = settings.filterCount\n    this.filterWidth = settings.filterWidth\n    this.filterHeight = settings.filterHeight\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    )\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    )\n    this.depth = this.filterCount\n    this.weights = randos3D(this.width, this.height, this.depth)\n    this.deltas = zeros3D(this.width, this.height, this.depth)\n\n    this.biases = values(this.depth, this.bias)\n    this.biasDeltas = randos(this.depth)\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount)\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount)\n\n    this.learnFilters = null\n    this.learnInputs = null\n    this.inputLayer = inputLayer\n    this.validate()\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterCount: this.filterCount,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    })\n\n    this.compareFiltersKernel = makeKernel(compareFilters, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterCount: this.filterCount,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    })\n\n    this.compareInputsKernel = makeKernel(compareInputs, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n    })\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.inputLayer.depth],\n      constants: {\n        x: 1,\n        y: 1,\n      },\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    )\n  }\n\n  compare() {\n    this.filterDeltas = this.compareFiltersKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    )\n    this.biasDeltas = this.compareBiasesKernel(this.biasDeltas, this.deltas)\n    this.deltas = this.compareInputsKernel(this.filters, this.inputLayer.deltas)\n    this.inputLayer.deltas = this.deltas\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate)\n    this.deltas = zeros3D(this.width, this.height, this.depth)\n  }\n}\n","import { Filter } from './types'\nimport { makeKernel } from '../utilities/kernel'\n\n// TODO: implement random in glsl in gpu.js\nexport function trainingPredict(inputs) {\n  if (Math.random() < this.constants.probability) {\n    return 0\n  }\n  return inputs[this.thread.y][this.thread.x]\n}\n\nexport function predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability\n}\n\nexport default class Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 0,\n      height: 0,\n      depth: 0,\n      probability: 0.5,\n      isTraining: false,\n    }\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings)\n    this.inputLayer = inputLayer\n    this.validate()\n  }\n\n  setupKernels() {\n    if (this.isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, {\n        output: [this.width, this.height, this.depth],\n      })\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height, this.depth],\n      })\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.deltas = this.learnKernel(this.deltas)\n  }\n}\n","import { Filter } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport values from '../utilities/values'\nimport randos2D from '../utilities/randos-2d'\nimport randos3D from '../utilities/randos-3d'\nimport zeros from '../utilities/zeros'\nimport zeros2D from '../utilities/zeros-2d'\nimport zeros3D from '../utilities/zeros-3d'\n\nexport function predict(inputs, filters, biases) {\n  let output = 0\n  let i = 0\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i]\n      i++\n    }\n  }\n  return output + biases[this.thread.x]\n}\n\nexport function predict3D(inputs, filters, biases) {\n  let output = 0\n  let i = 0\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i]\n        i++\n      }\n    }\n  }\n  return output + biases[this.thread.x]\n}\n\nexport function compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0\n  const filterX = this.thread.x + (this.thread.y * this.output.x)\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY]\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x]\n}\n\nexport function compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0\n  const filterX = this.thread.x + (this.thread.y * this.output.x)\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY]\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x]\n}\n\nexport function compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x]\n}\n\nexport function compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  const inputY = Math.floor(this.thread.x / this.constants.inputWidth)\n  const inputX = this.thread.x % this.constants.inputWidth\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputY][inputX] * deltas[0][this.thread.y])\n}\n\nexport function compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight))\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth)\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ)\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y])\n}\n\nexport default class FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    }\n  }\n  constructor(settings, inputLayer) {\n    super(settings)\n    this.inputLayer = inputLayer\n    this.validate()\n    this.compareFilterDeltasKernel = null\n    this.compareInputDeltasKernel = null\n    this.compareBiasesKernel = null\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth\n\n    this.biases = values(this.height, this.bias)\n    this.biasDeltas = zeros(this.height)\n\n    this.filters = randos2D(connectionCount, this.height)\n    this.filterDeltas = zeros2D(connectionCount, this.height)\n\n    if (this.depth > 1) {\n      this.weights = randos3D(this.width, this.height)\n      this.deltas = zeros3D(this.width, this.height)\n    } else if (this.height > 1) {\n      this.weights = randos2D(this.width, this.height)\n      this.deltas = zeros2D(this.width, this.height)\n    }\n  }\n\n  validate() {\n    super.validate()\n    if (this.depth > 1) throw new Error('depth not supported')\n  }\n\n  setupKernels() {\n    const { inputLayer } = this\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth\n    if (inputLayer.depth > 1) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      })\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      })\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n      })\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      })\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      })\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      })\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    )\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      this.inputLayer.deltas,\n      this.deltas,\n      this.filters\n    )\n\n    //TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas)\n\n    //TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    )\n  }\n}\n","import { Model } from './types'\nimport zeros2D from '../utilities/zeros-2d'\nimport { kernelInput } from '../utilities/kernel'\n\nexport default class Input extends Model {\n  constructor(settings) {\n    super(settings)\n    if (this.width === 1) {\n      this.predict = this.predict1D\n    }\n    this.validate()\n    this.weights = null\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  setupKernels() {}\n\n  predict(inputs) {\n    if (inputs.length === this.height * this.width) {\n      this.weights = kernelInput(inputs, [this.width, this.height])\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = inputs\n    } else {\n      throw new Error('Inputs are not of sized correctly')\n    }\n  }\n\n  predict1D(inputs) {\n    const weights = []\n    for (let x = 0; x < inputs.length; x++) {\n      weights.push([inputs[x]])\n    }\n    this.weights = weights\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  toJSON() {\n    const jsonLayer = {}\n    const { defaults, name } = this.constructor\n    const keys = Object.keys(defaults)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      if (key === 'deltas' || key === 'weights') continue\n      jsonLayer[key] = this[key]\n    }\n    jsonLayer.type = name\n    return jsonLayer\n  }\n}\n","import { Activation } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport { activate, measure } from '../activation/leaky-relu'\n\nexport function predict(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x])\n}\n\nexport function compare(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  )\n}\n\nexport default class LeakyRelu extends Activation {\n  constructor(inputLayer) {\n    super()\n    this.inputLayer = inputLayer\n    const { width, height, depth } = inputLayer\n    this.width = width\n    this.height = height\n    this.depth = depth\n    this.validate()\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      functions: [activate],\n    })\n\n    this.compareKernel = makeKernel(compare, {\n      functions: [measure],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas)\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport zeros2D from '../utilities/zeros-2d'\nimport { Operator } from './types'\n\nexport function predict(weights1, weights2) {\n  let sum = 0\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x]\n  }\n  return sum\n}\n\nexport function compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x]\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i]\n  }\n  return sum\n}\n\nexport function compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x]\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y]\n  }\n  return sum\n}\n\nexport default class Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super()\n    this.inputLayer1 = inputLayer1\n    this.inputLayer2 = inputLayer2\n    this.compareKernel1 = null\n    this.compareKernel2 = null\n\n    this.width = inputLayer2.width\n    this.height = inputLayer1.height\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  validate() {\n    super.validate()\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      )\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n    })\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n    })\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n    })\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer)\n    this.compareKernel1 = layer.compareKernel1\n    this.compareKernel2 = layer.compareKernel2\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    )\n  }\n\n  compare() {\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    )\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    )\n    this.inputLayer2.deltas = newDeltas2\n    this.inputLayer1.deltas = newDeltas1\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport { Operator } from './types'\nimport zeros2D from '../utilities/zeros-2d'\n\nfunction predict(weights, inputLayerWeights) {\n  return (\n    weights[this.thread.y][this.thread.x] *\n    inputLayerWeights[this.thread.y][this.thread.x]\n  )\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  )\n}\n\nexport default class MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super()\n    this.inputLayer1 = inputLayer1\n    this.inputLayer2 = inputLayer2\n\n    this.width = inputLayer1.width\n    this.height = inputLayer1.height\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  validate() {\n    super.validate()\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      )\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      )\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    })\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.weights, this.inputLayer.weights)\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas)\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport { Modifier } from './types'\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x]\n}\n\nexport default class Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings)\n    this.inputLayer = inputLayer\n    this.validate()\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n}\n","export default function ones(size) {\n  return new Float32Array(size).fill(1)\n}\n","import ones from './ones'\n\nexport default function ones2D(width, height) {\n  const result = new Array(height)\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width)\n  }\n  return result\n}\n","import ones2D from '../utilities/ones-2d'\nimport zeros2D from '../utilities/zeros-2d'\nimport { Model } from './types'\n\nexport default class Ones extends Model {\n  constructor(settings) {\n    super(settings)\n    this.validate()\n    this.weights = ones2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n}\n","import { Filter } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport { setPadding, setStride } from '../utilities/layer-setup'\nimport zeros3D from '../utilities/zeros-3d'\nimport randos3D from \"../utilities/randos-3d\";\n\nfunction setSwitchY(value) {\n  return value\n}\n\nfunction setSwitchX(value) {\n  return value\n}\n\nexport function predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  )\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  )\n  let largestValue = -Infinity\n  let largestX = -1\n  let largestY = -1\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX]\n        if (input > largestValue) {\n          largestValue = input\n          largestY = inputY\n          largestX = inputX\n        }\n      }\n    }\n  }\n  setSwitchY(largestY)\n  setSwitchX(largestX)\n  return largestValue\n}\n\nexport function compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  )\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  )\n\n  let value = 0\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX]\n      const switchYValue = switchY[deltasY][deltasX]\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX]\n      }\n    }\n  }\n\n  return value\n}\n\nexport function compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  )\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  )\n\n  let value = 0\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX]\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX]\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX]\n      }\n    }\n  }\n\n  return value\n}\n\nexport default class Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    }\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings)\n\n    this.stride = null\n    this.strideX = null\n    this.strideY = null\n    setStride(this, settings)\n\n    this.padding = null\n    this.paddingX = null\n    this.paddingY = null\n    setPadding(this, settings)\n\n    this.filterCount = settings.filterCount\n    this.filterWidth = settings.filterWidth\n    this.filterHeight = settings.filterHeight\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    )\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    )\n    //TODO: handle 1 depth?\n    this.depth = this.filterCount\n\n    this.weights = randos3D(this.width, this.height, this.depth)\n    this.deltas = zeros3D(this.width, this.height, this.depth)\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount)\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount)\n\n    this.learnFilters = null\n    this.learnInputs = null\n    this.inputLayer = inputLayer\n    this.validate()\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    })\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    })\n  }\n\n  predict() {\n    const weights = this.predictKernel(this.inputLayer.weights)\n    this.switchX = weights.switchX\n    this.switchY = weights.switchY\n    this.weights = weights.result\n    return this.weights\n  }\n\n  compare() {\n    debugger\n    const depth = this.inputLayer.deltas.length\n    const height = this.inputLayer.deltas[0].length\n    const width = this.inputLayer.deltas[0][0].length\n    const type = typeof this.inputLayer.deltas[0][0][0]\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    )\n    debugger\n    if (depth !== this.inputLayer.deltas.length) debugger\n    if (height !== this.inputLayer.deltas[0].length) debugger\n    if (width !== this.inputLayer.deltas[0][0].length) debugger\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger\n  }\n}\n","import { Model } from './types'\nimport randos2D from '../utilities/randos-2d'\nimport zeros2D from '../utilities/zeros-2d'\n\nexport default class Random extends Model {\n  constructor(settings) {\n    super(settings)\n    this.validate()\n    this.weights = randos2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n","import Base from './base'\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings)\n    this.validate()\n  }\n\n  predict() {\n    this.weights = this.inputs\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x]\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\n","import { Activation } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport { activate, measure } from '../activation/relu'\nimport zeros2D from '../utilities/zeros-2d'\nimport zeros3D from '../utilities/zeros-3d'\n\nexport function predict(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x])\n}\n\nexport function compare(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  )\n}\n\nexport function predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x])\n}\n\nexport function compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  )\n}\n\nexport default class Relu extends Activation {\n  constructor(inputLayer) {\n    super()\n    this.inputLayer = inputLayer\n\n    const { width, height, depth } = inputLayer\n    this.width = width\n    this.height = height\n    this.validate()\n    if (depth > 1) {\n      this.depth = depth\n      this.weights = zeros3D(width, height, depth)\n      this.deltas = zeros3D(width, height, depth)\n    } else {\n      this.depth = 1\n      this.weights = zeros2D(width, height)\n      this.deltas = zeros2D(width, height)\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer\n    if (this.depth > 1) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      })\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      })\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [width, height],\n        functions: [activate],\n      })\n\n      this.compareKernel = makeKernel(compare, {\n        output: [width, height],\n        functions: [measure],\n      })\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas)\n  }\n}\n","import { Activation } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport { activate, measure } from '../activation/sigmoid'\nimport zeros2D from '../utilities/zeros-2d'\n\nexport function predict(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x])\n}\n\nexport function compare(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x]\n  const delta = deltas[this.thread.y][this.thread.x]\n  return measure(weight, delta)\n}\n\nexport default class Sigmoid extends Activation {\n  constructor(inputLayer) {\n    super()\n    this.inputLayer = inputLayer\n\n    const { width, height } = inputLayer\n    this.width = width\n    this.height = height\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      functions: [activate],\n    })\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      functions: [measure],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas)\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport { Filter } from './types'\nimport randos from '../utilities/randos'\nimport randos2D from '../utilities/randos-2d'\nimport randos3D from '../utilities/randos-3d'\nimport zeros from '../utilities/zeros'\nimport zeros2D from '../utilities/zeros-2d'\nimport zeros3D from '../utilities/zeros-3d'\n\nexport function getMaxValue(inputs) {\n  let maxInput = -Infinity\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x]\n    if (input > maxInput) {\n      maxInput = input\n    }\n  }\n  return maxInput\n}\n\nexport function getMaxValue2D(inputs) {\n  let maxInput = -Infinity\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x]\n      if (input > maxInput) {\n        maxInput = input\n      }\n    }\n  }\n  return maxInput\n}\n\nexport function getMaxValue3D(inputs) {\n  let maxInput = -Infinity\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x]\n        if (input > maxInput) {\n          maxInput = input\n        }\n      }\n    }\n  }\n  return maxInput\n}\n\nexport function getSum(inputs) {\n  let sum = 0\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x]\n  }\n  return sum\n}\n\nexport function getSum2D(inputs) {\n  let sum = 0\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x]\n    }\n  }\n  return sum\n}\n\nexport function getSum3D(inputs) {\n  let sum = 0\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x]\n      }\n    }\n  }\n  return sum\n}\n\nexport function getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  )\n}\n\nexport function getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  )\n}\n\nexport function getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  )\n}\n\nexport function predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  )\n}\n\nexport function predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  )\n}\n\nexport function predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  )\n}\n\nexport function compare(target, exponentials) {\n  let indicator = 0\n  if (this.thread.x === target) {\n    indicator = 1\n  }\n  return -(indicator - exponentials[this.thread.x])\n}\n\nexport function compare2D(target, exponentials) {\n  let indicator = 0\n  const index = this.thread.x + (this.thread.y * this.output.x)\n  if (index === target) {\n    indicator = 1\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x])\n}\n\nexport function compare3D(target, exponentials) {\n  let indicator = 0\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y)\n  if (index === target) {\n    indicator = 1\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x])\n}\n\nexport function loss(exponentials) {\n  return -Math.log()\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nexport default class SoftMax extends Filter {\n  constructor(inputLayer) {\n    super()\n    this.width = inputLayer.width\n    this.height = inputLayer.height\n    this.depth = inputLayer.depth\n    this.getExponentialsKernel = null\n    this.getMaxValueKernel = null\n    this.getSumKernel = null\n    this.inputLayer = inputLayer\n    this.validate()\n    if (this.height > 1) {\n      if (this.depth > 1) {\n        this.weights = randos3D(this.width, this.height, this.depth)\n        this.deltas = zeros3D(this.width, this.height, this.depth)\n      } else {\n        this.weights = randos2D(this.width, this.height)\n        this.deltas = zeros2D(this.width, this.height)\n      }\n    } else {\n      this.weights = randos(this.width)\n      this.deltas = zeros(this.width)\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this\n    if (depth > 1) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      })\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      })\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      })\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      })\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n      })\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      })\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      })\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      })\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      })\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n      })\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights)\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    )\n    const exponentialsSum = this.getSumKernel(exponentials)\n    this.weights = this.predictKernel(exponentials, exponentialsSum)\n  }\n\n  compare(targetValues) {\n    this.errors = this.compareKernel(targetValues[0], this.deltas)\n    this.deltas = this.errors\n    this.inputLayer.deltas = this.deltas\n  }\n}","import Base from './base'\n\nclass Regression extends Base {\n  predict() {\n    this.weights = this.inputs\n    this.validate()\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n","import { Activation } from './types'\nimport { makeKernel } from '../utilities/kernel'\nimport { tanhDerivative } from '../activation/tanh'\nimport zeros2D from '../utilities/zeros-2d'\n\nexport function predict(inputs) {\n  return Math.tanh(inputs[this.thread.y][this.thread.x])\n}\n\nexport function compare(weights, errors) {\n  return tanhDerivative(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  )\n}\n\nexport default class Tanh extends Activation {\n  constructor(inputLayer) {\n    super()\n    this.inputLayer = inputLayer\n\n    const { width, height, depth } = this.inputLayer\n    this.width = width\n    this.height = height\n    this.depth = depth\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    })\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      functions: [tanhDerivative],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas)\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport zeros from '../utilities/zeros';\nimport zeros2D from '../utilities/zeros-2d'\nimport zeros3D from '../utilities/zeros-3d';\nimport { Filter } from './types'\n\nfunction compare1D(weights, targetValues) {\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x]\n}\n\nfunction compare2D(weights, targetValues) {\n  return (\n    weights[this.thread.y][this.thread.x] -\n    targetValues[this.thread.y][this.thread.x]\n  )\n}\n\nexport default class Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings)\n    this.inputLayer = inputLayer\n    this.width = inputLayer.width\n    this.height = inputLayer.height\n    this.depth = inputLayer.depth\n    this.validate()\n    if (this.depth > 1) {\n      this.weights = zeros3D(this.width, this.height, this.depth)\n      this.deltas = zeros3D(this.width, this.height, this.depth)\n      this.errors = zeros3D(this.width, this.height, this.depth)\n    } else if (this.height > 1) {\n      this.weights = zeros2D(this.width, this.height)\n      this.deltas = zeros2D(this.width, this.height)\n      this.errors = zeros2D(this.width, this.height)\n    } else {\n      this.weights = zeros(this.width)\n      this.deltas = zeros(this.width)\n      this.errors = zeros(this.width)\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height]\n    })\n  }\n\n  predict() {\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    this.weights = this.inputLayer.weights\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    this.errors = this.compareKernel(this.weights, targetValues)\n    this.deltas = this.errors\n    this.inputLayer.deltas = this.deltas\n  }\n}\n","import { Modifier } from './types'\nimport { makeKernel } from '../utilities/kernel'\n\nfunction transpose(array) {\n  return array[this.thread.x][this.thread.y]\n}\n\nexport default class Transpose extends Modifier {\n  constructor(inputLayer) {\n    super()\n    this.inputLayer = inputLayer\n    this.width = this.inputLayer.height\n    this.height = this.inputLayer.width\n    this.validate()\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(transpose, {\n      output: [this.height, this.width],\n    })\n    this.compareKernel = makeKernel(transpose, {\n      output: [this.width, this.height],\n    })\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights)\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.predictKernel(this.deltas)\n  }\n}\n","import zeros2D from '../utilities/zeros-2d'\nimport { Model } from './types'\n\nexport default class Zeros extends Model {\n  constructor(settings) {\n    super(settings)\n    this.validate()\n    this.weights = zeros2D(this.width, this.height)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n","import Add from './add'\nimport Base from './base'\nimport Convolution from './convolution'\nimport Dropout from './dropout'\n// import feedForward from './feed-forward'\nimport FullyConnected from './fully-connected'\n// import gru from './gru'\nimport Input from './input'\nimport LeakyRelu from './leaky-relu'\n// import lstm from './lstm'\nimport Multiply from './multiply'\nimport MultiplyElement from './multiply-element'\nimport Negative from './negative'\nimport Ones from './ones'\n// import output from './output'\nimport Pool from './pool'\nimport Random from './random'\n// import recurrent from './recurrent'\nimport Regression from './regression'\nimport Relu from './relu'\nimport Sigmoid from './sigmoid'\nimport SoftMax from './soft-max'\nimport SVM from './svm'\nimport Tanh from './tanh'\nimport Target from './target'\nimport Transpose from './transpose'\nimport Zeros from './zeros'\n\nfunction add(inputLayer1, inputLayer2) {\n  return new Add(inputLayer1, inputLayer2)\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer)\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer)\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer)\n}\n\nfunction input(settings) {\n  return new Input(settings)\n}\n\nfunction leakyRelu(inputLayer) {\n  return new LeakyRelu(inputLayer)\n}\n\nfunction multiply(inputLayer1, inputLayer2) {\n  return new Multiply(inputLayer1, inputLayer2)\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2)\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer)\n}\n\nfunction ones(settings) {\n  return new Ones(settings)\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer)\n}\n\nfunction random(settings) {\n  return new Random(settings)\n}\n\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer)\n}\n\nfunction relu(inputLayer) {\n  return new Relu(inputLayer)\n}\n\nfunction sigmoid(inputLayer) {\n  return new Sigmoid(inputLayer)\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer)\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer)\n}\n\nfunction tanh(inputLayer) {\n  return new Tanh(inputLayer)\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer)\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer)\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings)\n}\n\nexport {\n  Add,\n  add,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  // feedForward,\n  FullyConnected,\n  fullyConnected,\n  // gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  // lstm,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  // output,\n  Pool,\n  pool,\n  Random,\n  random,\n  // recurrent,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n}\n","/**\n *\n * @param {*} input\n * @param {NeuralNetwork} net\n * @returns {*}\n */\nexport default function likely(input, net) {\n  const output = net.run(input)\n  let maxProp = null\n  let maxValue = -1\n\n  Object.keys(output).forEach(key => {\n    const value = output[key]\n    if (value > maxValue) {\n      maxProp = key\n      maxValue = value\n    }\n  })\n\n  return maxProp\n}\n","/* Functions for turning sparse hashes into arrays and vice versa */\nexport default class lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static buildLookup(hashes) {\n    const reducedHash = hashes.reduce(\n      (memo, hash) => Object.assign(memo, hash),\n      {}\n    )\n\n    return lookup.lookupFromHash(reducedHash)\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static lookupFromHash(hash) {\n    const lookupHash = {}\n    let index = 0\n\n    Object.keys(hash).forEach(i => {\n      index += 1\n      lookupHash[i] = index\n    })\n\n    return lookupHash\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookup\n   * @param {*} hash\n   * @returns {Array}\n   */\n  static toArray(lookupHash, hash) {\n    const array = []\n\n    Object.keys(lookupHash).forEach(i => {\n      array[lookupHash[i]] = hash[i] || 0\n    })\n\n    return array\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookupHash\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toHash(lookupHash, array) {\n    const hash = {}\n\n    Object.keys(lookupHash).forEach(i => {\n      hash[i] = array[lookupHash[i]]\n    })\n\n    return hash\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    const lookupHash = {}\n    let z = 0\n    let i = array.length\n\n    while (i-- > 0) {\n      lookupHash[array[i]] = z++\n    }\n\n    return lookupHash\n  }\n}\n","import { makeKernel } from '../utilities/kernel'\nimport zeros2D from '../utilities/zeros-2d'\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta\n}\n\nexport function clipByValue(value, max, min) {\n  if (value > max) {\n    return max\n  }\n  if (value < min) {\n    return min\n  }\n  return value\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction momentumRootMeanSquaredPropagation(\n  weights,\n  deltas,\n  previousMomentums\n) {\n  const delta = deltas[this.thread.y][this.thread.x]\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  )\n  const weight = weights[this.thread.y][this.thread.x]\n  const previousMomentum = previousMomentums[this.thread.y][this.thread.x]\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  )\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  )\n}\n\nexport function isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1\n  }\n  if (value < min) {\n    return 1\n  }\n  return 0\n}\n\nexport default class MomentumRootMeanSquaredPropagation {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.000001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5,\n    }\n  }\n\n  constructor(layer, settings = {}) {\n    this.layer = layer\n    this.width = layer.width\n    this.height = layer.height\n    this.momentums = zeros2D(layer.width, layer.height)\n    Object.assign(this, this.constructor.defaults, settings)\n    this.setupKernels()\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas, this.momentums)\n    this.momentums = output.momentums\n    return output.result\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(momentumRootMeanSquaredPropagation, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momentums: getMomentum,\n      },\n    })\n  }\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation\n\nexport { getMomentum, MRmsProp }\n","import MomentumRootMeanSquaredPropagation, {\n  MRmsProp,\n} from './momentum-root-mean-squared-propagation'\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings)\n}\n\nconst mRmsProp = momentumRootMeanSquaredPropagation\nexport {\n  MomentumRootMeanSquaredPropagation,\n  momentumRootMeanSquaredPropagation,\n  MRmsProp,\n  mRmsProp,\n}\n","export default function mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0\n  const length = errors.length * errors[0].length\n  for (let y = 0; y < errors.length; y++) {\n    for (let x = 0; x < errors[y].length; x++) {\n      sum += errors[y][x] ** 2\n    }\n  }\n  return sum / length\n}\n","const layer = require('../layer')\n\nexport default function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null\n  const Layer = layer[jsonLayer.type]\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p]\n    }\n  })\n\n  return realLayer\n}\n","export default function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb)\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb)\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb)\n    }\n  }\n  cb(layer)\n}\n","import traverseLayersFrom from './traverse-layers-from'\n\nexport default function flattenLayers(layers) {\n  const result = layers.slice(0)\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer)\n        offset++\n      }\n    })\n  }\n  return result\n}\n","import lookup from './lookup'\n// import TrainStream from './train-stream'\nimport mse2d from './utilities/mse-2d'\nimport layerFromJSON from './utilities/layer-from-json'\nimport * as praxis from './praxis'\nimport flattenLayers from './utilities/flatten-layers'\n\nexport default class FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      reinforce: false,\n    }\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxis: layer => praxis.momentumRootMeanSquaredPropagation(layer),\n    }\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    }\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        )\n      }\n    })\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt]\n    })\n    this.constructor._validateTrainingOptions(this.trainOpts)\n    this._setLogMethod(opts.log || this.trainOpts.log)\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n    }\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.inputLayer = null\n    this.hiddenLayers = null\n    this.outputLayer = null\n    this.errorCheckInterval = 100\n    Object.assign(this, this.constructor.defaults, options)\n    this.trainOpts = {}\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    )\n    Object.assign(this, this.constructor.structure)\n  }\n\n  _connectLayers() {\n    const layers = []\n    this._inputLayer = this.inputLayer()\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer)\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    )\n    layers.push(this._inputLayer)\n    layers.push(...hiddenLayers)\n    layers.push(this._outputLayer)\n    this.layers = flattenLayers(layers)\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = []\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i)\n      hiddenLayers.push(hiddenLayer)\n      previousLayer = hiddenLayer\n    }\n    return hiddenLayers\n  }\n\n  initialize() {\n    this._connectLayers()\n    this.initializeLayers(this.layers)\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i]\n      layer.setupKernels()\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\n        layer.praxis = this.praxis(layer)\n      }\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input)\n    }\n\n    let output = this.runInput(input)\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output)\n    }\n    return output\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input)\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict()\n    }\n    return this.layers[this.layers.length - 1].weights\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status\n    let endTime\n    ;({ data, status, endTime } = this._prepTraining(data, options))\n\n    while (this._trainingTick(data, status, endTime));\n    return status\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false\n    }\n\n    status.iterations++\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data)\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      )\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data)\n    } else {\n      this._trainPatterns(data)\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status))\n    }\n    return true\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options)\n    data = this._formatData(data)\n    const endTime = Date.now() + this.trainOpts.timeout\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    }\n\n    this.initialize()\n\n    return {\n      data,\n      status,\n      endTime,\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true)\n    }\n    return sum / data.length\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false)\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input)\n\n    // back propagate\n    this._calculateDeltas(target)\n    this._adjustWeights()\n\n    if (logErrorRate) {\n      return mse2d(\n        this._outputLayer.errors.hasOwnProperty('toArray')\n          ? this._outputLayer.errors.toArray()\n          : this._outputLayer.errors\n      )\n    }\n    return null\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target)\n    }\n  }\n\n  /**\n   *\n   */\n  _adjustWeights() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].learn(\n        this.layers[i - 1],\n        this.layers[i + 1],\n        this.trainOpts.learningRate\n      )\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = []\n      tmp.push(data)\n      data = tmp\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const datum = data[0].input\n    if (!Array.isArray(datum) && !(datum instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input))\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input)\n        return Object.assign({}, datumParam, { input: array })\n      }, this)\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output))\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output)\n        return Object.assign({}, datumParam, { output: array })\n      }, this)\n    }\n    return data\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`)\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    const jsonLayers = []\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i]\n      const jsonLayer = layer.toJSON()\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer)\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1)\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2)\n      }\n      jsonLayers.push(jsonLayer)\n    }\n    return {\n      layers: jsonLayers,\n    }\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers\n    const layers = []\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0])\n    layers.push(inputLayer)\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i]\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex]\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        )\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error('inputLayer1Index not defined')\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error('inputLayer2Index not defined')\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index]\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index]\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer1Index} not found`\n          )\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer2Index} not found`\n          )\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        )\n      }\n    }\n\n    const net = new FeedForward(json)\n    net.layers = layers\n    return net\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    )\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    )\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.thaw = thaw;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//private variables\nvar thawing = false;\nvar thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\n\nvar Thaw = function () {\n  _createClass(Thaw, null, [{\n    key: \"stopAll\",\n\n\n    /**\n     * Stops all Thaw instances\n     */\n    value: function stopAll() {\n      for (var i = 0; i < thaws.length; i++) {\n        thaws[i].stop();\n      }\n    }\n  }, {\n    key: \"defaultSettings\",\n\n    /**\n     *\n     * @type {{each: null, done: null}}\n     */\n    get: function get() {\n      return {\n        each: null,\n        done: null\n      };\n    }\n\n    /**\n     * returns if Thaw.js is thawing\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isThawing\",\n    get: function get() {\n      return thawing;\n    }\n  }]);\n\n  function Thaw(items) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Thaw);\n\n    var _constructor$defaultS = _extends({}, this.constructor.defaultSettings, options),\n        each = _constructor$defaultS.each,\n        done = _constructor$defaultS.done;\n\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    var tick = this.tick = function () {\n      if (_this.i < 0) return;\n\n      _this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      var item = items[_this.i];\n      if (_this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, _this.i);\n          thawing = false;\n        }\n\n        _this.i = -1;\n        clearTimeout(_this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, _this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      _this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n\n\n  _createClass(Thaw, [{\n    key: \"makeReady\",\n    value: function makeReady() {\n      if (this.i < 0) {\n        this.i = this.items.length;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      var doTick = this.makeReady();\n\n      this.items.push(item);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item) {\n      var doTick = this.makeReady();\n\n      this.items.splice(this.i, 0, item);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"addArray\",\n    value: function addArray(items) {\n      var doTick = this.makeReady();\n\n      this.items = this.items.concat(items);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insertArray\",\n    value: function insertArray(items) {\n      var doTick = this.makeReady();\n      var left = this.items;\n      var middle = items;\n      var right = this.items.splice(this.i, this.items.length - this.i + 1);\n\n      this.items = left.concat(middle, right);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Stops this instance of Thaw\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.i = -1;\n      clearTimeout(this.timeout);\n      if (this.options.done) {\n        this.options.done();\n      }\n      return this;\n    }\n  }]);\n\n  return Thaw;\n}();\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\n\n\nexports.default = Thaw;\nfunction thaw(items) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return new Thaw(items, options);\n}\n//# sourceMappingURL=thaw.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nvar Block = function () {\n  function Block(options, count) {\n    _classCallCheck(this, Block);\n\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n\n\n  _createClass(Block, [{\n    key: 'add',\n    value: function add(item) {\n      var next = this._next();\n      next.add(item);\n\n      return this;\n    }\n\n    /**\n     * add an Array to the end of items\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'addArray',\n    value: function addArray(items) {\n      var next = this._next();\n      next.addArray(items);\n\n      return this;\n    }\n\n    /**\n     * insert an item into items @ current position\n     * @param item\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insert',\n    value: function insert(item) {\n      var next = this._next();\n      next.insert(item);\n\n      return this;\n    }\n\n    /**\n     * insert and array into items @ current position\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insertArray',\n    value: function insertArray(items) {\n      var next = this._next();\n      next.insertArray(items);\n\n      return this;\n    }\n\n    /**\n     * Stops all thaws in this block\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      for (var i = 0; i < this.thaws.length; i++) {\n        this.thaws[i].stop();\n      }\n      return this;\n    }\n\n    /**\n     * Get next available in block\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_next',\n    value: function _next() {\n      var thaw = null;\n      var thaws = this.thaws;\n\n      if (thaws.length < this.count) {\n        thaws.push(thaw = new _2.default([], this.options));\n      } else {\n        thaw = thaws[this.index];\n      }\n      this.index++;\n      if (this.index >= this.count) {\n        this.index = 0;\n      }\n\n      return thaw;\n    }\n  }]);\n\n  return Block;\n}();\n\nexports.default = Block;\n;\n//# sourceMappingURL=block.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Block = undefined;\n\nvar _thaw = require('./thaw');\n\nvar _thaw2 = _interopRequireDefault(_thaw);\n\nvar _block = require('./block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _thaw2.default;\nexports.Block = _block2.default;\n\n\nif (typeof window !== 'undefined') {\n  window.Thaw = _thaw2.default;\n  window.Thaw.Block = _block2.default;\n}\n//# sourceMappingURL=index.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","import { Writable } from 'stream'\nimport lookup from './lookup'\n\n/**\n *\n * https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n * @param arr\n * @returns {Array}\n */\nfunction uniques(arr) {\n  // Sets cannot contain duplicate elements, which is what we want\n  return [...new Set(arr)]\n}\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nexport default class TrainStream extends Writable {\n  constructor(opts) {\n    super({\n      objectMode: true,\n    })\n\n    opts = opts || {}\n\n    // require the neuralNetwork\n    if (!opts.neuralNetwork) {\n      throw new Error('no neural network specified')\n    }\n\n    this.neuralNetwork = opts.neuralNetwork\n    this.dataFormatDetermined = false\n\n    this.inputKeys = []\n    this.outputKeys = [] // keeps track of keys seen\n    this.i = 0 // keep track of the for loop i variable that we got rid of\n    this.iterations = opts.iterations || 20000\n    this.errorThresh = opts.errorThresh || 0.005\n    // eslint-disable-next-line\n    this.log = opts.log\n      ? typeof opts.log === 'function'\n        ? opts.log\n        : console.log //eslint-disable-line\n      : false\n    this.logPeriod = opts.logPeriod || 10\n    this.callback = opts.callback\n    this.callbackPeriod = opts.callbackPeriod || 10\n    this.floodCallback = opts.floodCallback\n    this.doneTrainingCallback = opts.doneTrainingCallback\n\n    this.size = 0\n    this.count = 0\n\n    this.sum = 0\n\n    this.on('finish', this.finishStreamIteration.bind(this))\n\n    return this\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish')\n      return next()\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++\n      this.inputKeys = uniques(\n        this.inputKeys.slice(0).concat(Object.keys(chunk.input))\n      )\n      this.outputKeys = uniques(\n        this.outputKeys.slice(0).concat(Object.keys(chunk.output))\n      )\n      this.firstDatum = this.firstDatum || chunk\n      return next()\n    }\n\n    this.count++\n\n    const data = this.neuralNetwork.formatData(chunk)\n    this.trainDatum(data[0])\n\n    // tell the Readable Stream that we are ready for more data\n    return next()\n  }\n\n  /**\n   *\n   * @param datum\n   */\n  trainDatum(datum) {\n    const err = this.neuralNetwork.trainPattern(datum.input, datum.output)\n    this.sum += err\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log(\"This iteration's data length was different from the first.\")\n    }\n\n    if (!this.dataFormatDetermined) {\n      // create the lookup\n      this.neuralNetwork.inputLookup = lookup.lookupFromArray(this.inputKeys)\n      if (!Array.isArray(this.firstDatum.output)) {\n        this.neuralNetwork.outputLookup = lookup.lookupFromArray(\n          this.outputKeys\n        )\n      }\n\n      const data = this.neuralNetwork.formatData(this.firstDatum)\n      const sizes = []\n      const inputSize = data[0].input.length\n      const outputSize = data[0].output.length\n      const { hiddenSizes } = this\n\n      if (!hiddenSizes) {\n        sizes.push(Math.max(3, Math.floor(inputSize / 2)))\n      } else {\n        hiddenSizes.forEach(size => {\n          sizes.push(size)\n        })\n      }\n\n      sizes.unshift(inputSize)\n      sizes.push(outputSize)\n\n      this.dataFormatDetermined = true\n      this.neuralNetwork.initialize(sizes)\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback()\n      }\n      return\n    }\n\n    const error = this.sum / this.size\n\n    if (this.log && this.i % this.logPeriod === 0) {\n      this.log('iterations:', this.i, 'training error:', error)\n    }\n    if (this.callback && this.i % this.callbackPeriod === 0) {\n      this.callback({\n        error,\n        iterations: this.i,\n      })\n    }\n\n    this.sum = 0\n    this.count = 0\n    // update the iterations\n    this.i++\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        // eslint-disable-next-line\n        return this.floodCallback()\n      }\n    }\n    // done training\n    else if (typeof this.doneTrainingCallback === 'function') {\n      // eslint-disable-next-line\n      return this.doneTrainingCallback({\n        error,\n        iterations: this.i,\n      })\n    }\n  }\n}\n","/**\n *\n * @param values\n * @returns {*}\n */\nexport default function toArray(values) {\n  if (Array.isArray(values)) {\n    return values\n  }\n  return new Float32Array(Object.values(values))\n}\n","import toArray from './to-array'\n/**\n *\n * @param values\n * @returns {number}\n */\nexport default function max(values) {\n  return Math.max(...toArray(values))\n}\n","export default function mse(errors) {\n  // mean squared error\n  let sum = 0\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2\n  }\n  return sum / errors.length\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nexport default function range(start, end) {\n  const result = []\n  for (; start < end; start++) {\n    result.push(start)\n  }\n  return result\n}\n","import Thaw from 'thaw.js'\nimport lookup from './lookup'\nimport TrainStream from './train-stream'\nimport max from './utilities/max'\nimport mse from './utilities/mse'\nimport randos from './utilities/randos'\nimport range from './utilities/range'\nimport toArray from './utilities/to-array'\nimport zeros from './utilities/zeros'\n\n/**\n * @param {object} options\n * @constructor\n */\nexport default class NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000, // the maximum times to iterate the training data\n      errorThresh: 0.005, // the acceptable error percentage from training data\n      log: false, // true to use console.log, when a function is supplied it is used\n      logPeriod: 10, // iterations between logging out\n      learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null, // a periodic call back that can be triggered while training\n      callbackPeriod: 10, // the number of iterations through the training data between callback calls\n      timeout: Infinity, // the max number of milliseconds to train for\n    }\n  }\n\n  static get defaults() {\n    return {\n      binaryThresh: 0.5, // ¯\\_(ツ)_/¯\n      hiddenLayers: [3], // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid', // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    }\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      momentum: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    }\n    Object.keys(NeuralNetwork.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        )\n      }\n    })\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options)\n    this.hiddenSizes = options.hiddenLayers\n    this.trainOpts = {}\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    )\n\n    this.sizes = null\n    this.outputLayer = null\n    this.biases = null // weights for bias nodes\n    this.weights = null\n    this.outputs = null\n\n    // state for training\n    this.deltas = null\n    this.changes = null // for momentum\n    this.errors = null\n    this.errorCheckInterval = 1\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  _initialize() {\n    if (!this.sizes) throw new Error('Sizes must be set before initializing')\n\n    this.outputLayer = this.sizes.length - 1\n    this.biases = [] // weights for bias nodes\n    this.weights = []\n    this.outputs = []\n\n    // state for training\n    this.deltas = []\n    this.changes = [] // for momentum\n    this.errors = []\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer]\n      this.deltas[layer] = zeros(size)\n      this.errors[layer] = zeros(size)\n      this.outputs[layer] = zeros(size)\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size)\n        this.weights[layer] = new Array(size)\n        this.changes[layer] = new Array(size)\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1]\n          this.weights[layer][node] = randos(prevSize)\n          this.changes[layer][node] = zeros(prevSize)\n        }\n      }\n    }\n\n    this.setActivation()\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation || this.activation\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasSigmoid\n        break\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu\n        break\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasLeakyRelu\n        break\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh\n        break\n      default:\n        throw new Error(\n          `unknown activation ${\n            this.activation\n          }, The activation should be one of ['sigmoid', 'relu', 'leaky-relu', 'tanh']`\n        )\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (!this.runInput) {\n      console.error(\n        'Activation function has not been initialized, did you run train()?'\n      )\n      return false\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter(c => this[c] === null)\n\n    if (checkFns.length > 0) {\n      console.error(\n        `Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(\n          ', '\n        )}`\n      )\n      return false\n    }\n    return true\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input)\n    }\n\n    let output = [...this.runInput(input)]\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output)\n    }\n    return output\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input // set output state of input layer\n\n    let output = null\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node]\n\n        let sum = this.biases[layer][node]\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k]\n        }\n        // sigmoid\n        this.outputs[layer][node] = 1 / (1 + Math.exp(-sum))\n      }\n      input = this.outputs[layer]\n      output = input\n    }\n    return output\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input // set output state of input layer\n\n    let output = null\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node]\n\n        let sum = this.biases[layer][node]\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k]\n        }\n        // relu\n        this.outputs[layer][node] = sum < 0 ? 0 : sum\n      }\n      input = this.outputs[layer]\n      output = input\n    }\n    return output\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input // set output state of input layer\n\n    let output = null\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node]\n\n        let sum = this.biases[layer][node]\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k]\n        }\n        // leaky relu\n        this.outputs[layer][node] = sum < 0 ? 0 : 0.01 * sum\n      }\n      input = this.outputs[layer]\n      output = input\n    }\n    return output\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input // set output state of input layer\n\n    let output = null\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node]\n\n        let sum = this.biases[layer][node]\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k]\n        }\n        // tanh\n        this.outputs[layer][node] = Math.tanh(sum)\n      }\n      input = this.outputs[layer]\n      output = input\n    }\n    return output\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  _verifyIsInitialized(data) {\n    if (this.sizes) return\n\n    this.sizes = []\n    this.sizes.push(data[0].input.length)\n    if (!this.hiddenSizes) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)))\n    } else {\n      this.hiddenSizes.forEach(size => {\n        this.sizes.push(size)\n      })\n    }\n    this.sizes.push(data[0].output.length)\n\n    this._initialize()\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(NeuralNetwork.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt]\n\n      return this.trainOpts[opt]\n    })\n    NeuralNetwork._validateTrainingOptions(this.trainOpts)\n    this._setLogMethod(opts.log || this.trainOpts.log)\n    this.activation = opts.activation || this.activation\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  _getTrainOptsJSON() {\n    return Object.keys(NeuralNetwork.trainDefaults).reduce((opts, opt) => {\n      if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts\n      if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt]\n      if (opt === 'log') opts.log = typeof opts.log === 'function'\n      return opts\n    }, {})\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log\n    } else if (log) {\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true)\n    }\n    return sum / data.length\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false)\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false\n    }\n\n    status.iterations++\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data)\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      )\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data)\n    } else {\n      this._trainPatterns(data)\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status))\n    }\n    return true\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options)\n    data = this._formatData(data)\n    const endTime = Date.now() + this.trainOpts.timeout\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    }\n\n    this._verifyIsInitialized(data)\n\n    return {\n      data,\n      status,\n      endTime,\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status\n    let endTime\n    ;({ data, status, endTime } = this._prepTraining(data, options))\n\n    while (this._trainingTick(data, status, endTime));\n    return status\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status\n    let endTime\n    ;({ data, status, endTime } = this._prepTraining(data, options))\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () =>\n            this._trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status),\n        })\n        thawedTrain.tick()\n      } catch (trainError) {\n        reject(new Error({ trainError, status }))\n      }\n    })\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input)\n\n    // back propagate\n    this.calculateDeltas(target)\n    this._adjustWeights()\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer])\n    }\n    return null\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node]\n\n        let error = 0\n        if (layer === this.outputLayer) {\n          error = target[node] - output\n        } else {\n          const deltas = this.deltas[layer + 1]\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node]\n          }\n        }\n        this.errors[layer][node] = error\n        this.deltas[layer][node] = error * output * (1 - output)\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node]\n\n        let error = 0\n        if (layer === this.outputLayer) {\n          error = target[node] - output\n        } else {\n          const deltas = this.deltas[layer + 1]\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node]\n          }\n        }\n        this.errors[layer][node] = error\n        this.deltas[layer][node] = output > 0 ? error : 0\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node]\n\n        let error = 0\n        if (layer === this.outputLayer) {\n          error = target[node] - output\n        } else {\n          const deltas = this.deltas[layer + 1]\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node]\n          }\n        }\n        this.errors[layer][node] = error\n        this.deltas[layer][node] = output > 0 ? error : 0.01 * error\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node]\n\n        let error = 0\n        if (layer === this.outputLayer) {\n          error = target[node] - output\n        } else {\n          const deltas = this.deltas[layer + 1]\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node]\n          }\n        }\n        this.errors[layer][node] = error\n        this.deltas[layer][node] = (1 - output * output) * error\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  _adjustWeights() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1]\n\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const delta = this.deltas[layer][node]\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = this.changes[layer][node][k]\n\n          change =\n            this.trainOpts.learningRate * delta * incoming[k] +\n            this.trainOpts.momentum * change\n\n          this.changes[layer][node][k] = change\n          this.weights[layer][node][k] += change\n        }\n        this.biases[layer][node] += this.trainOpts.learningRate * delta\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = []\n      tmp.push(data)\n      data = tmp\n    }\n    // turn sparse hash input into arrays with 0s as filler\n    const datumCheck = data[0].input\n    if (!Array.isArray(datumCheck) && !(datumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input))\n      }\n      data = data.map(datum => {\n        const array = lookup.toArray(this.inputLookup, datum.input)\n        return Object.assign({}, datum, { input: array })\n      }, this)\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output))\n      }\n      data = data.map(datum => {\n        const array = lookup.toArray(this.outputLookup, datum.output)\n        return Object.assign({}, datum, { output: array })\n      }, this)\n    }\n    return data\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    data = this._formatData(data)\n\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1\n    let falsePos = 0\n    let falseNeg = 0\n    let truePos = 0\n    let trueNeg = 0\n\n    // for classification problems\n    const misclasses = []\n\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let sum = 0\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input)\n      const target = data[i].output\n\n      let actual\n      let expected\n      if (isBinary) {\n        actual = output[0] > this.binaryThresh ? 1 : 0\n        // eslint-disable-next-line\n        expected = target[0]\n      } else {\n        actual = output.indexOf(max(output))\n        expected = target.indexOf(max(target))\n      }\n\n      if (actual !== expected) {\n        const misclass = data[i]\n        Object.assign(misclass, {\n          actual,\n          expected,\n        })\n        misclasses.push(misclass)\n      }\n\n      if (isBinary) {\n        if (actual === 0 && expected === 0) {\n          trueNeg++\n        } else if (actual === 1 && expected === 1) {\n          truePos++\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++\n        } else if (actual === 1 && expected === 0) {\n          falsePos++\n        }\n      }\n\n      const errors = output.map((value, j) => target[j] - value)\n      sum += mse(errors)\n    }\n    const error = sum / data.length\n\n    const stats = {\n      error,\n      misclasses,\n    }\n\n    if (isBinary) {\n      Object.assign(stats, {\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        total: data.length,\n        precision: truePos / (truePos + falsePos),\n        recall: truePos / (truePos + falseNeg),\n        accuracy: (trueNeg + truePos) / data.length,\n      })\n    }\n    return stats\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    const layers = []\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = []\n\n      let nodes\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup)\n      } else if (layer === this.outputLayer && this.outputLookup) {\n        nodes = Object.keys(this.outputLookup)\n      } else {\n        nodes = range(0, this.sizes[layer])\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j]\n        layers[layer][node] = {}\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j]\n          layers[layer][node].weights = []\n\n          Object.keys(layers[layer - 1]).forEach(k => {\n            let index = k\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k]\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index]\n          })\n        }\n      }\n    }\n    return {\n      sizes: this.sizes,\n      layers,\n      outputLookup: !!this.outputLookup,\n      inputLookup: !!this.inputLookup,\n      activation: this.activation,\n      trainOpts: this._getTrainOptsJSON(),\n    }\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    this.sizes = json.sizes\n    this._initialize()\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      const layer = json.layers[i]\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.lookupFromHash(layer)\n      } else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.lookupFromHash(layer)\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer)\n        this.sizes[i] = nodes.length\n\n        Object.keys(nodes).forEach(j => {\n          const node = nodes[j]\n          this.biases[i][j] = layer[node].bias\n          this.weights[i][j] = toArray(layer[node].weights)\n        })\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this._updateTrainingOptions(json.trainOpts)\n    }\n    this.setActivation(this.activation || 'sigmoid')\n    return this\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const { activation } = this\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `input['${nodeKey}']`\n          : `input[${nodeKey}]`\n      }\n\n      const layer = layers[layerNumber]\n      const node = layer[nodeKey]\n      const result = [node.bias]\n\n      Object.keys(node.weights).forEach(w => {\n        if (node.weights[w] < 0) {\n          result.push(\n            `${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`\n          )\n        } else {\n          result.push(\n            `+${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`\n          )\n        }\n      })\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`\n        case 'relu':\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : sum);`\n        case 'leaky-relu':\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : 0.01 * sum);`\n        case 'tanh':\n          return `Math.tanh(${result.join('')});`\n        default:\n          throw new Error(`unknown activation type ${activation}`)\n      }\n    }\n\n    const { layers } = this.toJSON()\n    const layersAsMath = []\n    let result\n\n    Object.keys(layers[layers.length - 1]).forEach(l => {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, l))\n    })\n\n    if (this.outputLookup) {\n      result = `{${Object.keys(this.outputLookup).map(\n        (key, i) => `'${key}':${layersAsMath[i]}`\n      )}}`\n    } else {\n      result = `[${layersAsMath.join(',')}]`\n    }\n    // eslint-disable-next-line\n    return new Function('input', `return ${result}`)\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream(opts) {\n    opts = opts || {}\n    opts.neuralNetwork = this\n    this.setActivation()\n    this.trainStream = new TrainStream(opts)\n    return this.trainStream\n  }\n}\n","import GPU from 'gpu.js'\nimport NeuralNetwork from './neural-network'\nimport lookup from './lookup'\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x]\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k]\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum))\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x]\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k]\n  }\n  // relu\n  return sum < 0 ? 0 : sum\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x]\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k]\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x]\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k]\n  }\n  // tanh\n  return Math.tanh(sum)\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output)\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x]\n  }\n  return error\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  )\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x]\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  )\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2\n  }\n  return sum / this.constants.size\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nexport default class NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options)\n    this.forwardPropagate = []\n    this.backwardPropagate = []\n    this.changesPropagate = []\n    this.biasesPropagate = []\n    this.biasCopies = []\n    this.copyBias = []\n    this.changesCopies = []\n    this.copyChanges = []\n    this.weightsCopies = []\n    this.copyWeights = []\n    this.errorCheckInterval = 100\n    this.gpu = new GPU({ mode: options.mode })\n  }\n\n  /**\n   *\n   */\n  _initialize() {\n    super._initialize()\n    this.buildRunInput()\n    this.buildCalculateDeltas()\n    this.buildGetChanges()\n    this.buildChangeBiases()\n    this.buildGetMSE()\n  }\n\n  setActivation() {\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    )\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input)\n\n    // backward propagate\n    this.calculateDeltas(target)\n    this.getChanges()\n    this.changeBiases()\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer])[0]\n    }\n    return null\n  }\n\n  buildRunInput() {\n    let weightedSum = null\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid\n        break\n      case 'relu':\n        weightedSum = weightedSumRelu\n        break\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu\n        break\n      case 'tanh':\n        weightedSum = weightedSumTanh\n        break\n      default:\n        throw new Error(`unknown activation ${this.activation}`)\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n      })\n    }\n\n    this._texturizeInputData = this.gpu.createKernel(\n      value => value[this.thread.x],\n      {\n        output: [this.sizes[1]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true,\n      }\n    )\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output\n    this.outputs[0] = input\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      )\n      input = this.outputs[layer]\n      output = input\n    }\n    return output\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null\n\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid\n        break\n      case 'relu':\n        calcDeltas = calcDeltasRelu\n        break\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu\n        break\n      case 'tanh':\n        calcDeltas = calcDeltasTanh\n        break\n      default:\n        throw new Error(`unknown activation ${this.activation}`)\n    }\n\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: GPU.alias('calcErrorOutput', calcErrorOutput),\n            deltas: GPU.alias('calcDeltas', calcDeltas),\n          },\n          (outputs, targets) => {\n            const output = outputs[this.thread.x]\n            return calcDeltas(calcErrorOutput(output, targets), output)\n          },\n          {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true,\n          }\n        )\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: GPU.alias('calcError', calcError),\n            deltas: GPU.alias('calcDeltas', calcDeltas),\n          },\n          (nextWeights, outputs, nextDeltas) => {\n            const output = outputs[this.thread.x]\n            return calcDeltas(calcError(nextWeights, nextDeltas), output)\n          },\n          {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true,\n            constants: {\n              size: this.deltas[layer + 1].length,\n            },\n          }\n        )\n      }\n    }\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](this.outputs[layer], target)\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        )\n      }\n\n      this.deltas[layer] = output.deltas\n      this.errors[layer] = output.error\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: GPU.alias('addWeights', addWeights),\n          changes: GPU.alias('calcChanges', calcChanges),\n        },\n        (previousOutputs, deltas, weights, changes) => {\n          const change = calcChanges(changes, deltas, previousOutputs)\n\n          return addWeights(change, weights)\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n        }\n      )\n\n      this.copyChanges[layer] = this.gpu.createKernel(\n        value => value[this.thread.y][this.thread.x],\n        {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true,\n        }\n      )\n\n      this.copyWeights[layer] = this.gpu.createKernel(\n        value => value[this.thread.y][this.thread.x],\n        {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true,\n        }\n      )\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        this.weightsCopies[layer] || this.weights[layer],\n        this.changesCopies[layer] || this.changes[layer]\n      )\n      this.changes[layer] = output.changes\n      this.weights[layer] = output.weights\n\n      this.changesCopies[layer] = this.copyChanges[layer](output.changes)\n      this.weightsCopies[layer] = this.copyWeights[layer](output.weights)\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n      })\n      this.copyBias[layer] = this.gpu.createKernel(\n        value => value[this.thread.x],\n        {\n          output: this.biasesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true,\n        }\n      )\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biases[layer] = this.biasesPropagate[layer](\n        this.biasCopies[layer] || this.biases[layer],\n        this.deltas[layer]\n      )\n      this.biasCopies[layer] = this.copyBias[layer](this.biases[layer])\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      hardcodeConstants: true,\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n    })\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input)\n    }\n    const inputTexture = this._texturizeInputData(input)\n    const outputTextures = this.runInput(inputTexture)\n    let output = outputTextures.toArray(this.gpu)\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output)\n    }\n    return output\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  _verifyIsInitialized(data) {\n    if (this.sizes) return\n\n    this.sizes = []\n    if (!data[0].size) {\n      data[0].size = {\n        input: data[0].input.length,\n        output: data[0].output.length,\n      }\n    }\n\n    this.sizes.push(data[0].size.input)\n    if (!this.hiddenSizes) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].size.input / 2)))\n    } else {\n      this.hiddenSizes.forEach(size => {\n        this.sizes.push(size)\n      })\n    }\n    this.sizes.push(data[0].size.output)\n\n    this._initialize()\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options)\n    data = this._formatData(data)\n    const endTime = Date.now() + this.trainOpts.timeout\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    }\n\n    this._verifyIsInitialized(data)\n\n    const texturizeOutputData = this.gpu.createKernel(\n      value => value[this.thread.x],\n      {\n        output: [data[0].output.length],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true,\n      }\n    )\n\n    return {\n      data: data.map(set => ({\n        size: set.size,\n        input: this._texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    }\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    )\n  }\n}\n","import { Internal } from './types'\nimport zeros2D from '../utilities/zeros-2d'\n\nexport default class RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer\n  }\n\n  get width() {\n    return this.layer.width\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`)\n  }\n\n  get height() {\n    return this.layer.height\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`)\n  }\n\n  get deltas() {\n    return this.layer.deltas\n  }\n\n  set deltas(deltas) {\n    this.layer.deltas = deltas\n  }\n\n  get weights() {\n    return this.layer.weights\n  }\n\n  set weights(weights) {\n    this.layer.weights = weights\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.layer.deltas = zeros2D(this.width, this.height)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","// import zeros2D from '../utilities/zeros-2d'\nimport { Internal } from './types'\nimport Base from './base'\n\nexport default class RecurrentInput extends Internal {\n  setRecurrentInput(recurrentInput) {\n    this.recurrentInput = recurrentInput\n    this.validate()\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas\n  }\n\n  set deltas(deltas) {\n    this.recurrentInput.deltas = deltas\n  }\n\n  get weights() {\n    return this.recurrentInput.weights\n  }\n\n  set weights(weights) {\n    this.recurrentInput.weights = weights\n  }\n\n  validate() {\n    Base.prototype.validate.call(this)\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      )\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      )\n    }\n  }\n\n  setDimensions(width, height) {\n    this.width = width\n    this.height = height\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import zeros2D from '../utilities/zeros-2d'\nimport { Internal } from './types'\n\nexport default class RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null\n    this.width = width\n    this.height = height\n    this.weights = zeros2D(width, height)\n    this.deltas = zeros2D(width, height)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate)\n    this.deltas = zeros2D(this.width, this.height)\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`)\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`)\n  }\n}\n","import RecurrentConnection from './layer/recurrent-connection'\nimport RecurrentInput from './layer/recurrent-input'\nimport RecurrentZeros from './layer/recurrent-zeros'\nimport flattenLayers from './utilities/flatten-layers'\nimport mse2d from './utilities/mse-2d'\nimport FeedForward from './feed-forward'\n// import Base from './layer/base'\n\nexport default class Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    }\n  }\n\n  _connectLayers() {\n    const initialLayers = []\n    const inputLayer = this.inputLayer()\n    const hiddenLayers = this._connectHiddenLayers(inputLayer)\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1])\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    )\n    initialLayers.push(inputLayer)\n    initialLayers.push(...hiddenLayers)\n    initialLayers.push(outputLayer)\n    const flattenedLayers = flattenLayers(initialLayers)\n    this._inputLayers = flattenedLayers.slice(\n      0,\n      flattenedLayers.indexOf(inputLayer) + 1\n    )\n    this._hiddenLayers = [\n      flattenedLayers.slice(\n        flattenedLayers.indexOf(inputLayer) + 1,\n        flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n      ),\n    ]\n    this._outputLayers = flattenedLayers.slice(\n      flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n    )\n    this._outputLayers.unshift()\n    this._recurrentIndices = []\n    this._model = []\n    for (let i = 0; i < this._hiddenLayers[0].length; i++) {\n      if (\n        Object.getPrototypeOf(this._hiddenLayers[0][i].constructor).name ===\n        'Model'\n      ) {\n        this._model.push(this._hiddenLayers[0][i])\n        this._hiddenLayers[0].splice(i, 1)\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(\n        this._hiddenLayers[0].indexOf(hiddenLayers[i])\n      )\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = []\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros()\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i)\n      previousLayer = hiddenLayer\n      hiddenLayers.push(hiddenLayer)\n    }\n    return hiddenLayers\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = []\n    const previousHiddenLayers = this._hiddenLayers[\n      this._hiddenLayers.length - 1\n    ]\n    const firstLayer = this._hiddenLayers[0]\n    let recurrentIndex = 0\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i]\n      let layer = null\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer\n          layer = new previousHiddenLayer.constructor(inputLayer)\n          break\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer\n          layer = new previousHiddenLayer.constructor(settings, inputLayer)\n          break\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput()\n              layer.setDimensions(\n                previousHiddenLayer.width,\n                previousHiddenLayer.height\n              )\n              layer.setRecurrentInput(\n                previousHiddenLayers[this._recurrentIndices[recurrentIndex]]\n              )\n              recurrentIndex++\n              break\n          }\n          break\n        }\n        case 'Model': {\n          layer = previousHiddenLayer\n          break\n        }\n        case 'Modifier': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer\n          layer = new previousHiddenLayer.constructor(inputLayer)\n          break\n        }\n        case 'Operator': {\n          const inputLayer1 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)\n            ] || previousHiddenLayer.inputLayer1\n          const inputLayer2 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)\n            ] || previousHiddenLayer.inputLayer2\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2)\n          break\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousHiddenLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousHiddenLayer.constructor).name\n            }`\n          )\n      }\n\n      hiddenLayers[i] = layer\n    }\n    this._hiddenLayers.push(hiddenLayers)\n    return hiddenLayers\n  }\n\n  initialize() {\n    this._previousInputs = []\n    this._outputConnection = new RecurrentConnection()\n    this._connectLayers()\n    this.initializeLayers(this._model)\n    this.initializeLayers(this._inputLayers)\n    this.initializeLayers(this._hiddenLayers[0])\n    this.initializeLayers(this._outputLayers)\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep()\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i]\n      hiddenLayer.reuseKernels(this._hiddenLayers[0][i])\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayers[x]\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1]\n      this._outputConnection.setLayer(hiddenConnection)\n\n      this._inputLayers[0].predict([input[x]])\n      this._previousInputs.push(this._inputLayers[0].weights)\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict()\n      }\n      for (let i = 0; i < this._hiddenLayers[x].length; i++) {\n        this._hiddenLayers[x][i].predict()\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict()\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options)\n    this.initializeDeep()\n    return stats\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex]\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1]\n      this._outputConnection.setLayer(hiddenConnection)\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop()\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([target[x]])\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare()\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare()\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare()\n      }\n    }\n  }\n\n  _adjustWeights() {\n    for (\n      let hiddenLayersIndex = 0;\n      hiddenLayersIndex < this._hiddenLayers.length;\n      hiddenLayersIndex++\n    ) {\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex]\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1]\n      this._outputConnection.setLayer(hiddenConnection)\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn()\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn()\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn()\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn()\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input)\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1)\n    this._calculateDeltas(input.slice(1), 0)\n    this._adjustWeights()\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1]\n      return mse2d(\n        outputLayer.errors.hasOwnProperty('toArray')\n          ? outputLayer.errors.toArray()\n          : outputLayer.errors\n      )\n    }\n    return null\n  }\n}\n","import zeros from '../../utilities/zeros'\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nexport default class Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return\n    if (columns === undefined) return\n\n    this.rows = rows\n    this.columns = columns\n    this.weights = zeros(rows * columns)\n    this.deltas = zeros(rows * columns)\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed')\n    return this.weights[ix]\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed')\n    this.weights[ix] = v\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed')\n    this.deltas[ix] = v\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    }\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns)\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i] // copy over weights\n    }\n    return matrix\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length\n    const columns = weightRows[0].length\n    const m = new Matrix(rows, columns)\n\n    deltasRows = deltasRows || weightRows\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex]\n      const deltasValues = deltasRows[rowIndex]\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex])\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex])\n      }\n    }\n\n    return m\n  }\n\n  weightsToArray() {\n    const deltas = []\n    let row = 0\n    let column = 0\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([])\n      }\n      deltas[row].push(this.weights[i])\n      column++\n      if (column >= this.columns) {\n        column = 0\n        row++\n      }\n    }\n    return deltas\n  }\n\n  deltasToArray() {\n    const deltas = []\n    let row = 0\n    let column = 0\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([])\n      }\n      deltas[row].push(this.deltas[i])\n      column++\n      if (column >= this.columns) {\n        column = 0\n        row++\n      }\n    }\n    return deltas\n  }\n}\n","export function randomFloat(a, b) {\n  return Math.random() * (b - a) + a\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false\n    return gaussRandom.vVal\n  }\n  const u = 2 * Math.random() - 1\n  const v = 2 * Math.random() - 1\n  const r = u * u + v * v\n  if (r === 0 || r > 1) {\n    return gaussRandom()\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r)\n  gaussRandom.vVal = v * c // cache this\n  gaussRandom.returnV = true\n  return u * c\n}\n\nexport function randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a)\n}\n\nexport function randomN(mu, std) {\n  return mu + gaussRandom() * std\n}\n\ngaussRandom.returnV = false\ngaussRandom.vVal = 0\n","import Matrix from '.'\nimport { randomFloat } from '../../utilities/random'\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nexport default class RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns)\n    this.rows = rows\n    this.columns = columns\n    this.std = std\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std)\n    }\n  }\n}\n","import Matrix from '.'\nimport ones from '../../utilities/ones'\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nexport default class OnesMatrix extends Matrix {\n  constructor(rows, columns) {\n    super(rows, columns)\n    this.rows = rows\n    this.columns = columns\n    this.weights = ones(rows * columns)\n    this.deltas = ones(rows * columns)\n  }\n}\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function copy(product, left) {\n  product.rows = parseInt(left.rows, 10)\n  product.columns = parseInt(left.columns, 10)\n  product.weights = left.weights.slice(0)\n  product.deltas = left.deltas.slice(0)\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10)\n  product.columns = parseInt(left.columns, 10)\n  product.weights = left.weights.slice(0)\n  product.deltas = left.deltas.slice(0)\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i]\n    product.deltas[i] = 0\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i]\n    product.deltas[i] = 0\n  }\n}\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i]\n    right.deltas[i] = product.deltas[i]\n  }\n}\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nexport default function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1\n    product.deltas[i] = 0\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiply(product, left, right) {\n  const leftRows = left.rows\n  const leftColumns = left.columns\n  const rightColumns = right.columns\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow\n    const rightRowBase = rightColumns * leftRow\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn\n        const leftIndex = leftRowBase + leftColumn\n        const rightIndex = rightColumnBase + rightColumn\n        dot += left.weights[leftIndex] * right.weights[rightIndex]\n        left.deltas[leftIndex] = 0\n        right.deltas[rightIndex] = 0\n      }\n      product.weights[rightRowBase + rightColumn] = dot\n    }\n  }\n}\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyB(product, left, right) {\n  const leftRows = left.rows\n  const leftColumns = left.columns\n  const rightColumns = right.columns\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot\n    const rightRowBase = rightColumns * leftRowRoot\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn\n        const leftRow = leftRowBase + leftColumn\n        const rightRow = rightColumnBase + rightColumn\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn]\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue\n      }\n    }\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyElement(product, left, right) {\n  const { weights } = left\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i]\n    product.deltas[i] = 0\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i]\n    right.deltas[i] = left.weights[i] * product.deltas[i]\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]) // relu\n    product.deltas[i] = 0\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nexport default function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nexport default function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left\n  const rowBase = columns * rowPluckIndex\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column]\n    product.deltas[column] = 0\n  }\n}\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nexport default function rowPluckB(product, left, rowIndex) {\n  const { columns } = left\n  const rowBase = columns * rowIndex\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column]\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]))\n    product.deltas[i] = 0\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x))\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i]\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i]\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i])\n    product.deltas[i] = 0\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i]\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i]\n  }\n}\n","import Matrix from '.'\nimport OnesMatrix from './ones-matrix'\nimport copy from './copy'\nimport cloneNegative from './clone-negative'\nimport add from './add'\nimport addB from './add-b'\nimport allOnes from './all-ones'\nimport multiply from './multiply'\nimport multiplyB from './multiply-b'\nimport multiplyElement from './multiply-element'\nimport multiplyElementB from './multiply-element-b'\nimport relu from './relu'\nimport reluB from './relu-b'\nimport rowPluck from './row-pluck'\nimport rowPluckB from './row-pluck-b'\nimport sigmoid from './sigmoid'\nimport sigmoidB from './sigmoid-b'\nimport tanh from './tanh'\nimport tanhB from './tanh-b'\n\nexport default class Equation {\n  constructor() {\n    this.inputRow = 0\n    this.inputValue = null\n    this.states = []\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices')\n    }\n    const product = new Matrix(left.rows, left.columns)\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    })\n    return product\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns)\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    })\n    return product\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns)\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    })\n    return product\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices')\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    )\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices')\n    }\n    const product = new Matrix(left.rows, right.columns)\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    })\n    return product\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices')\n    }\n    const product = new Matrix(left.rows, left.columns)\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    })\n    return product\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns)\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    })\n    return product\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    const self = this\n    this.states.push({\n      product: input,\n      forwardFn: () => {\n        input.weights = self.inputValue\n      },\n    })\n    return input\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this\n    const product = new Matrix(m.columns, 1)\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    })\n    return product\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns)\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    })\n    return product\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns)\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    })\n    return product\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0\n    let iBackpropagate = 0\n    this.states.push({\n      forwardFn() {\n        iForward++\n      },\n      backpropagationFn() {\n        iBackpropagate++\n      },\n    })\n    return m\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  run(rowIndex = 0) {\n    this.inputRow = rowIndex\n    let state\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i]\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue\n      }\n      state.forwardFn(state.product, state.left, state.right)\n    }\n\n    return state.product\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue\n    let state\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i]\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue\n      }\n      state.forwardFn(state.product, state.left, state.right)\n    }\n\n    return state.product\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runBackpropagate(rowIndex = 0) {\n    this.inputRow = rowIndex\n\n    let i = this.states.length\n    let state\n    while (i-- > 0) {\n      state = this.states[i]\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue\n      }\n      state.backpropagationFn(state.product, state.left, state.right)\n    }\n\n    return state.product\n  }\n}\n","import { randomF as _randomF } from '../../utilities/random'\n\n// prevent parser from renaming when calling toString() method later\nconst randomF = _randomF\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nexport default function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomF(0, 1)\n  let x = 0\n  let i = 0\n  const w = m.weights\n\n  while (true) {\n    x += w[i]\n    if (x > r) {\n      return i\n    }\n    i++\n  }\n}\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nexport default function maxI(m) {\n  // argmax of array w\n  const { weights } = m\n  let maxv = weights[0]\n  let maxix = 0\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i]\n    if (v < maxv) continue\n\n    maxix = i\n    maxv = v\n  }\n  return maxix\n}\n","import Matrix from '.'\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nexport default function softmax(m) {\n  const result = new Matrix(m.rows, m.columns) // probability volume\n  let maxVal = -999999\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i]\n    }\n  }\n\n  let s = 0\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal)\n    s += result.weights[i]\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result\n}\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nexport default class DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return\n\n    this.values = values\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {}\n    this.characterTable = {}\n    this.characters = []\n    this.buildCharactersFromIterable(values)\n    this.buildTables(maxThreshold)\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {}\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex]\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex]\n          if (tempCharactersTable.hasOwnProperty(character)) continue\n          tempCharactersTable[character] = true\n          this.characters.push(character)\n        }\n      } else {\n        const character = values[dataFormatterIndex]\n        if (tempCharactersTable.hasOwnProperty(character)) continue\n        tempCharactersTable[dataFormatterIndex] = true\n        this.characters.push(character)\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex]\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex\n        this.characterTable[characterIndex] = character\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = []\n    const { indexTable } = this\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i]\n      const index = indexTable[character]\n      if (index === undefined) {\n        throw new Error(`unrecognized character \"${character}\"`)\n      }\n      if (index < maxThreshold) continue\n      result.push(index)\n    }\n\n    return result\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      )\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      )\n    }\n\n    if (value2 === null) return result\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold))\n    }\n    return result.concat(this.toIndexes(value2, maxThreshold))\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = []\n    const { characterTable } = this\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i]\n      if (index < maxThreshold) continue\n      const character = characterTable[index]\n      if (character === undefined) {\n        throw new Error(`unrecognized index \"${index}\"`)\n      }\n      result.push(character)\n    }\n\n    return result\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('')\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input')\n    this.addSpecial('start-output')\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i))\n    }\n    return new DataFormatter(values, maxThreshold)\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values)\n    dataFormatter.addInputOutput()\n    return dataFormatter\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string))\n    const dataFormatter = new DataFormatter(values, maxThreshold)\n    dataFormatter.addInputOutput()\n    return dataFormatter\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i).sort(),\n      maxThreshold\n    )\n    dataFormatter.addInputOutput()\n    return dataFormatter\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string))\n    return new DataFormatter(values, maxThreshold)\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter()\n    dataFormatter.indexTable = json.indexTable\n    dataFormatter.characterTable = json.characterTable\n    dataFormatter.values = json.values\n    dataFormatter.characters = json.characters\n    return dataFormatter\n  }\n\n  addSpecial(...args) {\n    for (let i = 0; i < args.length; i++) {\n      const special = args[i]\n      this.indexTable[special] = this.characters.length\n      const specialIndex = this.indexTable[special]\n      this.characterTable[specialIndex] = special\n      this.characters.push(special)\n    }\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\n${this.toIndexes\n      .toString()\n      .replace(/(let|var) indexTable = this[.]indexTable;\\n/, '')\n      .replace(/this[.]/g, '')}\n${this.toIndexesInputOutput.toString().replace(/this[.]/g, '')}\n${this.toCharacters\n      .toString()\n      .replace(/(let|var) characterTable = this[.]characterTable;\\n/g, '')\n      .replace(/this[.]/, '')}\n`\n  }\n}\n","import Matrix from './matrix'\nimport RandomMatrix from './matrix/random-matrix'\nimport Equation from './matrix/equation'\nimport sampleI from './matrix/sample-i'\nimport maxI from './matrix/max-i'\nimport softmax from './matrix/softmax'\nimport copy from './matrix/copy'\nimport { randomFloat } from '../utilities/random'\nimport zeros from '../utilities/zeros'\nimport DataFormatter from '../utilities/data-formatter'\n\nexport default class RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor\n\n    Object.assign(this, defaults, options)\n\n    this.stepCache = {}\n    this.runs = 0\n    this.totalCost = null\n    this.ratioClipped = null\n    this.model = null\n\n    this.initialLayerInputs = this.hiddenSizes.map(\n      () => new Matrix(this.hiddenSizes[0], 1)\n    )\n    this.inputLookup = null\n    this.outputLookup = null\n    this.initialize()\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n    }\n\n    if (this.dataFormatter !== null) {\n      this.outputSize = this.dataFormatter.characters.length\n      this.inputRange = this.outputSize\n      this.inputSize = this.inputRange\n    }\n\n    if (this.json) {\n      this.fromJSON(this.json)\n    } else {\n      this.mapModel()\n    }\n  }\n\n  createHiddenLayers() {\n    const { model, hiddenSizes } = this\n    const { hiddenLayers } = model\n    // 0 is end, so add 1 to offset\n    hiddenLayers.push(RNN.getModel(hiddenSizes[0], this.inputSize))\n    let prevSize = hiddenSizes[0]\n\n    for (let d = 1; d < hiddenSizes.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenSizes[d]\n      hiddenLayers.push(RNN.getModel(hiddenSize, prevSize))\n      prevSize = hiddenSize\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    }\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation)\n    const add = equation.add.bind(equation)\n    const multiply = equation.multiply.bind(equation)\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    )\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    )\n  }\n\n  createOutputMatrix() {\n    const { model, outputSize } = this.model\n    const lastHiddenSize = this.hiddenSizes[this.hiddenSizes.length - 1]\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    )\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1)\n  }\n\n  bindEquation() {\n    const { model, hiddenSizes } = this.model\n    const { hiddenLayers } = model\n    const equation = new Equation()\n    const outputs = []\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs\n\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      hiddenLayers[0]\n    )\n    outputs.push(output)\n    // 1+ indices\n    for (let i = 1, max = hiddenSizes.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        hiddenLayers[i]\n      )\n      outputs.push(output)\n    }\n\n    model.equationConnections.push(outputs)\n    equation.add(equation.multiply(model.outputConnector, output), model.output)\n    model.equations.push(equation)\n  }\n\n  mapModel() {\n    const { model } = this\n    const { hiddenLayers, allMatrices } = model\n\n    this.createInputMatrix()\n    if (!model.input) throw new Error('net.model.input not set')\n    allMatrices.push(model.input)\n\n    this.createHiddenLayers()\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set')\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      Object.values(hiddenLayers[i]).forEach(val => {\n        allMatrices.push(val)\n      })\n    }\n\n    this.createOutputMatrix()\n    if (!model.outputConnector)\n      throw new Error('net.model.outputConnector not set')\n    if (!model.output) throw new Error('net.model.output not set')\n\n    allMatrices.push(model.outputConnector)\n    allMatrices.push(model.output)\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number} [learningRate]\n   * @returns {number}\n   */\n  trainPattern(input, learningRate = null) {\n    const error = this.runInput(input)\n    this.runBackpropagate(input)\n    this.step(learningRate)\n    return error\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  runInput(input) {\n    this.runs++\n    const { model } = this\n    const max = input.length\n    let log2ppl = 0\n    let cost = 0\n    let equation\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation()\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1\n      equation = model.equations[equationIndex]\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1 // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1 // last step: end with END token\n      const output = equation.run(source)\n      // set gradients into log probabilities\n      const logProbabilities = output // interpret output as log probabilities\n      const probabilities = softmax(output) // compute the softmax probabilities\n\n      log2ppl += -Math.log2(probabilities.weights[target]) // accumulate base 2 log prob and do smoothing\n      cost += -Math.log(probabilities.weights[target])\n      // write gradients into log probabilities\n      logProbabilities.deltas = probabilities.weights.slice(0)\n      logProbabilities.deltas[target] -= 1\n    }\n\n    this.totalCost = cost\n    return 2 ** (log2ppl / (max - 1))\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  runBackpropagate(input) {\n    let i = input.length\n    const { model } = this\n    const { equations } = model\n    while (i > 0) {\n      equations[i].runBackpropagate(input[i - 1] + 1)\n      i--\n    }\n    equations[0].runBackpropagate(0)\n  }\n\n  /**\n   *\n   * @param {Number} [learningRate]\n   */\n  step(learningRate = null) {\n    // perform parameter update\n    // TODO: still not sure if this is ready for learningRate\n    const stepSize = learningRate || this.learningRate\n    const { regc, clipval, model } = this\n    let numClipped = 0\n    let numTot = 0\n    const { allMatrices } = model\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex]\n      const { weights, deltas } = matrix\n      if (!(matrixIndex in this.stepCache)) {\n        this.stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns)\n      }\n      const cache = this.stepCache[matrixIndex]\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i]\n        const w = weights[i]\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * this.decayRate + (1 - this.decayRate) * r * r\n        // gradient clip\n        if (r > clipval) {\n          r = clipval\n          numClipped++\n        }\n        if (r < -clipval) {\n          r = -clipval\n          numClipped++\n        }\n        numTot++\n        // update (and regularize)\n        weights[i] =\n          w + (-stepSize * r) / Math.sqrt(cache[i] + this.smoothEps) - regc * w\n      }\n    }\n    this.ratioClipped = numClipped / numTot\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`)\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Number} [maxPredictionLength]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(\n    rawInput = [],\n    maxPredictionLength = 100,\n    isSampleI = false,\n    temperature = 1\n  ) {\n    if (!this.isRunnable) return null\n    const input = this.formatDataIn(rawInput)\n    const { model } = this\n    const output = []\n    let i = 0\n    while (model.equations.length < maxPredictionLength) {\n      this.bindEquation()\n    }\n    while (true) {\n      /* eslint-disable */\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1]\n      /* eslint-enable */\n      const equation = model.equations[i]\n      // sample predicted letter\n      const outputMatrix = equation.run(previousIndex)\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      )\n      copy(logProbabilities, outputMatrix)\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature\n        }\n      }\n\n      const probs = softmax(logProbabilities)\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs)\n\n      i++\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break\n      }\n\n      output.push(nextIndex)\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output.slice(input.length).map(value => value - 1)\n    )\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    options = Object.assign({}, this.constructor.trainDefaults, options)\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = options\n\n    const log = options.log === true ? console.log : options.log\n    const learningRate = options.learningRate || this.learningRate\n    let error = Infinity\n    let i\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data)\n    }\n\n    if (!options.keepNetworkIntact) {\n      this.initialize()\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], learningRate)\n        sum += err\n      }\n      error = sum / data.length\n\n      if (Number.isNaN(error))\n        throw new Error(\n          'network error rate is unexpected NaN, check network configurations and try again'\n        )\n      if (log && i % logPeriod === 0) {\n        log('iterations:', i, 'training error:', error)\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i })\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`)\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const { defaults } = this.constructor\n    const { model } = this\n    const options = {}\n\n    Object.keys(defaults).forEach(p => {\n      options[p] = this[p]\n    })\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map(hiddenLayer => {\n        const layers = {}\n\n        Object.keys(hiddenLayer).forEach(p => {\n          layers[p] = hiddenLayer[p].toJSON()\n        })\n\n        return layers\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    }\n  }\n\n  toJSONString() {\n    return JSON.stringify(this.toJSON())\n  }\n\n  fromJSON(json) {\n    this.json = json\n    const { defaults } = this.constructor\n    const { model } = this.model\n    const { options } = json\n    const { allMatrices } = model\n\n    model.input = Matrix.fromJSON(json.input)\n    allMatrices.push(model.input)\n    model.hiddenLayers = json.hiddenLayers.map(hiddenLayer => {\n      const layers = {}\n\n      Object.keys(hiddenLayer).forEach(p => {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p])\n        allMatrices.push(layers[p])\n      })\n\n      return layers\n    })\n    model.outputConnector = Matrix.fromJSON(json.outputConnector)\n    model.output = Matrix.fromJSON(json.output)\n    allMatrices.push(model.outputConnector)\n    allMatrices.push(model.output)\n\n    Object.keys(defaults).forEach(p => {\n      this[p] = options.hasOwnProperty(p) ? options[p] : defaults[p]\n    })\n\n    if (\n      options.hasOwnProperty('dataFormatter') &&\n      options.dataFormatter !== null\n    ) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter)\n      delete options.dataFormatter\n    }\n\n    this.bindEquation()\n  }\n\n  fromJSONString(json) {\n    return this.fromJSON(JSON.parse(json))\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const { model } = this\n    const { equations } = this.model\n    const equation = equations[1]\n    const { states } = equation\n    const jsonString = JSON.stringify(this.toJSON())\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0]\n      const { states0 } = equations[0]\n      for (let i = 0, max = states0.length; i < max; i++) {\n        if (states0[i].product === m) {\n          return i\n        }\n      }\n      return connection.indexOf(m)\n    }\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i]\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m)\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${\n                  m.rows\n                }, ${m.columns})`\n              }\n\n              break\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${\n                  m.rows\n                }, ${m.columns})`\n              }\n              break\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`\n            default:\n              throw Error('unknown state')\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`\n        if (m === state.right) return `states[${i}].right`\n        if (m === state.left) return `states[${i}].left`\n      }\n\n      return null\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null'\n\n      if (m === model.input) return `json.input`\n      if (m === model.outputConnector) return `json.outputConnector`\n      if (m === model.output) return `json.output`\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i]\n\n        // eslint-disable-next-line\n        Object.keys(hiddenLayer).forEach(p => {\n          if (hiddenLayer[p] === m) {\n            return `json.hiddenLayers[${i}].${p}`\n          }\n        })\n      }\n\n      return matrixOrigin(m, stateIndex)\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{')\n      fnString.shift()\n      // body }\n      fnString = fnString.join('{')\n      fnString = fnString.split('}')\n      fnString.pop()\n      // body\n      return fnString\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '')\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${fnName.replace(\n        /[A-Z]/g,\n        value => `-${value.toLowerCase()}`\n      )}.js`\n    }\n\n    const statesRaw = []\n    const usedFunctionNames = {}\n    const innerFunctionsSwitch = []\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i]\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${matrixToString(state.left, i)},\n      right: ${matrixToString(state.right, i)},\n      product: ${matrixToString(state.product, i)}\n    }`)\n\n      const fnName = state.forwardFn.name\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        )\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof maxPredictionLength === 'undefined') maxPredictionLength = 100;\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  ${this.dataFormatter !== null ? this.dataFormatter.toFunctionString() : ''}\n\n  var input = ${\n    this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var json = ${jsonString};\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n      ? `function formatDataIn(input, output) { ${toInner(\n          this.formatDataIn.toString()\n        )\n          .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n          .replace(/this[.]dataFormatter[.]/g, '')\n          .replace(/this[.]dataFormatter/g, 'true')} }`\n      : ''\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `function formatDataOut(input, output) { ${toInner(\n          this.formatDataOut.toString()\n        )\n          .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n          .replace(/this[.]dataFormatter[.]/g, '')\n          .replace(/this[.]dataFormatter/g, 'true')} }`\n      : ''\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'maxPredictionLength',\n      'isSampleI',\n      'temperature',\n      src\n    )\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenSizes: [20, 20],\n  outputSize: 20,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  json: null,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData(data) {\n    if (\n      typeof data[0] !== 'string' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data\n    }\n    const values = []\n    const result = []\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (this.dataFormatter === null) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i])\n        }\n        this.dataFormatter = new DataFormatter(values)\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i]))\n      }\n    } else {\n      if (this.dataFormatter === null) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i].input)\n          values.push(data[i].output)\n        }\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values)\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i].input, data[i].output))\n      }\n    }\n    return result\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn(input, output = null) {\n    if (this.dataFormatter !== null) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output)\n      }\n      return this.dataFormatter.toIndexes(input)\n    }\n    return input\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut(input, output) {\n    if (this.dataFormatter !== null) {\n      return this.dataFormatter.toCharacters(output).join('')\n    }\n    return output\n  },\n  dataFormatter: null,\n}\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callback: null,\n  callbackPeriod: 10,\n  keepNetworkIntact: false,\n}\n","import Matrix from './matrix'\nimport RandomMatrix from './matrix/random-matrix'\nimport Equation from './matrix/equation'\nimport RNN from './rnn'\n\nexport default class RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options)\n  }\n\n  createInputMatrix() {\n    this.model.input = new RandomMatrix(this.inputSize, 1, 0.08)\n  }\n\n  createOutputMatrix() {\n    const { model, outputSize } = this\n    const lastHiddenSize = this.hiddenSizes[this.hiddenSizes.length - 1]\n\n    // whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08)\n    // bd\n    model.output = new Matrix(outputSize, 1)\n  }\n\n  bindEquation() {\n    const { model, hiddenSizes } = this\n    const { hiddenLayers } = model\n    const equation = new Equation()\n    const outputs = []\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs\n\n    // 0 index\n    let output = RNNTimeStep.getEquation(\n      equation,\n      equation.input(model.input),\n      equationConnection[0],\n      hiddenLayers[0]\n    )\n    outputs.push(output)\n    // 1+ indices\n    for (let i = 1, max = hiddenSizes.length; i < max; i++) {\n      output = RNNTimeStep.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        hiddenLayers[i]\n      )\n      outputs.push(output)\n    }\n\n    model.equationConnections.push(outputs)\n    equation.add(equation.multiply(model.outputConnector, output), model.output)\n    model.equations.push(equation)\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  runInput(input) {\n    this.runs++\n    const { model } = this\n    let errorSum = 0\n    let equation\n    while (model.equations.length < input.length - 1) {\n      this.bindEquation()\n    }\n    const outputs = []\n\n    if (this.inputSize === 1) {\n      for (\n        let inputIndex = 0, max = input.length - 1;\n        inputIndex < max;\n        inputIndex++\n      ) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex]\n\n        const current = input[inputIndex]\n        const next = input[inputIndex + 1]\n        const output = equation.runInput([current])\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next\n          // set gradients into log probabilities\n          errorSum += Math.abs(error)\n\n          // write gradients into log probabilities\n          output.deltas[i] = error\n          outputs.push(output.weights)\n        }\n      }\n    } else {\n      for (\n        let inputIndex = 0, max = input.length - 1;\n        inputIndex < max;\n        inputIndex++\n      ) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex]\n\n        const current = input[inputIndex]\n        const next = input[inputIndex + 1]\n        const output = equation.runInput(current)\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next[i]\n          // set gradients into log probabilities\n          errorSum += Math.abs(error)\n\n          // write gradients into log probabilities\n          output.deltas[i] = error\n          outputs.push(output.weights)\n        }\n      }\n    }\n    // this.model.equations.length - 1;\n    this.totalCost = errorSum\n    return errorSum\n  }\n\n  runBackpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].runBackpropagate()\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]|Number} [input]\n   * @param {Number} [maxPredictionLength]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {Number[]|Number}\n   */\n  run(\n    input = [],\n    maxPredictionLength = 1 /* , isSampleI = false, temperature = 1 */\n  ) {\n    if (!this.isRunnable) return null\n    const { model } = this\n    while (model.equations.length < maxPredictionLength) {\n      this.bindEquation()\n    }\n    let lastOutput\n    if (this.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        const outputMatrix = model.equations[i].runInput([input[i]])\n        lastOutput = outputMatrix.weights\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        const outputMatrix = model.equations[i].runInput(input[i])\n        lastOutput = outputMatrix.weights\n      }\n    }\n    if (this.outputSize === 1) {\n      return lastOutput[0]\n    }\n    return lastOutput\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    )\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenSizes: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  json: null,\n  dataFormatter: null,\n}\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults\n","import Matrix from './matrix'\nimport RandomMatrix from './matrix/random-matrix'\nimport RNN from './rnn'\n\nexport default class LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    }\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation)\n    const add = equation.add.bind(equation)\n    const multiply = equation.multiply.bind(equation)\n    const multiplyElement = equation.multiplyElement.bind(equation)\n    const tanh = equation.tanh.bind(equation)\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    )\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    )\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    )\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    )\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult) // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite) // what do we write to cell\n    const cell = add(retainCell, writeCell) // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell))\n  }\n}\n","import Matrix from './matrix'\nimport LSTM from './lstm'\nimport RNNTimeStep from './rnn-time-step'\n\nexport default class LSTMTimeStep extends RNNTimeStep {\n  getModel(hiddenSize, prevSize) {\n    return LSTM.prototype.getModel.call(this, hiddenSize, prevSize)\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.prototype.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    )\n  }\n}\n","import Matrix from './matrix'\nimport RandomMatrix from './matrix/random-matrix'\nimport RNN from './rnn'\n\nexport default class GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    }\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation)\n    const add = equation.add.bind(equation)\n    const multiply = equation.multiply.bind(equation)\n    const multiplyElement = equation.multiplyElement.bind(equation)\n    const tanh = equation.tanh.bind(equation)\n    const allOnes = equation.allOnes.bind(equation)\n    const cloneNegative = equation.cloneNegative.bind(equation)\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    )\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    )\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    )\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    )\n  }\n}\n","// import Matrix from './matrix'\nimport GRU from './gru'\nimport RNNTimeStep from './rnn-time-step'\n\nexport default class GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.prototype.getModel(hiddenSize, prevSize)\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.prototype.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    )\n  }\n}\n","import { add, multiply, random, sigmoid } from './index'\n\nexport default function feedForward(settings, input) {\n  const { height } = settings\n  const weights = random({ name: 'weights', height, width: input.height })\n  const biases = random({ name: 'biases', height })\n\n  return sigmoid(add(multiply(weights, input), biases))\n}\n","import {\n  add,\n  negative,\n  multiply,\n  multiplyElement,\n  ones,\n  sigmoid,\n  random,\n  tanh,\n  zeros,\n} from '.'\n\nexport default (settings, recurrentInput, input) => {\n  const { height } = settings\n  const updateGateWeights = random({ height, width: input.height })\n  const updateGatePeepholes = random({ width: height, height })\n  const updateGateBias = zeros({ height })\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  )\n\n  const resetGateWeights = random({ height, width: input.height })\n  const resetGatePeepholes = random({ width: height, height })\n  const resetGateBias = zeros({ height })\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  )\n\n  const cellWeights = random({ height, width: input.height })\n  const cellPeepholes = random({ width: height, height })\n  const cellBias = zeros({ height })\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  )\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  )\n}\n","import {\n  add,\n  multiply,\n  multiplyElement,\n  random,\n  sigmoid,\n  tanh,\n  zeros,\n} from './index'\n\nexport default (settings, recurrentInput, input) => {\n  const { height } = settings\n  const inputGateWeights = random({ height, width: input.height })\n  const inputGatePeepholes = random({ width: height, height })\n  const inputGateBias = zeros({ height })\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  )\n\n  const forgetGateWeights = random({ height, width: input.height })\n  const forgetGatePeepholes = random({ width: height, height })\n  const forgetGateBias = zeros({ height })\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  )\n\n  const outputGateWeights = random({ height, width: input.height })\n  const outputGatePeepholes = random({ width: height, height })\n  const outputGateBias = zeros({ height })\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  )\n\n  const memoryWeights = random({ height, width: input.height })\n  const memoryPeepholes = random({ width: height, height })\n  const memoryBias = zeros({ height })\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  )\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, input) // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory) // what do we write to cell\n  const cell = add(retainCell, writeCell) // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell))\n}\n","import { relu, add, multiply, random, zeros } from '.'\n\nexport default (settings, input, recurrentInput) => {\n  const { height } = settings\n\n  recurrentInput.setDimensions(1, height)\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height })\n  // whh\n  const transition = random({ name: 'transition', height, width: height })\n  // bhh\n  const bias = zeros({ name: 'bias', height })\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  )\n}\n","import { add, multiply, random, target, zeros } from '.'\n\nexport default (settings, inputLayer) => {\n  const { height } = settings\n  const outputGate = random({ height, width: inputLayer.height })\n  const output = zeros({ height })\n  const outputGateConnector = multiply(outputGate, inputLayer)\n  return target(settings, add(outputGateConnector, output))\n}\n","import activation from './activation'\nimport crossValidate from './cross-validate'\nimport * as layer from './layer'\nimport likely from './likely'\nimport lookup from './lookup'\nimport praxis from './praxis'\nimport FeedForward from './feed-forward'\nimport NeuralNetwork from './neural-network'\nimport NeuralNetworkGPU from './neural-network-gpu'\nimport TrainStream from './train-stream'\nimport Recurrent from './recurrent'\nimport RNNTimeStep from './recurrent/rnn-time-step'\nimport LSTMTimeStep from './recurrent/lstm-time-step'\nimport GRUTimeStep from './recurrent/gru-time-step'\nimport RNN from './recurrent/rnn'\nimport LSTM from './recurrent/lstm'\nimport GRU from './recurrent/gru'\nimport max from './utilities/max'\nimport mse from './utilities/mse'\nimport ones from './utilities/ones'\nimport random from './utilities/random'\nimport randomWeight from './utilities/random-weight'\nimport randos from './utilities/randos'\nimport range from './utilities/range'\nimport toArray from './utilities/to-array'\nimport DataFormatter from './utilities/data-formatter'\nimport zeros from './utilities/zeros'\n\n// layer deps\nimport feedForward from './layer/feed-forward'\nimport gru from './layer/gru'\nimport lstm from './layer/lstm'\nimport recurrent from './layer/recurrent'\nimport output from './layer/output'\n\nlayer.feedForward = feedForward\nlayer.gru = gru\nlayer.lstm = lstm\nlayer.recurrent = recurrent\nlayer.output = output\n\nconst brain = {\n  activation,\n  crossValidate,\n  likely,\n  layer,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n  },\n}\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain\n}\n"]}